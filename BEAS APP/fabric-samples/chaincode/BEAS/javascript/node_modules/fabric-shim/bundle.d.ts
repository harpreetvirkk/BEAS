import * as $protobuf from "protobufjs";
/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of an Empty. */
        interface IEmpty {
        }

        /** Represents an Empty. */
        class Empty implements IEmpty {

            /**
             * Constructs a new Empty.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEmpty);

            /**
             * Creates a new Empty instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Empty instance
             */
            public static create(properties?: google.protobuf.IEmpty): google.protobuf.Empty;

            /**
             * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
             * @param message Empty message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEmpty, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
             * @param message Empty message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEmpty, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Empty message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Empty
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Empty;

            /**
             * Decodes an Empty message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Empty
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Empty;

            /**
             * Verifies an Empty message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Empty message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Empty
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Empty;

            /**
             * Creates a plain object from an Empty message. Also converts values to other types if specified.
             * @param message Empty
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Empty, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Empty to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Timestamp. */
        interface ITimestamp {

            /** Timestamp seconds */
            seconds?: (number|Long|null);

            /** Timestamp nanos */
            nanos?: (number|null);
        }

        /** Represents a Timestamp. */
        class Timestamp implements ITimestamp {

            /**
             * Constructs a new Timestamp.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ITimestamp);

            /** Timestamp seconds. */
            public seconds: (number|Long);

            /** Timestamp nanos. */
            public nanos: number;

            /**
             * Creates a new Timestamp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Timestamp instance
             */
            public static create(properties?: google.protobuf.ITimestamp): google.protobuf.Timestamp;

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Timestamp;

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Timestamp;

            /**
             * Verifies a Timestamp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Timestamp
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Timestamp;

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @param message Timestamp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Timestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Timestamp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Namespace msp. */
export namespace msp {

    /** Properties of a MSPConfig. */
    interface IMSPConfig {

        /** MSPConfig type */
        type?: (number|null);

        /** MSPConfig config */
        config?: (Uint8Array|null);
    }

    /** Represents a MSPConfig. */
    class MSPConfig implements IMSPConfig {

        /**
         * Constructs a new MSPConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.IMSPConfig);

        /** MSPConfig type. */
        public type: number;

        /** MSPConfig config. */
        public config: Uint8Array;

        /**
         * Creates a new MSPConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MSPConfig instance
         */
        public static create(properties?: msp.IMSPConfig): msp.MSPConfig;

        /**
         * Encodes the specified MSPConfig message. Does not implicitly {@link msp.MSPConfig.verify|verify} messages.
         * @param message MSPConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.IMSPConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MSPConfig message, length delimited. Does not implicitly {@link msp.MSPConfig.verify|verify} messages.
         * @param message MSPConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.IMSPConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MSPConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MSPConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.MSPConfig;

        /**
         * Decodes a MSPConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MSPConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.MSPConfig;

        /**
         * Verifies a MSPConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MSPConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MSPConfig
         */
        public static fromObject(object: { [k: string]: any }): msp.MSPConfig;

        /**
         * Creates a plain object from a MSPConfig message. Also converts values to other types if specified.
         * @param message MSPConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.MSPConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MSPConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FabricMSPConfig. */
    interface IFabricMSPConfig {

        /** FabricMSPConfig name */
        name?: (string|null);

        /** FabricMSPConfig rootCerts */
        rootCerts?: (Uint8Array[]|null);

        /** FabricMSPConfig intermediateCerts */
        intermediateCerts?: (Uint8Array[]|null);

        /** FabricMSPConfig admins */
        admins?: (Uint8Array[]|null);

        /** FabricMSPConfig revocationList */
        revocationList?: (Uint8Array[]|null);

        /** FabricMSPConfig signingIdentity */
        signingIdentity?: (msp.ISigningIdentityInfo|null);

        /** FabricMSPConfig organizationalUnitIdentifiers */
        organizationalUnitIdentifiers?: (msp.IFabricOUIdentifier[]|null);

        /** FabricMSPConfig cryptoConfig */
        cryptoConfig?: (msp.IFabricCryptoConfig|null);

        /** FabricMSPConfig tlsRootCerts */
        tlsRootCerts?: (Uint8Array[]|null);

        /** FabricMSPConfig tlsIntermediateCerts */
        tlsIntermediateCerts?: (Uint8Array[]|null);

        /** FabricMSPConfig fabricNodeOus */
        fabricNodeOus?: (msp.IFabricNodeOUs|null);
    }

    /** Represents a FabricMSPConfig. */
    class FabricMSPConfig implements IFabricMSPConfig {

        /**
         * Constructs a new FabricMSPConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.IFabricMSPConfig);

        /** FabricMSPConfig name. */
        public name: string;

        /** FabricMSPConfig rootCerts. */
        public rootCerts: Uint8Array[];

        /** FabricMSPConfig intermediateCerts. */
        public intermediateCerts: Uint8Array[];

        /** FabricMSPConfig admins. */
        public admins: Uint8Array[];

        /** FabricMSPConfig revocationList. */
        public revocationList: Uint8Array[];

        /** FabricMSPConfig signingIdentity. */
        public signingIdentity?: (msp.ISigningIdentityInfo|null);

        /** FabricMSPConfig organizationalUnitIdentifiers. */
        public organizationalUnitIdentifiers: msp.IFabricOUIdentifier[];

        /** FabricMSPConfig cryptoConfig. */
        public cryptoConfig?: (msp.IFabricCryptoConfig|null);

        /** FabricMSPConfig tlsRootCerts. */
        public tlsRootCerts: Uint8Array[];

        /** FabricMSPConfig tlsIntermediateCerts. */
        public tlsIntermediateCerts: Uint8Array[];

        /** FabricMSPConfig fabricNodeOus. */
        public fabricNodeOus?: (msp.IFabricNodeOUs|null);

        /**
         * Creates a new FabricMSPConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FabricMSPConfig instance
         */
        public static create(properties?: msp.IFabricMSPConfig): msp.FabricMSPConfig;

        /**
         * Encodes the specified FabricMSPConfig message. Does not implicitly {@link msp.FabricMSPConfig.verify|verify} messages.
         * @param message FabricMSPConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.IFabricMSPConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FabricMSPConfig message, length delimited. Does not implicitly {@link msp.FabricMSPConfig.verify|verify} messages.
         * @param message FabricMSPConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.IFabricMSPConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FabricMSPConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FabricMSPConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.FabricMSPConfig;

        /**
         * Decodes a FabricMSPConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FabricMSPConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.FabricMSPConfig;

        /**
         * Verifies a FabricMSPConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FabricMSPConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FabricMSPConfig
         */
        public static fromObject(object: { [k: string]: any }): msp.FabricMSPConfig;

        /**
         * Creates a plain object from a FabricMSPConfig message. Also converts values to other types if specified.
         * @param message FabricMSPConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.FabricMSPConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FabricMSPConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FabricCryptoConfig. */
    interface IFabricCryptoConfig {

        /** FabricCryptoConfig signatureHashFamily */
        signatureHashFamily?: (string|null);

        /** FabricCryptoConfig identityIdentifierHashFunction */
        identityIdentifierHashFunction?: (string|null);
    }

    /** Represents a FabricCryptoConfig. */
    class FabricCryptoConfig implements IFabricCryptoConfig {

        /**
         * Constructs a new FabricCryptoConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.IFabricCryptoConfig);

        /** FabricCryptoConfig signatureHashFamily. */
        public signatureHashFamily: string;

        /** FabricCryptoConfig identityIdentifierHashFunction. */
        public identityIdentifierHashFunction: string;

        /**
         * Creates a new FabricCryptoConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FabricCryptoConfig instance
         */
        public static create(properties?: msp.IFabricCryptoConfig): msp.FabricCryptoConfig;

        /**
         * Encodes the specified FabricCryptoConfig message. Does not implicitly {@link msp.FabricCryptoConfig.verify|verify} messages.
         * @param message FabricCryptoConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.IFabricCryptoConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FabricCryptoConfig message, length delimited. Does not implicitly {@link msp.FabricCryptoConfig.verify|verify} messages.
         * @param message FabricCryptoConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.IFabricCryptoConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FabricCryptoConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FabricCryptoConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.FabricCryptoConfig;

        /**
         * Decodes a FabricCryptoConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FabricCryptoConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.FabricCryptoConfig;

        /**
         * Verifies a FabricCryptoConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FabricCryptoConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FabricCryptoConfig
         */
        public static fromObject(object: { [k: string]: any }): msp.FabricCryptoConfig;

        /**
         * Creates a plain object from a FabricCryptoConfig message. Also converts values to other types if specified.
         * @param message FabricCryptoConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.FabricCryptoConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FabricCryptoConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IdemixMSPConfig. */
    interface IIdemixMSPConfig {

        /** IdemixMSPConfig name */
        name?: (string|null);

        /** IdemixMSPConfig ipk */
        ipk?: (Uint8Array|null);

        /** IdemixMSPConfig signer */
        signer?: (msp.IIdemixMSPSignerConfig|null);

        /** IdemixMSPConfig revocationPk */
        revocationPk?: (Uint8Array|null);

        /** IdemixMSPConfig epoch */
        epoch?: (number|Long|null);
    }

    /** Represents an IdemixMSPConfig. */
    class IdemixMSPConfig implements IIdemixMSPConfig {

        /**
         * Constructs a new IdemixMSPConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.IIdemixMSPConfig);

        /** IdemixMSPConfig name. */
        public name: string;

        /** IdemixMSPConfig ipk. */
        public ipk: Uint8Array;

        /** IdemixMSPConfig signer. */
        public signer?: (msp.IIdemixMSPSignerConfig|null);

        /** IdemixMSPConfig revocationPk. */
        public revocationPk: Uint8Array;

        /** IdemixMSPConfig epoch. */
        public epoch: (number|Long);

        /**
         * Creates a new IdemixMSPConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IdemixMSPConfig instance
         */
        public static create(properties?: msp.IIdemixMSPConfig): msp.IdemixMSPConfig;

        /**
         * Encodes the specified IdemixMSPConfig message. Does not implicitly {@link msp.IdemixMSPConfig.verify|verify} messages.
         * @param message IdemixMSPConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.IIdemixMSPConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IdemixMSPConfig message, length delimited. Does not implicitly {@link msp.IdemixMSPConfig.verify|verify} messages.
         * @param message IdemixMSPConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.IIdemixMSPConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IdemixMSPConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IdemixMSPConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.IdemixMSPConfig;

        /**
         * Decodes an IdemixMSPConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IdemixMSPConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.IdemixMSPConfig;

        /**
         * Verifies an IdemixMSPConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IdemixMSPConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IdemixMSPConfig
         */
        public static fromObject(object: { [k: string]: any }): msp.IdemixMSPConfig;

        /**
         * Creates a plain object from an IdemixMSPConfig message. Also converts values to other types if specified.
         * @param message IdemixMSPConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.IdemixMSPConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IdemixMSPConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IdemixMSPSignerConfig. */
    interface IIdemixMSPSignerConfig {

        /** IdemixMSPSignerConfig cred */
        cred?: (Uint8Array|null);

        /** IdemixMSPSignerConfig sk */
        sk?: (Uint8Array|null);

        /** IdemixMSPSignerConfig organizationalUnitIdentifier */
        organizationalUnitIdentifier?: (string|null);

        /** IdemixMSPSignerConfig role */
        role?: (number|null);

        /** IdemixMSPSignerConfig enrollmentId */
        enrollmentId?: (string|null);

        /** IdemixMSPSignerConfig credentialRevocationInformation */
        credentialRevocationInformation?: (Uint8Array|null);
    }

    /** Represents an IdemixMSPSignerConfig. */
    class IdemixMSPSignerConfig implements IIdemixMSPSignerConfig {

        /**
         * Constructs a new IdemixMSPSignerConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.IIdemixMSPSignerConfig);

        /** IdemixMSPSignerConfig cred. */
        public cred: Uint8Array;

        /** IdemixMSPSignerConfig sk. */
        public sk: Uint8Array;

        /** IdemixMSPSignerConfig organizationalUnitIdentifier. */
        public organizationalUnitIdentifier: string;

        /** IdemixMSPSignerConfig role. */
        public role: number;

        /** IdemixMSPSignerConfig enrollmentId. */
        public enrollmentId: string;

        /** IdemixMSPSignerConfig credentialRevocationInformation. */
        public credentialRevocationInformation: Uint8Array;

        /**
         * Creates a new IdemixMSPSignerConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IdemixMSPSignerConfig instance
         */
        public static create(properties?: msp.IIdemixMSPSignerConfig): msp.IdemixMSPSignerConfig;

        /**
         * Encodes the specified IdemixMSPSignerConfig message. Does not implicitly {@link msp.IdemixMSPSignerConfig.verify|verify} messages.
         * @param message IdemixMSPSignerConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.IIdemixMSPSignerConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IdemixMSPSignerConfig message, length delimited. Does not implicitly {@link msp.IdemixMSPSignerConfig.verify|verify} messages.
         * @param message IdemixMSPSignerConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.IIdemixMSPSignerConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IdemixMSPSignerConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IdemixMSPSignerConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.IdemixMSPSignerConfig;

        /**
         * Decodes an IdemixMSPSignerConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IdemixMSPSignerConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.IdemixMSPSignerConfig;

        /**
         * Verifies an IdemixMSPSignerConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IdemixMSPSignerConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IdemixMSPSignerConfig
         */
        public static fromObject(object: { [k: string]: any }): msp.IdemixMSPSignerConfig;

        /**
         * Creates a plain object from an IdemixMSPSignerConfig message. Also converts values to other types if specified.
         * @param message IdemixMSPSignerConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.IdemixMSPSignerConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IdemixMSPSignerConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SigningIdentityInfo. */
    interface ISigningIdentityInfo {

        /** SigningIdentityInfo publicSigner */
        publicSigner?: (Uint8Array|null);

        /** SigningIdentityInfo privateSigner */
        privateSigner?: (msp.IKeyInfo|null);
    }

    /** Represents a SigningIdentityInfo. */
    class SigningIdentityInfo implements ISigningIdentityInfo {

        /**
         * Constructs a new SigningIdentityInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.ISigningIdentityInfo);

        /** SigningIdentityInfo publicSigner. */
        public publicSigner: Uint8Array;

        /** SigningIdentityInfo privateSigner. */
        public privateSigner?: (msp.IKeyInfo|null);

        /**
         * Creates a new SigningIdentityInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SigningIdentityInfo instance
         */
        public static create(properties?: msp.ISigningIdentityInfo): msp.SigningIdentityInfo;

        /**
         * Encodes the specified SigningIdentityInfo message. Does not implicitly {@link msp.SigningIdentityInfo.verify|verify} messages.
         * @param message SigningIdentityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.ISigningIdentityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SigningIdentityInfo message, length delimited. Does not implicitly {@link msp.SigningIdentityInfo.verify|verify} messages.
         * @param message SigningIdentityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.ISigningIdentityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SigningIdentityInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SigningIdentityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.SigningIdentityInfo;

        /**
         * Decodes a SigningIdentityInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SigningIdentityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.SigningIdentityInfo;

        /**
         * Verifies a SigningIdentityInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SigningIdentityInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SigningIdentityInfo
         */
        public static fromObject(object: { [k: string]: any }): msp.SigningIdentityInfo;

        /**
         * Creates a plain object from a SigningIdentityInfo message. Also converts values to other types if specified.
         * @param message SigningIdentityInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.SigningIdentityInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SigningIdentityInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KeyInfo. */
    interface IKeyInfo {

        /** KeyInfo keyIdentifier */
        keyIdentifier?: (string|null);

        /** KeyInfo keyMaterial */
        keyMaterial?: (Uint8Array|null);
    }

    /** Represents a KeyInfo. */
    class KeyInfo implements IKeyInfo {

        /**
         * Constructs a new KeyInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.IKeyInfo);

        /** KeyInfo keyIdentifier. */
        public keyIdentifier: string;

        /** KeyInfo keyMaterial. */
        public keyMaterial: Uint8Array;

        /**
         * Creates a new KeyInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeyInfo instance
         */
        public static create(properties?: msp.IKeyInfo): msp.KeyInfo;

        /**
         * Encodes the specified KeyInfo message. Does not implicitly {@link msp.KeyInfo.verify|verify} messages.
         * @param message KeyInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.IKeyInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeyInfo message, length delimited. Does not implicitly {@link msp.KeyInfo.verify|verify} messages.
         * @param message KeyInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.IKeyInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeyInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeyInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.KeyInfo;

        /**
         * Decodes a KeyInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeyInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.KeyInfo;

        /**
         * Verifies a KeyInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeyInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeyInfo
         */
        public static fromObject(object: { [k: string]: any }): msp.KeyInfo;

        /**
         * Creates a plain object from a KeyInfo message. Also converts values to other types if specified.
         * @param message KeyInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.KeyInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeyInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FabricOUIdentifier. */
    interface IFabricOUIdentifier {

        /** FabricOUIdentifier certificate */
        certificate?: (Uint8Array|null);

        /** FabricOUIdentifier organizationalUnitIdentifier */
        organizationalUnitIdentifier?: (string|null);
    }

    /** Represents a FabricOUIdentifier. */
    class FabricOUIdentifier implements IFabricOUIdentifier {

        /**
         * Constructs a new FabricOUIdentifier.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.IFabricOUIdentifier);

        /** FabricOUIdentifier certificate. */
        public certificate: Uint8Array;

        /** FabricOUIdentifier organizationalUnitIdentifier. */
        public organizationalUnitIdentifier: string;

        /**
         * Creates a new FabricOUIdentifier instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FabricOUIdentifier instance
         */
        public static create(properties?: msp.IFabricOUIdentifier): msp.FabricOUIdentifier;

        /**
         * Encodes the specified FabricOUIdentifier message. Does not implicitly {@link msp.FabricOUIdentifier.verify|verify} messages.
         * @param message FabricOUIdentifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.IFabricOUIdentifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FabricOUIdentifier message, length delimited. Does not implicitly {@link msp.FabricOUIdentifier.verify|verify} messages.
         * @param message FabricOUIdentifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.IFabricOUIdentifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FabricOUIdentifier message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FabricOUIdentifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.FabricOUIdentifier;

        /**
         * Decodes a FabricOUIdentifier message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FabricOUIdentifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.FabricOUIdentifier;

        /**
         * Verifies a FabricOUIdentifier message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FabricOUIdentifier message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FabricOUIdentifier
         */
        public static fromObject(object: { [k: string]: any }): msp.FabricOUIdentifier;

        /**
         * Creates a plain object from a FabricOUIdentifier message. Also converts values to other types if specified.
         * @param message FabricOUIdentifier
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.FabricOUIdentifier, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FabricOUIdentifier to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FabricNodeOUs. */
    interface IFabricNodeOUs {

        /** FabricNodeOUs enable */
        enable?: (boolean|null);

        /** FabricNodeOUs clientOuIdentifier */
        clientOuIdentifier?: (msp.IFabricOUIdentifier|null);

        /** FabricNodeOUs peerOuIdentifier */
        peerOuIdentifier?: (msp.IFabricOUIdentifier|null);

        /** FabricNodeOUs adminOuIdentifier */
        adminOuIdentifier?: (msp.IFabricOUIdentifier|null);

        /** FabricNodeOUs ordererOuIdentifier */
        ordererOuIdentifier?: (msp.IFabricOUIdentifier|null);
    }

    /** Represents a FabricNodeOUs. */
    class FabricNodeOUs implements IFabricNodeOUs {

        /**
         * Constructs a new FabricNodeOUs.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.IFabricNodeOUs);

        /** FabricNodeOUs enable. */
        public enable: boolean;

        /** FabricNodeOUs clientOuIdentifier. */
        public clientOuIdentifier?: (msp.IFabricOUIdentifier|null);

        /** FabricNodeOUs peerOuIdentifier. */
        public peerOuIdentifier?: (msp.IFabricOUIdentifier|null);

        /** FabricNodeOUs adminOuIdentifier. */
        public adminOuIdentifier?: (msp.IFabricOUIdentifier|null);

        /** FabricNodeOUs ordererOuIdentifier. */
        public ordererOuIdentifier?: (msp.IFabricOUIdentifier|null);

        /**
         * Creates a new FabricNodeOUs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FabricNodeOUs instance
         */
        public static create(properties?: msp.IFabricNodeOUs): msp.FabricNodeOUs;

        /**
         * Encodes the specified FabricNodeOUs message. Does not implicitly {@link msp.FabricNodeOUs.verify|verify} messages.
         * @param message FabricNodeOUs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.IFabricNodeOUs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FabricNodeOUs message, length delimited. Does not implicitly {@link msp.FabricNodeOUs.verify|verify} messages.
         * @param message FabricNodeOUs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.IFabricNodeOUs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FabricNodeOUs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FabricNodeOUs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.FabricNodeOUs;

        /**
         * Decodes a FabricNodeOUs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FabricNodeOUs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.FabricNodeOUs;

        /**
         * Verifies a FabricNodeOUs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FabricNodeOUs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FabricNodeOUs
         */
        public static fromObject(object: { [k: string]: any }): msp.FabricNodeOUs;

        /**
         * Creates a plain object from a FabricNodeOUs message. Also converts values to other types if specified.
         * @param message FabricNodeOUs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.FabricNodeOUs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FabricNodeOUs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerializedIdentity. */
    interface ISerializedIdentity {

        /** SerializedIdentity mspid */
        mspid?: (string|null);

        /** SerializedIdentity idBytes */
        idBytes?: (Uint8Array|null);
    }

    /** Represents a SerializedIdentity. */
    class SerializedIdentity implements ISerializedIdentity {

        /**
         * Constructs a new SerializedIdentity.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.ISerializedIdentity);

        /** SerializedIdentity mspid. */
        public mspid: string;

        /** SerializedIdentity idBytes. */
        public idBytes: Uint8Array;

        /**
         * Creates a new SerializedIdentity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerializedIdentity instance
         */
        public static create(properties?: msp.ISerializedIdentity): msp.SerializedIdentity;

        /**
         * Encodes the specified SerializedIdentity message. Does not implicitly {@link msp.SerializedIdentity.verify|verify} messages.
         * @param message SerializedIdentity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.ISerializedIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SerializedIdentity message, length delimited. Does not implicitly {@link msp.SerializedIdentity.verify|verify} messages.
         * @param message SerializedIdentity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.ISerializedIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SerializedIdentity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerializedIdentity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.SerializedIdentity;

        /**
         * Decodes a SerializedIdentity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerializedIdentity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.SerializedIdentity;

        /**
         * Verifies a SerializedIdentity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerializedIdentity message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerializedIdentity
         */
        public static fromObject(object: { [k: string]: any }): msp.SerializedIdentity;

        /**
         * Creates a plain object from a SerializedIdentity message. Also converts values to other types if specified.
         * @param message SerializedIdentity
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.SerializedIdentity, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerializedIdentity to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerializedIdemixIdentity. */
    interface ISerializedIdemixIdentity {

        /** SerializedIdemixIdentity nymX */
        nymX?: (Uint8Array|null);

        /** SerializedIdemixIdentity nymY */
        nymY?: (Uint8Array|null);

        /** SerializedIdemixIdentity ou */
        ou?: (Uint8Array|null);

        /** SerializedIdemixIdentity role */
        role?: (Uint8Array|null);

        /** SerializedIdemixIdentity proof */
        proof?: (Uint8Array|null);
    }

    /** Represents a SerializedIdemixIdentity. */
    class SerializedIdemixIdentity implements ISerializedIdemixIdentity {

        /**
         * Constructs a new SerializedIdemixIdentity.
         * @param [properties] Properties to set
         */
        constructor(properties?: msp.ISerializedIdemixIdentity);

        /** SerializedIdemixIdentity nymX. */
        public nymX: Uint8Array;

        /** SerializedIdemixIdentity nymY. */
        public nymY: Uint8Array;

        /** SerializedIdemixIdentity ou. */
        public ou: Uint8Array;

        /** SerializedIdemixIdentity role. */
        public role: Uint8Array;

        /** SerializedIdemixIdentity proof. */
        public proof: Uint8Array;

        /**
         * Creates a new SerializedIdemixIdentity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerializedIdemixIdentity instance
         */
        public static create(properties?: msp.ISerializedIdemixIdentity): msp.SerializedIdemixIdentity;

        /**
         * Encodes the specified SerializedIdemixIdentity message. Does not implicitly {@link msp.SerializedIdemixIdentity.verify|verify} messages.
         * @param message SerializedIdemixIdentity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: msp.ISerializedIdemixIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SerializedIdemixIdentity message, length delimited. Does not implicitly {@link msp.SerializedIdemixIdentity.verify|verify} messages.
         * @param message SerializedIdemixIdentity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: msp.ISerializedIdemixIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SerializedIdemixIdentity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerializedIdemixIdentity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): msp.SerializedIdemixIdentity;

        /**
         * Decodes a SerializedIdemixIdentity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerializedIdemixIdentity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): msp.SerializedIdemixIdentity;

        /**
         * Verifies a SerializedIdemixIdentity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerializedIdemixIdentity message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerializedIdemixIdentity
         */
        public static fromObject(object: { [k: string]: any }): msp.SerializedIdemixIdentity;

        /**
         * Creates a plain object from a SerializedIdemixIdentity message. Also converts values to other types if specified.
         * @param message SerializedIdemixIdentity
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: msp.SerializedIdemixIdentity, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerializedIdemixIdentity to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace common. */
export namespace common {

    /** Properties of a MSPPrincipal. */
    interface IMSPPrincipal {

        /** MSPPrincipal principalClassification */
        principalClassification?: (common.MSPPrincipal.Classification|null);

        /** MSPPrincipal principal */
        principal?: (Uint8Array|null);
    }

    /** Represents a MSPPrincipal. */
    class MSPPrincipal implements IMSPPrincipal {

        /**
         * Constructs a new MSPPrincipal.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IMSPPrincipal);

        /** MSPPrincipal principalClassification. */
        public principalClassification: common.MSPPrincipal.Classification;

        /** MSPPrincipal principal. */
        public principal: Uint8Array;

        /**
         * Creates a new MSPPrincipal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MSPPrincipal instance
         */
        public static create(properties?: common.IMSPPrincipal): common.MSPPrincipal;

        /**
         * Encodes the specified MSPPrincipal message. Does not implicitly {@link common.MSPPrincipal.verify|verify} messages.
         * @param message MSPPrincipal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IMSPPrincipal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MSPPrincipal message, length delimited. Does not implicitly {@link common.MSPPrincipal.verify|verify} messages.
         * @param message MSPPrincipal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IMSPPrincipal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MSPPrincipal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MSPPrincipal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.MSPPrincipal;

        /**
         * Decodes a MSPPrincipal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MSPPrincipal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.MSPPrincipal;

        /**
         * Verifies a MSPPrincipal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MSPPrincipal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MSPPrincipal
         */
        public static fromObject(object: { [k: string]: any }): common.MSPPrincipal;

        /**
         * Creates a plain object from a MSPPrincipal message. Also converts values to other types if specified.
         * @param message MSPPrincipal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.MSPPrincipal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MSPPrincipal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MSPPrincipal {

        /** Classification enum. */
        enum Classification {
            ROLE = 0,
            ORGANIZATION_UNIT = 1,
            IDENTITY = 2,
            ANONYMITY = 3,
            COMBINED = 4
        }
    }

    /** Properties of an OrganizationUnit. */
    interface IOrganizationUnit {

        /** OrganizationUnit mspIdentifier */
        mspIdentifier?: (string|null);

        /** OrganizationUnit organizationalUnitIdentifier */
        organizationalUnitIdentifier?: (string|null);

        /** OrganizationUnit certifiersIdentifier */
        certifiersIdentifier?: (Uint8Array|null);
    }

    /** Represents an OrganizationUnit. */
    class OrganizationUnit implements IOrganizationUnit {

        /**
         * Constructs a new OrganizationUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IOrganizationUnit);

        /** OrganizationUnit mspIdentifier. */
        public mspIdentifier: string;

        /** OrganizationUnit organizationalUnitIdentifier. */
        public organizationalUnitIdentifier: string;

        /** OrganizationUnit certifiersIdentifier. */
        public certifiersIdentifier: Uint8Array;

        /**
         * Creates a new OrganizationUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrganizationUnit instance
         */
        public static create(properties?: common.IOrganizationUnit): common.OrganizationUnit;

        /**
         * Encodes the specified OrganizationUnit message. Does not implicitly {@link common.OrganizationUnit.verify|verify} messages.
         * @param message OrganizationUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IOrganizationUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrganizationUnit message, length delimited. Does not implicitly {@link common.OrganizationUnit.verify|verify} messages.
         * @param message OrganizationUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IOrganizationUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrganizationUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrganizationUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.OrganizationUnit;

        /**
         * Decodes an OrganizationUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrganizationUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.OrganizationUnit;

        /**
         * Verifies an OrganizationUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrganizationUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrganizationUnit
         */
        public static fromObject(object: { [k: string]: any }): common.OrganizationUnit;

        /**
         * Creates a plain object from an OrganizationUnit message. Also converts values to other types if specified.
         * @param message OrganizationUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.OrganizationUnit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrganizationUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MSPRole. */
    interface IMSPRole {

        /** MSPRole mspIdentifier */
        mspIdentifier?: (string|null);

        /** MSPRole role */
        role?: (common.MSPRole.MSPRoleType|null);
    }

    /** Represents a MSPRole. */
    class MSPRole implements IMSPRole {

        /**
         * Constructs a new MSPRole.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IMSPRole);

        /** MSPRole mspIdentifier. */
        public mspIdentifier: string;

        /** MSPRole role. */
        public role: common.MSPRole.MSPRoleType;

        /**
         * Creates a new MSPRole instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MSPRole instance
         */
        public static create(properties?: common.IMSPRole): common.MSPRole;

        /**
         * Encodes the specified MSPRole message. Does not implicitly {@link common.MSPRole.verify|verify} messages.
         * @param message MSPRole message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IMSPRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MSPRole message, length delimited. Does not implicitly {@link common.MSPRole.verify|verify} messages.
         * @param message MSPRole message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IMSPRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MSPRole message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MSPRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.MSPRole;

        /**
         * Decodes a MSPRole message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MSPRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.MSPRole;

        /**
         * Verifies a MSPRole message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MSPRole message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MSPRole
         */
        public static fromObject(object: { [k: string]: any }): common.MSPRole;

        /**
         * Creates a plain object from a MSPRole message. Also converts values to other types if specified.
         * @param message MSPRole
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.MSPRole, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MSPRole to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MSPRole {

        /** MSPRoleType enum. */
        enum MSPRoleType {
            MEMBER = 0,
            ADMIN = 1,
            CLIENT = 2,
            PEER = 3,
            ORDERER = 4
        }
    }

    /** Properties of a MSPIdentityAnonymity. */
    interface IMSPIdentityAnonymity {

        /** MSPIdentityAnonymity anonymityType */
        anonymityType?: (common.MSPIdentityAnonymity.MSPIdentityAnonymityType|null);
    }

    /** Represents a MSPIdentityAnonymity. */
    class MSPIdentityAnonymity implements IMSPIdentityAnonymity {

        /**
         * Constructs a new MSPIdentityAnonymity.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IMSPIdentityAnonymity);

        /** MSPIdentityAnonymity anonymityType. */
        public anonymityType: common.MSPIdentityAnonymity.MSPIdentityAnonymityType;

        /**
         * Creates a new MSPIdentityAnonymity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MSPIdentityAnonymity instance
         */
        public static create(properties?: common.IMSPIdentityAnonymity): common.MSPIdentityAnonymity;

        /**
         * Encodes the specified MSPIdentityAnonymity message. Does not implicitly {@link common.MSPIdentityAnonymity.verify|verify} messages.
         * @param message MSPIdentityAnonymity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IMSPIdentityAnonymity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MSPIdentityAnonymity message, length delimited. Does not implicitly {@link common.MSPIdentityAnonymity.verify|verify} messages.
         * @param message MSPIdentityAnonymity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IMSPIdentityAnonymity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MSPIdentityAnonymity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MSPIdentityAnonymity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.MSPIdentityAnonymity;

        /**
         * Decodes a MSPIdentityAnonymity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MSPIdentityAnonymity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.MSPIdentityAnonymity;

        /**
         * Verifies a MSPIdentityAnonymity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MSPIdentityAnonymity message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MSPIdentityAnonymity
         */
        public static fromObject(object: { [k: string]: any }): common.MSPIdentityAnonymity;

        /**
         * Creates a plain object from a MSPIdentityAnonymity message. Also converts values to other types if specified.
         * @param message MSPIdentityAnonymity
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.MSPIdentityAnonymity, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MSPIdentityAnonymity to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MSPIdentityAnonymity {

        /** MSPIdentityAnonymityType enum. */
        enum MSPIdentityAnonymityType {
            NOMINAL = 0,
            ANONYMOUS = 1
        }
    }

    /** Properties of a CombinedPrincipal. */
    interface ICombinedPrincipal {

        /** CombinedPrincipal principals */
        principals?: (common.IMSPPrincipal[]|null);
    }

    /** Represents a CombinedPrincipal. */
    class CombinedPrincipal implements ICombinedPrincipal {

        /**
         * Constructs a new CombinedPrincipal.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ICombinedPrincipal);

        /** CombinedPrincipal principals. */
        public principals: common.IMSPPrincipal[];

        /**
         * Creates a new CombinedPrincipal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CombinedPrincipal instance
         */
        public static create(properties?: common.ICombinedPrincipal): common.CombinedPrincipal;

        /**
         * Encodes the specified CombinedPrincipal message. Does not implicitly {@link common.CombinedPrincipal.verify|verify} messages.
         * @param message CombinedPrincipal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ICombinedPrincipal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CombinedPrincipal message, length delimited. Does not implicitly {@link common.CombinedPrincipal.verify|verify} messages.
         * @param message CombinedPrincipal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ICombinedPrincipal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CombinedPrincipal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CombinedPrincipal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.CombinedPrincipal;

        /**
         * Decodes a CombinedPrincipal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CombinedPrincipal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.CombinedPrincipal;

        /**
         * Verifies a CombinedPrincipal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CombinedPrincipal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CombinedPrincipal
         */
        public static fromObject(object: { [k: string]: any }): common.CombinedPrincipal;

        /**
         * Creates a plain object from a CombinedPrincipal message. Also converts values to other types if specified.
         * @param message CombinedPrincipal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.CombinedPrincipal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CombinedPrincipal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CollectionConfigPackage. */
    interface ICollectionConfigPackage {

        /** CollectionConfigPackage config */
        config?: (common.ICollectionConfig[]|null);
    }

    /** Represents a CollectionConfigPackage. */
    class CollectionConfigPackage implements ICollectionConfigPackage {

        /**
         * Constructs a new CollectionConfigPackage.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ICollectionConfigPackage);

        /** CollectionConfigPackage config. */
        public config: common.ICollectionConfig[];

        /**
         * Creates a new CollectionConfigPackage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CollectionConfigPackage instance
         */
        public static create(properties?: common.ICollectionConfigPackage): common.CollectionConfigPackage;

        /**
         * Encodes the specified CollectionConfigPackage message. Does not implicitly {@link common.CollectionConfigPackage.verify|verify} messages.
         * @param message CollectionConfigPackage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ICollectionConfigPackage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CollectionConfigPackage message, length delimited. Does not implicitly {@link common.CollectionConfigPackage.verify|verify} messages.
         * @param message CollectionConfigPackage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ICollectionConfigPackage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CollectionConfigPackage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CollectionConfigPackage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.CollectionConfigPackage;

        /**
         * Decodes a CollectionConfigPackage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CollectionConfigPackage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.CollectionConfigPackage;

        /**
         * Verifies a CollectionConfigPackage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CollectionConfigPackage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CollectionConfigPackage
         */
        public static fromObject(object: { [k: string]: any }): common.CollectionConfigPackage;

        /**
         * Creates a plain object from a CollectionConfigPackage message. Also converts values to other types if specified.
         * @param message CollectionConfigPackage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.CollectionConfigPackage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CollectionConfigPackage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CollectionConfig. */
    interface ICollectionConfig {

        /** CollectionConfig staticCollectionConfig */
        staticCollectionConfig?: (common.IStaticCollectionConfig|null);
    }

    /** Represents a CollectionConfig. */
    class CollectionConfig implements ICollectionConfig {

        /**
         * Constructs a new CollectionConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ICollectionConfig);

        /** CollectionConfig staticCollectionConfig. */
        public staticCollectionConfig?: (common.IStaticCollectionConfig|null);

        /** CollectionConfig payload. */
        public payload?: "staticCollectionConfig";

        /**
         * Creates a new CollectionConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CollectionConfig instance
         */
        public static create(properties?: common.ICollectionConfig): common.CollectionConfig;

        /**
         * Encodes the specified CollectionConfig message. Does not implicitly {@link common.CollectionConfig.verify|verify} messages.
         * @param message CollectionConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ICollectionConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CollectionConfig message, length delimited. Does not implicitly {@link common.CollectionConfig.verify|verify} messages.
         * @param message CollectionConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ICollectionConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CollectionConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CollectionConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.CollectionConfig;

        /**
         * Decodes a CollectionConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CollectionConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.CollectionConfig;

        /**
         * Verifies a CollectionConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CollectionConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CollectionConfig
         */
        public static fromObject(object: { [k: string]: any }): common.CollectionConfig;

        /**
         * Creates a plain object from a CollectionConfig message. Also converts values to other types if specified.
         * @param message CollectionConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.CollectionConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CollectionConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StaticCollectionConfig. */
    interface IStaticCollectionConfig {

        /** StaticCollectionConfig name */
        name?: (string|null);

        /** StaticCollectionConfig memberOrgsPolicy */
        memberOrgsPolicy?: (common.ICollectionPolicyConfig|null);

        /** StaticCollectionConfig requiredPeerCount */
        requiredPeerCount?: (number|null);

        /** StaticCollectionConfig maximumPeerCount */
        maximumPeerCount?: (number|null);

        /** StaticCollectionConfig blockToLive */
        blockToLive?: (number|Long|null);

        /** StaticCollectionConfig memberOnlyRead */
        memberOnlyRead?: (boolean|null);

        /** StaticCollectionConfig memberOnlyWrite */
        memberOnlyWrite?: (boolean|null);
    }

    /** Represents a StaticCollectionConfig. */
    class StaticCollectionConfig implements IStaticCollectionConfig {

        /**
         * Constructs a new StaticCollectionConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IStaticCollectionConfig);

        /** StaticCollectionConfig name. */
        public name: string;

        /** StaticCollectionConfig memberOrgsPolicy. */
        public memberOrgsPolicy?: (common.ICollectionPolicyConfig|null);

        /** StaticCollectionConfig requiredPeerCount. */
        public requiredPeerCount: number;

        /** StaticCollectionConfig maximumPeerCount. */
        public maximumPeerCount: number;

        /** StaticCollectionConfig blockToLive. */
        public blockToLive: (number|Long);

        /** StaticCollectionConfig memberOnlyRead. */
        public memberOnlyRead: boolean;

        /** StaticCollectionConfig memberOnlyWrite. */
        public memberOnlyWrite: boolean;

        /**
         * Creates a new StaticCollectionConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StaticCollectionConfig instance
         */
        public static create(properties?: common.IStaticCollectionConfig): common.StaticCollectionConfig;

        /**
         * Encodes the specified StaticCollectionConfig message. Does not implicitly {@link common.StaticCollectionConfig.verify|verify} messages.
         * @param message StaticCollectionConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IStaticCollectionConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StaticCollectionConfig message, length delimited. Does not implicitly {@link common.StaticCollectionConfig.verify|verify} messages.
         * @param message StaticCollectionConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IStaticCollectionConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StaticCollectionConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StaticCollectionConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.StaticCollectionConfig;

        /**
         * Decodes a StaticCollectionConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StaticCollectionConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.StaticCollectionConfig;

        /**
         * Verifies a StaticCollectionConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StaticCollectionConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StaticCollectionConfig
         */
        public static fromObject(object: { [k: string]: any }): common.StaticCollectionConfig;

        /**
         * Creates a plain object from a StaticCollectionConfig message. Also converts values to other types if specified.
         * @param message StaticCollectionConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.StaticCollectionConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StaticCollectionConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CollectionPolicyConfig. */
    interface ICollectionPolicyConfig {

        /** CollectionPolicyConfig signaturePolicy */
        signaturePolicy?: (common.ISignaturePolicyEnvelope|null);
    }

    /** Represents a CollectionPolicyConfig. */
    class CollectionPolicyConfig implements ICollectionPolicyConfig {

        /**
         * Constructs a new CollectionPolicyConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ICollectionPolicyConfig);

        /** CollectionPolicyConfig signaturePolicy. */
        public signaturePolicy?: (common.ISignaturePolicyEnvelope|null);

        /** CollectionPolicyConfig payload. */
        public payload?: "signaturePolicy";

        /**
         * Creates a new CollectionPolicyConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CollectionPolicyConfig instance
         */
        public static create(properties?: common.ICollectionPolicyConfig): common.CollectionPolicyConfig;

        /**
         * Encodes the specified CollectionPolicyConfig message. Does not implicitly {@link common.CollectionPolicyConfig.verify|verify} messages.
         * @param message CollectionPolicyConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ICollectionPolicyConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CollectionPolicyConfig message, length delimited. Does not implicitly {@link common.CollectionPolicyConfig.verify|verify} messages.
         * @param message CollectionPolicyConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ICollectionPolicyConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CollectionPolicyConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CollectionPolicyConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.CollectionPolicyConfig;

        /**
         * Decodes a CollectionPolicyConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CollectionPolicyConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.CollectionPolicyConfig;

        /**
         * Verifies a CollectionPolicyConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CollectionPolicyConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CollectionPolicyConfig
         */
        public static fromObject(object: { [k: string]: any }): common.CollectionPolicyConfig;

        /**
         * Creates a plain object from a CollectionPolicyConfig message. Also converts values to other types if specified.
         * @param message CollectionPolicyConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.CollectionPolicyConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CollectionPolicyConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CollectionCriteria. */
    interface ICollectionCriteria {

        /** CollectionCriteria channel */
        channel?: (string|null);

        /** CollectionCriteria txId */
        txId?: (string|null);

        /** CollectionCriteria collection */
        collection?: (string|null);

        /** CollectionCriteria namespace */
        namespace?: (string|null);
    }

    /** Represents a CollectionCriteria. */
    class CollectionCriteria implements ICollectionCriteria {

        /**
         * Constructs a new CollectionCriteria.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ICollectionCriteria);

        /** CollectionCriteria channel. */
        public channel: string;

        /** CollectionCriteria txId. */
        public txId: string;

        /** CollectionCriteria collection. */
        public collection: string;

        /** CollectionCriteria namespace. */
        public namespace: string;

        /**
         * Creates a new CollectionCriteria instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CollectionCriteria instance
         */
        public static create(properties?: common.ICollectionCriteria): common.CollectionCriteria;

        /**
         * Encodes the specified CollectionCriteria message. Does not implicitly {@link common.CollectionCriteria.verify|verify} messages.
         * @param message CollectionCriteria message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ICollectionCriteria, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CollectionCriteria message, length delimited. Does not implicitly {@link common.CollectionCriteria.verify|verify} messages.
         * @param message CollectionCriteria message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ICollectionCriteria, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CollectionCriteria message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CollectionCriteria
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.CollectionCriteria;

        /**
         * Decodes a CollectionCriteria message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CollectionCriteria
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.CollectionCriteria;

        /**
         * Verifies a CollectionCriteria message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CollectionCriteria message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CollectionCriteria
         */
        public static fromObject(object: { [k: string]: any }): common.CollectionCriteria;

        /**
         * Creates a plain object from a CollectionCriteria message. Also converts values to other types if specified.
         * @param message CollectionCriteria
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.CollectionCriteria, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CollectionCriteria to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Policy. */
    interface IPolicy {

        /** Policy type */
        type?: (number|null);

        /** Policy value */
        value?: (Uint8Array|null);
    }

    /** Represents a Policy. */
    class Policy implements IPolicy {

        /**
         * Constructs a new Policy.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IPolicy);

        /** Policy type. */
        public type: number;

        /** Policy value. */
        public value: Uint8Array;

        /**
         * Creates a new Policy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Policy instance
         */
        public static create(properties?: common.IPolicy): common.Policy;

        /**
         * Encodes the specified Policy message. Does not implicitly {@link common.Policy.verify|verify} messages.
         * @param message Policy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Policy message, length delimited. Does not implicitly {@link common.Policy.verify|verify} messages.
         * @param message Policy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Policy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Policy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Policy;

        /**
         * Decodes a Policy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Policy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Policy;

        /**
         * Verifies a Policy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Policy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Policy
         */
        public static fromObject(object: { [k: string]: any }): common.Policy;

        /**
         * Creates a plain object from a Policy message. Also converts values to other types if specified.
         * @param message Policy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Policy, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Policy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Policy {

        /** PolicyType enum. */
        enum PolicyType {
            UNKNOWN = 0,
            SIGNATURE = 1,
            MSP = 2,
            IMPLICIT_META = 3
        }
    }

    /** Properties of a SignaturePolicyEnvelope. */
    interface ISignaturePolicyEnvelope {

        /** SignaturePolicyEnvelope version */
        version?: (number|null);

        /** SignaturePolicyEnvelope rule */
        rule?: (common.ISignaturePolicy|null);

        /** SignaturePolicyEnvelope identities */
        identities?: (common.IMSPPrincipal[]|null);
    }

    /** Represents a SignaturePolicyEnvelope. */
    class SignaturePolicyEnvelope implements ISignaturePolicyEnvelope {

        /**
         * Constructs a new SignaturePolicyEnvelope.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ISignaturePolicyEnvelope);

        /** SignaturePolicyEnvelope version. */
        public version: number;

        /** SignaturePolicyEnvelope rule. */
        public rule?: (common.ISignaturePolicy|null);

        /** SignaturePolicyEnvelope identities. */
        public identities: common.IMSPPrincipal[];

        /**
         * Creates a new SignaturePolicyEnvelope instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SignaturePolicyEnvelope instance
         */
        public static create(properties?: common.ISignaturePolicyEnvelope): common.SignaturePolicyEnvelope;

        /**
         * Encodes the specified SignaturePolicyEnvelope message. Does not implicitly {@link common.SignaturePolicyEnvelope.verify|verify} messages.
         * @param message SignaturePolicyEnvelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ISignaturePolicyEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SignaturePolicyEnvelope message, length delimited. Does not implicitly {@link common.SignaturePolicyEnvelope.verify|verify} messages.
         * @param message SignaturePolicyEnvelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ISignaturePolicyEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SignaturePolicyEnvelope message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignaturePolicyEnvelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.SignaturePolicyEnvelope;

        /**
         * Decodes a SignaturePolicyEnvelope message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SignaturePolicyEnvelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.SignaturePolicyEnvelope;

        /**
         * Verifies a SignaturePolicyEnvelope message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SignaturePolicyEnvelope message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SignaturePolicyEnvelope
         */
        public static fromObject(object: { [k: string]: any }): common.SignaturePolicyEnvelope;

        /**
         * Creates a plain object from a SignaturePolicyEnvelope message. Also converts values to other types if specified.
         * @param message SignaturePolicyEnvelope
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.SignaturePolicyEnvelope, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SignaturePolicyEnvelope to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SignaturePolicy. */
    interface ISignaturePolicy {

        /** SignaturePolicy signedBy */
        signedBy?: (number|null);

        /** SignaturePolicy nOutOf */
        nOutOf?: (common.SignaturePolicy.INOutOf|null);
    }

    /** Represents a SignaturePolicy. */
    class SignaturePolicy implements ISignaturePolicy {

        /**
         * Constructs a new SignaturePolicy.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ISignaturePolicy);

        /** SignaturePolicy signedBy. */
        public signedBy: number;

        /** SignaturePolicy nOutOf. */
        public nOutOf?: (common.SignaturePolicy.INOutOf|null);

        /** SignaturePolicy Type. */
        public Type?: ("signedBy"|"nOutOf");

        /**
         * Creates a new SignaturePolicy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SignaturePolicy instance
         */
        public static create(properties?: common.ISignaturePolicy): common.SignaturePolicy;

        /**
         * Encodes the specified SignaturePolicy message. Does not implicitly {@link common.SignaturePolicy.verify|verify} messages.
         * @param message SignaturePolicy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ISignaturePolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SignaturePolicy message, length delimited. Does not implicitly {@link common.SignaturePolicy.verify|verify} messages.
         * @param message SignaturePolicy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ISignaturePolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SignaturePolicy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignaturePolicy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.SignaturePolicy;

        /**
         * Decodes a SignaturePolicy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SignaturePolicy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.SignaturePolicy;

        /**
         * Verifies a SignaturePolicy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SignaturePolicy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SignaturePolicy
         */
        public static fromObject(object: { [k: string]: any }): common.SignaturePolicy;

        /**
         * Creates a plain object from a SignaturePolicy message. Also converts values to other types if specified.
         * @param message SignaturePolicy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.SignaturePolicy, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SignaturePolicy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace SignaturePolicy {

        /** Properties of a NOutOf. */
        interface INOutOf {

            /** NOutOf n */
            n?: (number|null);

            /** NOutOf rules */
            rules?: (common.ISignaturePolicy[]|null);
        }

        /** Represents a NOutOf. */
        class NOutOf implements INOutOf {

            /**
             * Constructs a new NOutOf.
             * @param [properties] Properties to set
             */
            constructor(properties?: common.SignaturePolicy.INOutOf);

            /** NOutOf n. */
            public n: number;

            /** NOutOf rules. */
            public rules: common.ISignaturePolicy[];

            /**
             * Creates a new NOutOf instance using the specified properties.
             * @param [properties] Properties to set
             * @returns NOutOf instance
             */
            public static create(properties?: common.SignaturePolicy.INOutOf): common.SignaturePolicy.NOutOf;

            /**
             * Encodes the specified NOutOf message. Does not implicitly {@link common.SignaturePolicy.NOutOf.verify|verify} messages.
             * @param message NOutOf message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: common.SignaturePolicy.INOutOf, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified NOutOf message, length delimited. Does not implicitly {@link common.SignaturePolicy.NOutOf.verify|verify} messages.
             * @param message NOutOf message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: common.SignaturePolicy.INOutOf, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NOutOf message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NOutOf
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.SignaturePolicy.NOutOf;

            /**
             * Decodes a NOutOf message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns NOutOf
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.SignaturePolicy.NOutOf;

            /**
             * Verifies a NOutOf message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a NOutOf message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns NOutOf
             */
            public static fromObject(object: { [k: string]: any }): common.SignaturePolicy.NOutOf;

            /**
             * Creates a plain object from a NOutOf message. Also converts values to other types if specified.
             * @param message NOutOf
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: common.SignaturePolicy.NOutOf, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this NOutOf to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ImplicitMetaPolicy. */
    interface IImplicitMetaPolicy {

        /** ImplicitMetaPolicy subPolicy */
        subPolicy?: (string|null);

        /** ImplicitMetaPolicy rule */
        rule?: (common.ImplicitMetaPolicy.Rule|null);
    }

    /** Represents an ImplicitMetaPolicy. */
    class ImplicitMetaPolicy implements IImplicitMetaPolicy {

        /**
         * Constructs a new ImplicitMetaPolicy.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IImplicitMetaPolicy);

        /** ImplicitMetaPolicy subPolicy. */
        public subPolicy: string;

        /** ImplicitMetaPolicy rule. */
        public rule: common.ImplicitMetaPolicy.Rule;

        /**
         * Creates a new ImplicitMetaPolicy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ImplicitMetaPolicy instance
         */
        public static create(properties?: common.IImplicitMetaPolicy): common.ImplicitMetaPolicy;

        /**
         * Encodes the specified ImplicitMetaPolicy message. Does not implicitly {@link common.ImplicitMetaPolicy.verify|verify} messages.
         * @param message ImplicitMetaPolicy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IImplicitMetaPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ImplicitMetaPolicy message, length delimited. Does not implicitly {@link common.ImplicitMetaPolicy.verify|verify} messages.
         * @param message ImplicitMetaPolicy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IImplicitMetaPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ImplicitMetaPolicy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ImplicitMetaPolicy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ImplicitMetaPolicy;

        /**
         * Decodes an ImplicitMetaPolicy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ImplicitMetaPolicy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ImplicitMetaPolicy;

        /**
         * Verifies an ImplicitMetaPolicy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ImplicitMetaPolicy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ImplicitMetaPolicy
         */
        public static fromObject(object: { [k: string]: any }): common.ImplicitMetaPolicy;

        /**
         * Creates a plain object from an ImplicitMetaPolicy message. Also converts values to other types if specified.
         * @param message ImplicitMetaPolicy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ImplicitMetaPolicy, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ImplicitMetaPolicy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ImplicitMetaPolicy {

        /** Rule enum. */
        enum Rule {
            ANY = 0,
            ALL = 1,
            MAJORITY = 2
        }
    }

    /** Status enum. */
    enum Status {
        UNKNOWN = 0,
        SUCCESS = 200,
        BAD_REQUEST = 400,
        FORBIDDEN = 403,
        NOT_FOUND = 404,
        REQUEST_ENTITY_TOO_LARGE = 413,
        INTERNAL_SERVER_ERROR = 500,
        NOT_IMPLEMENTED = 501,
        SERVICE_UNAVAILABLE = 503
    }

    /** HeaderType enum. */
    enum HeaderType {
        MESSAGE = 0,
        CONFIG = 1,
        CONFIG_UPDATE = 2,
        ENDORSER_TRANSACTION = 3,
        ORDERER_TRANSACTION = 4,
        DELIVER_SEEK_INFO = 5,
        CHAINCODE_PACKAGE = 6,
        PEER_ADMIN_OPERATION = 8
    }

    /** BlockMetadataIndex enum. */
    enum BlockMetadataIndex {
        SIGNATURES = 0,
        LAST_CONFIG = 1,
        TRANSACTIONS_FILTER = 2,
        ORDERER = 3,
        COMMIT_HASH = 4
    }

    /** Properties of a LastConfig. */
    interface ILastConfig {

        /** LastConfig index */
        index?: (number|Long|null);
    }

    /** Represents a LastConfig. */
    class LastConfig implements ILastConfig {

        /**
         * Constructs a new LastConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ILastConfig);

        /** LastConfig index. */
        public index: (number|Long);

        /**
         * Creates a new LastConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LastConfig instance
         */
        public static create(properties?: common.ILastConfig): common.LastConfig;

        /**
         * Encodes the specified LastConfig message. Does not implicitly {@link common.LastConfig.verify|verify} messages.
         * @param message LastConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ILastConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LastConfig message, length delimited. Does not implicitly {@link common.LastConfig.verify|verify} messages.
         * @param message LastConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ILastConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LastConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LastConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.LastConfig;

        /**
         * Decodes a LastConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LastConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.LastConfig;

        /**
         * Verifies a LastConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LastConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LastConfig
         */
        public static fromObject(object: { [k: string]: any }): common.LastConfig;

        /**
         * Creates a plain object from a LastConfig message. Also converts values to other types if specified.
         * @param message LastConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.LastConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LastConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Metadata. */
    interface IMetadata {

        /** Metadata value */
        value?: (Uint8Array|null);

        /** Metadata signatures */
        signatures?: (common.IMetadataSignature[]|null);
    }

    /** Represents a Metadata. */
    class Metadata implements IMetadata {

        /**
         * Constructs a new Metadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IMetadata);

        /** Metadata value. */
        public value: Uint8Array;

        /** Metadata signatures. */
        public signatures: common.IMetadataSignature[];

        /**
         * Creates a new Metadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Metadata instance
         */
        public static create(properties?: common.IMetadata): common.Metadata;

        /**
         * Encodes the specified Metadata message. Does not implicitly {@link common.Metadata.verify|verify} messages.
         * @param message Metadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Metadata message, length delimited. Does not implicitly {@link common.Metadata.verify|verify} messages.
         * @param message Metadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Metadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Metadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Metadata;

        /**
         * Decodes a Metadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Metadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Metadata;

        /**
         * Verifies a Metadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Metadata
         */
        public static fromObject(object: { [k: string]: any }): common.Metadata;

        /**
         * Creates a plain object from a Metadata message. Also converts values to other types if specified.
         * @param message Metadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Metadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MetadataSignature. */
    interface IMetadataSignature {

        /** MetadataSignature signatureHeader */
        signatureHeader?: (Uint8Array|null);

        /** MetadataSignature signature */
        signature?: (Uint8Array|null);
    }

    /** Represents a MetadataSignature. */
    class MetadataSignature implements IMetadataSignature {

        /**
         * Constructs a new MetadataSignature.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IMetadataSignature);

        /** MetadataSignature signatureHeader. */
        public signatureHeader: Uint8Array;

        /** MetadataSignature signature. */
        public signature: Uint8Array;

        /**
         * Creates a new MetadataSignature instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MetadataSignature instance
         */
        public static create(properties?: common.IMetadataSignature): common.MetadataSignature;

        /**
         * Encodes the specified MetadataSignature message. Does not implicitly {@link common.MetadataSignature.verify|verify} messages.
         * @param message MetadataSignature message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IMetadataSignature, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MetadataSignature message, length delimited. Does not implicitly {@link common.MetadataSignature.verify|verify} messages.
         * @param message MetadataSignature message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IMetadataSignature, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MetadataSignature message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MetadataSignature
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.MetadataSignature;

        /**
         * Decodes a MetadataSignature message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MetadataSignature
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.MetadataSignature;

        /**
         * Verifies a MetadataSignature message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MetadataSignature message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MetadataSignature
         */
        public static fromObject(object: { [k: string]: any }): common.MetadataSignature;

        /**
         * Creates a plain object from a MetadataSignature message. Also converts values to other types if specified.
         * @param message MetadataSignature
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.MetadataSignature, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MetadataSignature to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Header. */
    interface IHeader {

        /** Header channelHeader */
        channelHeader?: (Uint8Array|null);

        /** Header signatureHeader */
        signatureHeader?: (Uint8Array|null);
    }

    /** Represents a Header. */
    class Header implements IHeader {

        /**
         * Constructs a new Header.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IHeader);

        /** Header channelHeader. */
        public channelHeader: Uint8Array;

        /** Header signatureHeader. */
        public signatureHeader: Uint8Array;

        /**
         * Creates a new Header instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Header instance
         */
        public static create(properties?: common.IHeader): common.Header;

        /**
         * Encodes the specified Header message. Does not implicitly {@link common.Header.verify|verify} messages.
         * @param message Header message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Header message, length delimited. Does not implicitly {@link common.Header.verify|verify} messages.
         * @param message Header message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Header message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Header
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Header;

        /**
         * Decodes a Header message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Header
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Header;

        /**
         * Verifies a Header message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Header message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Header
         */
        public static fromObject(object: { [k: string]: any }): common.Header;

        /**
         * Creates a plain object from a Header message. Also converts values to other types if specified.
         * @param message Header
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Header to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChannelHeader. */
    interface IChannelHeader {

        /** ChannelHeader type */
        type?: (number|null);

        /** ChannelHeader version */
        version?: (number|null);

        /** ChannelHeader timestamp */
        timestamp?: (google.protobuf.ITimestamp|null);

        /** ChannelHeader channelId */
        channelId?: (string|null);

        /** ChannelHeader txId */
        txId?: (string|null);

        /** ChannelHeader epoch */
        epoch?: (number|Long|null);

        /** ChannelHeader extension */
        extension?: (Uint8Array|null);

        /** ChannelHeader tlsCertHash */
        tlsCertHash?: (Uint8Array|null);
    }

    /** Represents a ChannelHeader. */
    class ChannelHeader implements IChannelHeader {

        /**
         * Constructs a new ChannelHeader.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IChannelHeader);

        /** ChannelHeader type. */
        public type: number;

        /** ChannelHeader version. */
        public version: number;

        /** ChannelHeader timestamp. */
        public timestamp?: (google.protobuf.ITimestamp|null);

        /** ChannelHeader channelId. */
        public channelId: string;

        /** ChannelHeader txId. */
        public txId: string;

        /** ChannelHeader epoch. */
        public epoch: (number|Long);

        /** ChannelHeader extension. */
        public extension: Uint8Array;

        /** ChannelHeader tlsCertHash. */
        public tlsCertHash: Uint8Array;

        /**
         * Creates a new ChannelHeader instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChannelHeader instance
         */
        public static create(properties?: common.IChannelHeader): common.ChannelHeader;

        /**
         * Encodes the specified ChannelHeader message. Does not implicitly {@link common.ChannelHeader.verify|verify} messages.
         * @param message ChannelHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IChannelHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChannelHeader message, length delimited. Does not implicitly {@link common.ChannelHeader.verify|verify} messages.
         * @param message ChannelHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IChannelHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChannelHeader message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChannelHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ChannelHeader;

        /**
         * Decodes a ChannelHeader message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChannelHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ChannelHeader;

        /**
         * Verifies a ChannelHeader message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChannelHeader message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChannelHeader
         */
        public static fromObject(object: { [k: string]: any }): common.ChannelHeader;

        /**
         * Creates a plain object from a ChannelHeader message. Also converts values to other types if specified.
         * @param message ChannelHeader
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ChannelHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChannelHeader to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SignatureHeader. */
    interface ISignatureHeader {

        /** SignatureHeader creator */
        creator?: (Uint8Array|null);

        /** SignatureHeader nonce */
        nonce?: (Uint8Array|null);
    }

    /** Represents a SignatureHeader. */
    class SignatureHeader implements ISignatureHeader {

        /**
         * Constructs a new SignatureHeader.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ISignatureHeader);

        /** SignatureHeader creator. */
        public creator: Uint8Array;

        /** SignatureHeader nonce. */
        public nonce: Uint8Array;

        /**
         * Creates a new SignatureHeader instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SignatureHeader instance
         */
        public static create(properties?: common.ISignatureHeader): common.SignatureHeader;

        /**
         * Encodes the specified SignatureHeader message. Does not implicitly {@link common.SignatureHeader.verify|verify} messages.
         * @param message SignatureHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ISignatureHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SignatureHeader message, length delimited. Does not implicitly {@link common.SignatureHeader.verify|verify} messages.
         * @param message SignatureHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ISignatureHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SignatureHeader message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignatureHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.SignatureHeader;

        /**
         * Decodes a SignatureHeader message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SignatureHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.SignatureHeader;

        /**
         * Verifies a SignatureHeader message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SignatureHeader message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SignatureHeader
         */
        public static fromObject(object: { [k: string]: any }): common.SignatureHeader;

        /**
         * Creates a plain object from a SignatureHeader message. Also converts values to other types if specified.
         * @param message SignatureHeader
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.SignatureHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SignatureHeader to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Payload. */
    interface IPayload {

        /** Payload header */
        header?: (common.IHeader|null);

        /** Payload data */
        data?: (Uint8Array|null);
    }

    /** Represents a Payload. */
    class Payload implements IPayload {

        /**
         * Constructs a new Payload.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IPayload);

        /** Payload header. */
        public header?: (common.IHeader|null);

        /** Payload data. */
        public data: Uint8Array;

        /**
         * Creates a new Payload instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Payload instance
         */
        public static create(properties?: common.IPayload): common.Payload;

        /**
         * Encodes the specified Payload message. Does not implicitly {@link common.Payload.verify|verify} messages.
         * @param message Payload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Payload message, length delimited. Does not implicitly {@link common.Payload.verify|verify} messages.
         * @param message Payload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Payload message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Payload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Payload;

        /**
         * Decodes a Payload message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Payload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Payload;

        /**
         * Verifies a Payload message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Payload message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Payload
         */
        public static fromObject(object: { [k: string]: any }): common.Payload;

        /**
         * Creates a plain object from a Payload message. Also converts values to other types if specified.
         * @param message Payload
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Payload, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Payload to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Envelope. */
    interface IEnvelope {

        /** Envelope payload */
        payload?: (Uint8Array|null);

        /** Envelope signature */
        signature?: (Uint8Array|null);
    }

    /** Represents an Envelope. */
    class Envelope implements IEnvelope {

        /**
         * Constructs a new Envelope.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IEnvelope);

        /** Envelope payload. */
        public payload: Uint8Array;

        /** Envelope signature. */
        public signature: Uint8Array;

        /**
         * Creates a new Envelope instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Envelope instance
         */
        public static create(properties?: common.IEnvelope): common.Envelope;

        /**
         * Encodes the specified Envelope message. Does not implicitly {@link common.Envelope.verify|verify} messages.
         * @param message Envelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Envelope message, length delimited. Does not implicitly {@link common.Envelope.verify|verify} messages.
         * @param message Envelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Envelope message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Envelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Envelope;

        /**
         * Decodes an Envelope message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Envelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Envelope;

        /**
         * Verifies an Envelope message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Envelope message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Envelope
         */
        public static fromObject(object: { [k: string]: any }): common.Envelope;

        /**
         * Creates a plain object from an Envelope message. Also converts values to other types if specified.
         * @param message Envelope
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Envelope, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Envelope to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Block. */
    interface IBlock {

        /** Block header */
        header?: (common.IBlockHeader|null);

        /** Block data */
        data?: (common.IBlockData|null);

        /** Block metadata */
        metadata?: (common.IBlockMetadata|null);
    }

    /** Represents a Block. */
    class Block implements IBlock {

        /**
         * Constructs a new Block.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IBlock);

        /** Block header. */
        public header?: (common.IBlockHeader|null);

        /** Block data. */
        public data?: (common.IBlockData|null);

        /** Block metadata. */
        public metadata?: (common.IBlockMetadata|null);

        /**
         * Creates a new Block instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Block instance
         */
        public static create(properties?: common.IBlock): common.Block;

        /**
         * Encodes the specified Block message. Does not implicitly {@link common.Block.verify|verify} messages.
         * @param message Block message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IBlock, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Block message, length delimited. Does not implicitly {@link common.Block.verify|verify} messages.
         * @param message Block message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IBlock, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Block message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Block
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Block;

        /**
         * Decodes a Block message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Block
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Block;

        /**
         * Verifies a Block message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Block message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Block
         */
        public static fromObject(object: { [k: string]: any }): common.Block;

        /**
         * Creates a plain object from a Block message. Also converts values to other types if specified.
         * @param message Block
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Block, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Block to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BlockHeader. */
    interface IBlockHeader {

        /** BlockHeader number */
        number?: (number|Long|null);

        /** BlockHeader previousHash */
        previousHash?: (Uint8Array|null);

        /** BlockHeader dataHash */
        dataHash?: (Uint8Array|null);
    }

    /** Represents a BlockHeader. */
    class BlockHeader implements IBlockHeader {

        /**
         * Constructs a new BlockHeader.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IBlockHeader);

        /** BlockHeader number. */
        public number: (number|Long);

        /** BlockHeader previousHash. */
        public previousHash: Uint8Array;

        /** BlockHeader dataHash. */
        public dataHash: Uint8Array;

        /**
         * Creates a new BlockHeader instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BlockHeader instance
         */
        public static create(properties?: common.IBlockHeader): common.BlockHeader;

        /**
         * Encodes the specified BlockHeader message. Does not implicitly {@link common.BlockHeader.verify|verify} messages.
         * @param message BlockHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IBlockHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BlockHeader message, length delimited. Does not implicitly {@link common.BlockHeader.verify|verify} messages.
         * @param message BlockHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IBlockHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BlockHeader message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BlockHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.BlockHeader;

        /**
         * Decodes a BlockHeader message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BlockHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.BlockHeader;

        /**
         * Verifies a BlockHeader message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BlockHeader message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BlockHeader
         */
        public static fromObject(object: { [k: string]: any }): common.BlockHeader;

        /**
         * Creates a plain object from a BlockHeader message. Also converts values to other types if specified.
         * @param message BlockHeader
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.BlockHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BlockHeader to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BlockData. */
    interface IBlockData {

        /** BlockData data */
        data?: (Uint8Array[]|null);
    }

    /** Represents a BlockData. */
    class BlockData implements IBlockData {

        /**
         * Constructs a new BlockData.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IBlockData);

        /** BlockData data. */
        public data: Uint8Array[];

        /**
         * Creates a new BlockData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BlockData instance
         */
        public static create(properties?: common.IBlockData): common.BlockData;

        /**
         * Encodes the specified BlockData message. Does not implicitly {@link common.BlockData.verify|verify} messages.
         * @param message BlockData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IBlockData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BlockData message, length delimited. Does not implicitly {@link common.BlockData.verify|verify} messages.
         * @param message BlockData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IBlockData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BlockData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BlockData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.BlockData;

        /**
         * Decodes a BlockData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BlockData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.BlockData;

        /**
         * Verifies a BlockData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BlockData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BlockData
         */
        public static fromObject(object: { [k: string]: any }): common.BlockData;

        /**
         * Creates a plain object from a BlockData message. Also converts values to other types if specified.
         * @param message BlockData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.BlockData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BlockData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BlockMetadata. */
    interface IBlockMetadata {

        /** BlockMetadata metadata */
        metadata?: (Uint8Array[]|null);
    }

    /** Represents a BlockMetadata. */
    class BlockMetadata implements IBlockMetadata {

        /**
         * Constructs a new BlockMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IBlockMetadata);

        /** BlockMetadata metadata. */
        public metadata: Uint8Array[];

        /**
         * Creates a new BlockMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BlockMetadata instance
         */
        public static create(properties?: common.IBlockMetadata): common.BlockMetadata;

        /**
         * Encodes the specified BlockMetadata message. Does not implicitly {@link common.BlockMetadata.verify|verify} messages.
         * @param message BlockMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IBlockMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BlockMetadata message, length delimited. Does not implicitly {@link common.BlockMetadata.verify|verify} messages.
         * @param message BlockMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IBlockMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BlockMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BlockMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.BlockMetadata;

        /**
         * Decodes a BlockMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BlockMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.BlockMetadata;

        /**
         * Verifies a BlockMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BlockMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BlockMetadata
         */
        public static fromObject(object: { [k: string]: any }): common.BlockMetadata;

        /**
         * Creates a plain object from a BlockMetadata message. Also converts values to other types if specified.
         * @param message BlockMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.BlockMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BlockMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdererBlockMetadata. */
    interface IOrdererBlockMetadata {

        /** OrdererBlockMetadata lastConfig */
        lastConfig?: (common.ILastConfig|null);

        /** OrdererBlockMetadata consenterMetadata */
        consenterMetadata?: (Uint8Array|null);
    }

    /** Represents an OrdererBlockMetadata. */
    class OrdererBlockMetadata implements IOrdererBlockMetadata {

        /**
         * Constructs a new OrdererBlockMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IOrdererBlockMetadata);

        /** OrdererBlockMetadata lastConfig. */
        public lastConfig?: (common.ILastConfig|null);

        /** OrdererBlockMetadata consenterMetadata. */
        public consenterMetadata: Uint8Array;

        /**
         * Creates a new OrdererBlockMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdererBlockMetadata instance
         */
        public static create(properties?: common.IOrdererBlockMetadata): common.OrdererBlockMetadata;

        /**
         * Encodes the specified OrdererBlockMetadata message. Does not implicitly {@link common.OrdererBlockMetadata.verify|verify} messages.
         * @param message OrdererBlockMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IOrdererBlockMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdererBlockMetadata message, length delimited. Does not implicitly {@link common.OrdererBlockMetadata.verify|verify} messages.
         * @param message OrdererBlockMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IOrdererBlockMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdererBlockMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdererBlockMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.OrdererBlockMetadata;

        /**
         * Decodes an OrdererBlockMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdererBlockMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.OrdererBlockMetadata;

        /**
         * Verifies an OrdererBlockMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdererBlockMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdererBlockMetadata
         */
        public static fromObject(object: { [k: string]: any }): common.OrdererBlockMetadata;

        /**
         * Creates a plain object from an OrdererBlockMetadata message. Also converts values to other types if specified.
         * @param message OrdererBlockMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.OrdererBlockMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdererBlockMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigEnvelope. */
    interface IConfigEnvelope {

        /** ConfigEnvelope config */
        config?: (common.IConfig|null);

        /** ConfigEnvelope lastUpdate */
        lastUpdate?: (common.IEnvelope|null);
    }

    /** Represents a ConfigEnvelope. */
    class ConfigEnvelope implements IConfigEnvelope {

        /**
         * Constructs a new ConfigEnvelope.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigEnvelope);

        /** ConfigEnvelope config. */
        public config?: (common.IConfig|null);

        /** ConfigEnvelope lastUpdate. */
        public lastUpdate?: (common.IEnvelope|null);

        /**
         * Creates a new ConfigEnvelope instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigEnvelope instance
         */
        public static create(properties?: common.IConfigEnvelope): common.ConfigEnvelope;

        /**
         * Encodes the specified ConfigEnvelope message. Does not implicitly {@link common.ConfigEnvelope.verify|verify} messages.
         * @param message ConfigEnvelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigEnvelope message, length delimited. Does not implicitly {@link common.ConfigEnvelope.verify|verify} messages.
         * @param message ConfigEnvelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigEnvelope message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigEnvelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigEnvelope;

        /**
         * Decodes a ConfigEnvelope message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigEnvelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigEnvelope;

        /**
         * Verifies a ConfigEnvelope message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigEnvelope message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigEnvelope
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigEnvelope;

        /**
         * Creates a plain object from a ConfigEnvelope message. Also converts values to other types if specified.
         * @param message ConfigEnvelope
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigEnvelope, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigEnvelope to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigGroupSchema. */
    interface IConfigGroupSchema {

        /** ConfigGroupSchema groups */
        groups?: ({ [k: string]: common.IConfigGroupSchema }|null);

        /** ConfigGroupSchema values */
        values?: ({ [k: string]: common.IConfigValueSchema }|null);

        /** ConfigGroupSchema policies */
        policies?: ({ [k: string]: common.IConfigPolicySchema }|null);
    }

    /** Represents a ConfigGroupSchema. */
    class ConfigGroupSchema implements IConfigGroupSchema {

        /**
         * Constructs a new ConfigGroupSchema.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigGroupSchema);

        /** ConfigGroupSchema groups. */
        public groups: { [k: string]: common.IConfigGroupSchema };

        /** ConfigGroupSchema values. */
        public values: { [k: string]: common.IConfigValueSchema };

        /** ConfigGroupSchema policies. */
        public policies: { [k: string]: common.IConfigPolicySchema };

        /**
         * Creates a new ConfigGroupSchema instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigGroupSchema instance
         */
        public static create(properties?: common.IConfigGroupSchema): common.ConfigGroupSchema;

        /**
         * Encodes the specified ConfigGroupSchema message. Does not implicitly {@link common.ConfigGroupSchema.verify|verify} messages.
         * @param message ConfigGroupSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigGroupSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigGroupSchema message, length delimited. Does not implicitly {@link common.ConfigGroupSchema.verify|verify} messages.
         * @param message ConfigGroupSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigGroupSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigGroupSchema message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigGroupSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigGroupSchema;

        /**
         * Decodes a ConfigGroupSchema message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigGroupSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigGroupSchema;

        /**
         * Verifies a ConfigGroupSchema message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigGroupSchema message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigGroupSchema
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigGroupSchema;

        /**
         * Creates a plain object from a ConfigGroupSchema message. Also converts values to other types if specified.
         * @param message ConfigGroupSchema
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigGroupSchema, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigGroupSchema to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigValueSchema. */
    interface IConfigValueSchema {
    }

    /** Represents a ConfigValueSchema. */
    class ConfigValueSchema implements IConfigValueSchema {

        /**
         * Constructs a new ConfigValueSchema.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigValueSchema);

        /**
         * Creates a new ConfigValueSchema instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigValueSchema instance
         */
        public static create(properties?: common.IConfigValueSchema): common.ConfigValueSchema;

        /**
         * Encodes the specified ConfigValueSchema message. Does not implicitly {@link common.ConfigValueSchema.verify|verify} messages.
         * @param message ConfigValueSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigValueSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigValueSchema message, length delimited. Does not implicitly {@link common.ConfigValueSchema.verify|verify} messages.
         * @param message ConfigValueSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigValueSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigValueSchema message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigValueSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigValueSchema;

        /**
         * Decodes a ConfigValueSchema message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigValueSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigValueSchema;

        /**
         * Verifies a ConfigValueSchema message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigValueSchema message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigValueSchema
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigValueSchema;

        /**
         * Creates a plain object from a ConfigValueSchema message. Also converts values to other types if specified.
         * @param message ConfigValueSchema
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigValueSchema, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigValueSchema to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigPolicySchema. */
    interface IConfigPolicySchema {
    }

    /** Represents a ConfigPolicySchema. */
    class ConfigPolicySchema implements IConfigPolicySchema {

        /**
         * Constructs a new ConfigPolicySchema.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigPolicySchema);

        /**
         * Creates a new ConfigPolicySchema instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigPolicySchema instance
         */
        public static create(properties?: common.IConfigPolicySchema): common.ConfigPolicySchema;

        /**
         * Encodes the specified ConfigPolicySchema message. Does not implicitly {@link common.ConfigPolicySchema.verify|verify} messages.
         * @param message ConfigPolicySchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigPolicySchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigPolicySchema message, length delimited. Does not implicitly {@link common.ConfigPolicySchema.verify|verify} messages.
         * @param message ConfigPolicySchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigPolicySchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigPolicySchema message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigPolicySchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigPolicySchema;

        /**
         * Decodes a ConfigPolicySchema message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigPolicySchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigPolicySchema;

        /**
         * Verifies a ConfigPolicySchema message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigPolicySchema message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigPolicySchema
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigPolicySchema;

        /**
         * Creates a plain object from a ConfigPolicySchema message. Also converts values to other types if specified.
         * @param message ConfigPolicySchema
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigPolicySchema, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigPolicySchema to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Config. */
    interface IConfig {

        /** Config sequence */
        sequence?: (number|Long|null);

        /** Config channelGroup */
        channelGroup?: (common.IConfigGroup|null);
    }

    /** Represents a Config. */
    class Config implements IConfig {

        /**
         * Constructs a new Config.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfig);

        /** Config sequence. */
        public sequence: (number|Long);

        /** Config channelGroup. */
        public channelGroup?: (common.IConfigGroup|null);

        /**
         * Creates a new Config instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Config instance
         */
        public static create(properties?: common.IConfig): common.Config;

        /**
         * Encodes the specified Config message. Does not implicitly {@link common.Config.verify|verify} messages.
         * @param message Config message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Config message, length delimited. Does not implicitly {@link common.Config.verify|verify} messages.
         * @param message Config message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Config message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Config
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Config;

        /**
         * Decodes a Config message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Config
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Config;

        /**
         * Verifies a Config message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Config message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Config
         */
        public static fromObject(object: { [k: string]: any }): common.Config;

        /**
         * Creates a plain object from a Config message. Also converts values to other types if specified.
         * @param message Config
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Config, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Config to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigUpdateEnvelope. */
    interface IConfigUpdateEnvelope {

        /** ConfigUpdateEnvelope configUpdate */
        configUpdate?: (Uint8Array|null);

        /** ConfigUpdateEnvelope signatures */
        signatures?: (common.IConfigSignature[]|null);
    }

    /** Represents a ConfigUpdateEnvelope. */
    class ConfigUpdateEnvelope implements IConfigUpdateEnvelope {

        /**
         * Constructs a new ConfigUpdateEnvelope.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigUpdateEnvelope);

        /** ConfigUpdateEnvelope configUpdate. */
        public configUpdate: Uint8Array;

        /** ConfigUpdateEnvelope signatures. */
        public signatures: common.IConfigSignature[];

        /**
         * Creates a new ConfigUpdateEnvelope instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigUpdateEnvelope instance
         */
        public static create(properties?: common.IConfigUpdateEnvelope): common.ConfigUpdateEnvelope;

        /**
         * Encodes the specified ConfigUpdateEnvelope message. Does not implicitly {@link common.ConfigUpdateEnvelope.verify|verify} messages.
         * @param message ConfigUpdateEnvelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigUpdateEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigUpdateEnvelope message, length delimited. Does not implicitly {@link common.ConfigUpdateEnvelope.verify|verify} messages.
         * @param message ConfigUpdateEnvelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigUpdateEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigUpdateEnvelope message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigUpdateEnvelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigUpdateEnvelope;

        /**
         * Decodes a ConfigUpdateEnvelope message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigUpdateEnvelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigUpdateEnvelope;

        /**
         * Verifies a ConfigUpdateEnvelope message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigUpdateEnvelope message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigUpdateEnvelope
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigUpdateEnvelope;

        /**
         * Creates a plain object from a ConfigUpdateEnvelope message. Also converts values to other types if specified.
         * @param message ConfigUpdateEnvelope
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigUpdateEnvelope, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigUpdateEnvelope to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigUpdate. */
    interface IConfigUpdate {

        /** ConfigUpdate channelId */
        channelId?: (string|null);

        /** ConfigUpdate readSet */
        readSet?: (common.IConfigGroup|null);

        /** ConfigUpdate writeSet */
        writeSet?: (common.IConfigGroup|null);

        /** ConfigUpdate isolatedData */
        isolatedData?: ({ [k: string]: Uint8Array }|null);
    }

    /** Represents a ConfigUpdate. */
    class ConfigUpdate implements IConfigUpdate {

        /**
         * Constructs a new ConfigUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigUpdate);

        /** ConfigUpdate channelId. */
        public channelId: string;

        /** ConfigUpdate readSet. */
        public readSet?: (common.IConfigGroup|null);

        /** ConfigUpdate writeSet. */
        public writeSet?: (common.IConfigGroup|null);

        /** ConfigUpdate isolatedData. */
        public isolatedData: { [k: string]: Uint8Array };

        /**
         * Creates a new ConfigUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigUpdate instance
         */
        public static create(properties?: common.IConfigUpdate): common.ConfigUpdate;

        /**
         * Encodes the specified ConfigUpdate message. Does not implicitly {@link common.ConfigUpdate.verify|verify} messages.
         * @param message ConfigUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigUpdate message, length delimited. Does not implicitly {@link common.ConfigUpdate.verify|verify} messages.
         * @param message ConfigUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigUpdate;

        /**
         * Decodes a ConfigUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigUpdate;

        /**
         * Verifies a ConfigUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigUpdate
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigUpdate;

        /**
         * Creates a plain object from a ConfigUpdate message. Also converts values to other types if specified.
         * @param message ConfigUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigGroup. */
    interface IConfigGroup {

        /** ConfigGroup version */
        version?: (number|Long|null);

        /** ConfigGroup groups */
        groups?: ({ [k: string]: common.IConfigGroup }|null);

        /** ConfigGroup values */
        values?: ({ [k: string]: common.IConfigValue }|null);

        /** ConfigGroup policies */
        policies?: ({ [k: string]: common.IConfigPolicy }|null);

        /** ConfigGroup modPolicy */
        modPolicy?: (string|null);
    }

    /** Represents a ConfigGroup. */
    class ConfigGroup implements IConfigGroup {

        /**
         * Constructs a new ConfigGroup.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigGroup);

        /** ConfigGroup version. */
        public version: (number|Long);

        /** ConfigGroup groups. */
        public groups: { [k: string]: common.IConfigGroup };

        /** ConfigGroup values. */
        public values: { [k: string]: common.IConfigValue };

        /** ConfigGroup policies. */
        public policies: { [k: string]: common.IConfigPolicy };

        /** ConfigGroup modPolicy. */
        public modPolicy: string;

        /**
         * Creates a new ConfigGroup instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigGroup instance
         */
        public static create(properties?: common.IConfigGroup): common.ConfigGroup;

        /**
         * Encodes the specified ConfigGroup message. Does not implicitly {@link common.ConfigGroup.verify|verify} messages.
         * @param message ConfigGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigGroup message, length delimited. Does not implicitly {@link common.ConfigGroup.verify|verify} messages.
         * @param message ConfigGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigGroup message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigGroup;

        /**
         * Decodes a ConfigGroup message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigGroup;

        /**
         * Verifies a ConfigGroup message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigGroup message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigGroup
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigGroup;

        /**
         * Creates a plain object from a ConfigGroup message. Also converts values to other types if specified.
         * @param message ConfigGroup
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigGroup, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigGroup to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigValue. */
    interface IConfigValue {

        /** ConfigValue version */
        version?: (number|Long|null);

        /** ConfigValue value */
        value?: (Uint8Array|null);

        /** ConfigValue modPolicy */
        modPolicy?: (string|null);
    }

    /** Represents a ConfigValue. */
    class ConfigValue implements IConfigValue {

        /**
         * Constructs a new ConfigValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigValue);

        /** ConfigValue version. */
        public version: (number|Long);

        /** ConfigValue value. */
        public value: Uint8Array;

        /** ConfigValue modPolicy. */
        public modPolicy: string;

        /**
         * Creates a new ConfigValue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigValue instance
         */
        public static create(properties?: common.IConfigValue): common.ConfigValue;

        /**
         * Encodes the specified ConfigValue message. Does not implicitly {@link common.ConfigValue.verify|verify} messages.
         * @param message ConfigValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigValue message, length delimited. Does not implicitly {@link common.ConfigValue.verify|verify} messages.
         * @param message ConfigValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigValue;

        /**
         * Decodes a ConfigValue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigValue;

        /**
         * Verifies a ConfigValue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigValue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigValue
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigValue;

        /**
         * Creates a plain object from a ConfigValue message. Also converts values to other types if specified.
         * @param message ConfigValue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigValue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigPolicy. */
    interface IConfigPolicy {

        /** ConfigPolicy version */
        version?: (number|Long|null);

        /** ConfigPolicy policy */
        policy?: (common.IPolicy|null);

        /** ConfigPolicy modPolicy */
        modPolicy?: (string|null);
    }

    /** Represents a ConfigPolicy. */
    class ConfigPolicy implements IConfigPolicy {

        /**
         * Constructs a new ConfigPolicy.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigPolicy);

        /** ConfigPolicy version. */
        public version: (number|Long);

        /** ConfigPolicy policy. */
        public policy?: (common.IPolicy|null);

        /** ConfigPolicy modPolicy. */
        public modPolicy: string;

        /**
         * Creates a new ConfigPolicy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigPolicy instance
         */
        public static create(properties?: common.IConfigPolicy): common.ConfigPolicy;

        /**
         * Encodes the specified ConfigPolicy message. Does not implicitly {@link common.ConfigPolicy.verify|verify} messages.
         * @param message ConfigPolicy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigPolicy message, length delimited. Does not implicitly {@link common.ConfigPolicy.verify|verify} messages.
         * @param message ConfigPolicy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigPolicy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigPolicy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigPolicy;

        /**
         * Decodes a ConfigPolicy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigPolicy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigPolicy;

        /**
         * Verifies a ConfigPolicy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigPolicy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigPolicy
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigPolicy;

        /**
         * Creates a plain object from a ConfigPolicy message. Also converts values to other types if specified.
         * @param message ConfigPolicy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigPolicy, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigPolicy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigSignature. */
    interface IConfigSignature {

        /** ConfigSignature signatureHeader */
        signatureHeader?: (Uint8Array|null);

        /** ConfigSignature signature */
        signature?: (Uint8Array|null);
    }

    /** Represents a ConfigSignature. */
    class ConfigSignature implements IConfigSignature {

        /**
         * Constructs a new ConfigSignature.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConfigSignature);

        /** ConfigSignature signatureHeader. */
        public signatureHeader: Uint8Array;

        /** ConfigSignature signature. */
        public signature: Uint8Array;

        /**
         * Creates a new ConfigSignature instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigSignature instance
         */
        public static create(properties?: common.IConfigSignature): common.ConfigSignature;

        /**
         * Encodes the specified ConfigSignature message. Does not implicitly {@link common.ConfigSignature.verify|verify} messages.
         * @param message ConfigSignature message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConfigSignature, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigSignature message, length delimited. Does not implicitly {@link common.ConfigSignature.verify|verify} messages.
         * @param message ConfigSignature message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConfigSignature, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigSignature message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigSignature
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.ConfigSignature;

        /**
         * Decodes a ConfigSignature message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigSignature
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.ConfigSignature;

        /**
         * Verifies a ConfigSignature message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigSignature message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigSignature
         */
        public static fromObject(object: { [k: string]: any }): common.ConfigSignature;

        /**
         * Creates a plain object from a ConfigSignature message. Also converts values to other types if specified.
         * @param message ConfigSignature
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.ConfigSignature, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigSignature to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BlockchainInfo. */
    interface IBlockchainInfo {

        /** BlockchainInfo height */
        height?: (number|Long|null);

        /** BlockchainInfo currentBlockHash */
        currentBlockHash?: (Uint8Array|null);

        /** BlockchainInfo previousBlockHash */
        previousBlockHash?: (Uint8Array|null);
    }

    /** Represents a BlockchainInfo. */
    class BlockchainInfo implements IBlockchainInfo {

        /**
         * Constructs a new BlockchainInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IBlockchainInfo);

        /** BlockchainInfo height. */
        public height: (number|Long);

        /** BlockchainInfo currentBlockHash. */
        public currentBlockHash: Uint8Array;

        /** BlockchainInfo previousBlockHash. */
        public previousBlockHash: Uint8Array;

        /**
         * Creates a new BlockchainInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BlockchainInfo instance
         */
        public static create(properties?: common.IBlockchainInfo): common.BlockchainInfo;

        /**
         * Encodes the specified BlockchainInfo message. Does not implicitly {@link common.BlockchainInfo.verify|verify} messages.
         * @param message BlockchainInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IBlockchainInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BlockchainInfo message, length delimited. Does not implicitly {@link common.BlockchainInfo.verify|verify} messages.
         * @param message BlockchainInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IBlockchainInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BlockchainInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BlockchainInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.BlockchainInfo;

        /**
         * Decodes a BlockchainInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BlockchainInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.BlockchainInfo;

        /**
         * Verifies a BlockchainInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BlockchainInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BlockchainInfo
         */
        public static fromObject(object: { [k: string]: any }): common.BlockchainInfo;

        /**
         * Creates a plain object from a BlockchainInfo message. Also converts values to other types if specified.
         * @param message BlockchainInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.BlockchainInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BlockchainInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HashingAlgorithm. */
    interface IHashingAlgorithm {

        /** HashingAlgorithm name */
        name?: (string|null);
    }

    /** Represents a HashingAlgorithm. */
    class HashingAlgorithm implements IHashingAlgorithm {

        /**
         * Constructs a new HashingAlgorithm.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IHashingAlgorithm);

        /** HashingAlgorithm name. */
        public name: string;

        /**
         * Creates a new HashingAlgorithm instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HashingAlgorithm instance
         */
        public static create(properties?: common.IHashingAlgorithm): common.HashingAlgorithm;

        /**
         * Encodes the specified HashingAlgorithm message. Does not implicitly {@link common.HashingAlgorithm.verify|verify} messages.
         * @param message HashingAlgorithm message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IHashingAlgorithm, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HashingAlgorithm message, length delimited. Does not implicitly {@link common.HashingAlgorithm.verify|verify} messages.
         * @param message HashingAlgorithm message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IHashingAlgorithm, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HashingAlgorithm message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HashingAlgorithm
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.HashingAlgorithm;

        /**
         * Decodes a HashingAlgorithm message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HashingAlgorithm
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.HashingAlgorithm;

        /**
         * Verifies a HashingAlgorithm message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HashingAlgorithm message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HashingAlgorithm
         */
        public static fromObject(object: { [k: string]: any }): common.HashingAlgorithm;

        /**
         * Creates a plain object from a HashingAlgorithm message. Also converts values to other types if specified.
         * @param message HashingAlgorithm
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.HashingAlgorithm, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HashingAlgorithm to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BlockDataHashingStructure. */
    interface IBlockDataHashingStructure {

        /** BlockDataHashingStructure width */
        width?: (number|null);
    }

    /** Represents a BlockDataHashingStructure. */
    class BlockDataHashingStructure implements IBlockDataHashingStructure {

        /**
         * Constructs a new BlockDataHashingStructure.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IBlockDataHashingStructure);

        /** BlockDataHashingStructure width. */
        public width: number;

        /**
         * Creates a new BlockDataHashingStructure instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BlockDataHashingStructure instance
         */
        public static create(properties?: common.IBlockDataHashingStructure): common.BlockDataHashingStructure;

        /**
         * Encodes the specified BlockDataHashingStructure message. Does not implicitly {@link common.BlockDataHashingStructure.verify|verify} messages.
         * @param message BlockDataHashingStructure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IBlockDataHashingStructure, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BlockDataHashingStructure message, length delimited. Does not implicitly {@link common.BlockDataHashingStructure.verify|verify} messages.
         * @param message BlockDataHashingStructure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IBlockDataHashingStructure, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BlockDataHashingStructure message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BlockDataHashingStructure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.BlockDataHashingStructure;

        /**
         * Decodes a BlockDataHashingStructure message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BlockDataHashingStructure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.BlockDataHashingStructure;

        /**
         * Verifies a BlockDataHashingStructure message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BlockDataHashingStructure message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BlockDataHashingStructure
         */
        public static fromObject(object: { [k: string]: any }): common.BlockDataHashingStructure;

        /**
         * Creates a plain object from a BlockDataHashingStructure message. Also converts values to other types if specified.
         * @param message BlockDataHashingStructure
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.BlockDataHashingStructure, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BlockDataHashingStructure to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrdererAddresses. */
    interface IOrdererAddresses {

        /** OrdererAddresses addresses */
        addresses?: (string[]|null);
    }

    /** Represents an OrdererAddresses. */
    class OrdererAddresses implements IOrdererAddresses {

        /**
         * Constructs a new OrdererAddresses.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IOrdererAddresses);

        /** OrdererAddresses addresses. */
        public addresses: string[];

        /**
         * Creates a new OrdererAddresses instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrdererAddresses instance
         */
        public static create(properties?: common.IOrdererAddresses): common.OrdererAddresses;

        /**
         * Encodes the specified OrdererAddresses message. Does not implicitly {@link common.OrdererAddresses.verify|verify} messages.
         * @param message OrdererAddresses message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IOrdererAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrdererAddresses message, length delimited. Does not implicitly {@link common.OrdererAddresses.verify|verify} messages.
         * @param message OrdererAddresses message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IOrdererAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrdererAddresses message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrdererAddresses
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.OrdererAddresses;

        /**
         * Decodes an OrdererAddresses message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrdererAddresses
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.OrdererAddresses;

        /**
         * Verifies an OrdererAddresses message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrdererAddresses message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrdererAddresses
         */
        public static fromObject(object: { [k: string]: any }): common.OrdererAddresses;

        /**
         * Creates a plain object from an OrdererAddresses message. Also converts values to other types if specified.
         * @param message OrdererAddresses
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.OrdererAddresses, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrdererAddresses to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Consortium. */
    interface IConsortium {

        /** Consortium name */
        name?: (string|null);
    }

    /** Represents a Consortium. */
    class Consortium implements IConsortium {

        /**
         * Constructs a new Consortium.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.IConsortium);

        /** Consortium name. */
        public name: string;

        /**
         * Creates a new Consortium instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Consortium instance
         */
        public static create(properties?: common.IConsortium): common.Consortium;

        /**
         * Encodes the specified Consortium message. Does not implicitly {@link common.Consortium.verify|verify} messages.
         * @param message Consortium message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.IConsortium, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Consortium message, length delimited. Does not implicitly {@link common.Consortium.verify|verify} messages.
         * @param message Consortium message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.IConsortium, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Consortium message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Consortium
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Consortium;

        /**
         * Decodes a Consortium message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Consortium
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Consortium;

        /**
         * Verifies a Consortium message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Consortium message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Consortium
         */
        public static fromObject(object: { [k: string]: any }): common.Consortium;

        /**
         * Creates a plain object from a Consortium message. Also converts values to other types if specified.
         * @param message Consortium
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Consortium, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Consortium to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Capabilities. */
    interface ICapabilities {

        /** Capabilities capabilities */
        capabilities?: ({ [k: string]: common.ICapability }|null);
    }

    /** Represents a Capabilities. */
    class Capabilities implements ICapabilities {

        /**
         * Constructs a new Capabilities.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ICapabilities);

        /** Capabilities capabilities. */
        public capabilities: { [k: string]: common.ICapability };

        /**
         * Creates a new Capabilities instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Capabilities instance
         */
        public static create(properties?: common.ICapabilities): common.Capabilities;

        /**
         * Encodes the specified Capabilities message. Does not implicitly {@link common.Capabilities.verify|verify} messages.
         * @param message Capabilities message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ICapabilities, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Capabilities message, length delimited. Does not implicitly {@link common.Capabilities.verify|verify} messages.
         * @param message Capabilities message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ICapabilities, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Capabilities message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Capabilities
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Capabilities;

        /**
         * Decodes a Capabilities message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Capabilities
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Capabilities;

        /**
         * Verifies a Capabilities message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Capabilities message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Capabilities
         */
        public static fromObject(object: { [k: string]: any }): common.Capabilities;

        /**
         * Creates a plain object from a Capabilities message. Also converts values to other types if specified.
         * @param message Capabilities
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Capabilities, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Capabilities to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Capability. */
    interface ICapability {
    }

    /** Represents a Capability. */
    class Capability implements ICapability {

        /**
         * Constructs a new Capability.
         * @param [properties] Properties to set
         */
        constructor(properties?: common.ICapability);

        /**
         * Creates a new Capability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Capability instance
         */
        public static create(properties?: common.ICapability): common.Capability;

        /**
         * Encodes the specified Capability message. Does not implicitly {@link common.Capability.verify|verify} messages.
         * @param message Capability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: common.ICapability, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Capability message, length delimited. Does not implicitly {@link common.Capability.verify|verify} messages.
         * @param message Capability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: common.ICapability, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Capability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Capability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): common.Capability;

        /**
         * Decodes a Capability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Capability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): common.Capability;

        /**
         * Verifies a Capability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Capability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Capability
         */
        public static fromObject(object: { [k: string]: any }): common.Capability;

        /**
         * Creates a plain object from a Capability message. Also converts values to other types if specified.
         * @param message Capability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: common.Capability, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Capability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace discovery. */
export namespace discovery {

    /** Represents a Discovery */
    class Discovery extends $protobuf.rpc.Service {

        /**
         * Constructs a new Discovery service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new Discovery service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): Discovery;

        /**
         * Calls Discover.
         * @param request SignedRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and Response
         */
        public discover(request: discovery.ISignedRequest, callback: discovery.Discovery.DiscoverCallback): void;

        /**
         * Calls Discover.
         * @param request SignedRequest message or plain object
         * @returns Promise
         */
        public discover(request: discovery.ISignedRequest): Promise<discovery.Response>;
    }

    namespace Discovery {

        /**
         * Callback as used by {@link discovery.Discovery#discover}.
         * @param error Error, if any
         * @param [response] Response
         */
        type DiscoverCallback = (error: (Error|null), response?: discovery.Response) => void;
    }

    /** Properties of a SignedRequest. */
    interface ISignedRequest {

        /** SignedRequest payload */
        payload?: (Uint8Array|null);

        /** SignedRequest signature */
        signature?: (Uint8Array|null);
    }

    /** Represents a SignedRequest. */
    class SignedRequest implements ISignedRequest {

        /**
         * Constructs a new SignedRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.ISignedRequest);

        /** SignedRequest payload. */
        public payload: Uint8Array;

        /** SignedRequest signature. */
        public signature: Uint8Array;

        /**
         * Creates a new SignedRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SignedRequest instance
         */
        public static create(properties?: discovery.ISignedRequest): discovery.SignedRequest;

        /**
         * Encodes the specified SignedRequest message. Does not implicitly {@link discovery.SignedRequest.verify|verify} messages.
         * @param message SignedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.ISignedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SignedRequest message, length delimited. Does not implicitly {@link discovery.SignedRequest.verify|verify} messages.
         * @param message SignedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.ISignedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SignedRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.SignedRequest;

        /**
         * Decodes a SignedRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SignedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.SignedRequest;

        /**
         * Verifies a SignedRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SignedRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SignedRequest
         */
        public static fromObject(object: { [k: string]: any }): discovery.SignedRequest;

        /**
         * Creates a plain object from a SignedRequest message. Also converts values to other types if specified.
         * @param message SignedRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.SignedRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SignedRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request authentication */
        authentication?: (discovery.IAuthInfo|null);

        /** Request queries */
        queries?: (discovery.IQuery[]|null);
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IRequest);

        /** Request authentication. */
        public authentication?: (discovery.IAuthInfo|null);

        /** Request queries. */
        public queries: discovery.IQuery[];

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: discovery.IRequest): discovery.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link discovery.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link discovery.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): discovery.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response results */
        results?: (discovery.IQueryResult[]|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IResponse);

        /** Response results. */
        public results: discovery.IQueryResult[];

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: discovery.IResponse): discovery.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link discovery.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link discovery.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): discovery.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AuthInfo. */
    interface IAuthInfo {

        /** AuthInfo clientIdentity */
        clientIdentity?: (Uint8Array|null);

        /** AuthInfo clientTlsCertHash */
        clientTlsCertHash?: (Uint8Array|null);
    }

    /** Represents an AuthInfo. */
    class AuthInfo implements IAuthInfo {

        /**
         * Constructs a new AuthInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IAuthInfo);

        /** AuthInfo clientIdentity. */
        public clientIdentity: Uint8Array;

        /** AuthInfo clientTlsCertHash. */
        public clientTlsCertHash: Uint8Array;

        /**
         * Creates a new AuthInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AuthInfo instance
         */
        public static create(properties?: discovery.IAuthInfo): discovery.AuthInfo;

        /**
         * Encodes the specified AuthInfo message. Does not implicitly {@link discovery.AuthInfo.verify|verify} messages.
         * @param message AuthInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IAuthInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AuthInfo message, length delimited. Does not implicitly {@link discovery.AuthInfo.verify|verify} messages.
         * @param message AuthInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IAuthInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AuthInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AuthInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.AuthInfo;

        /**
         * Decodes an AuthInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AuthInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.AuthInfo;

        /**
         * Verifies an AuthInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AuthInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AuthInfo
         */
        public static fromObject(object: { [k: string]: any }): discovery.AuthInfo;

        /**
         * Creates a plain object from an AuthInfo message. Also converts values to other types if specified.
         * @param message AuthInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.AuthInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AuthInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Query. */
    interface IQuery {

        /** Query channel */
        channel?: (string|null);

        /** Query configQuery */
        configQuery?: (discovery.IConfigQuery|null);

        /** Query peerQuery */
        peerQuery?: (discovery.IPeerMembershipQuery|null);

        /** Query ccQuery */
        ccQuery?: (discovery.IChaincodeQuery|null);

        /** Query localPeers */
        localPeers?: (discovery.ILocalPeerQuery|null);
    }

    /** Represents a Query. */
    class Query implements IQuery {

        /**
         * Constructs a new Query.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IQuery);

        /** Query channel. */
        public channel: string;

        /** Query configQuery. */
        public configQuery?: (discovery.IConfigQuery|null);

        /** Query peerQuery. */
        public peerQuery?: (discovery.IPeerMembershipQuery|null);

        /** Query ccQuery. */
        public ccQuery?: (discovery.IChaincodeQuery|null);

        /** Query localPeers. */
        public localPeers?: (discovery.ILocalPeerQuery|null);

        /** Query query. */
        public query?: ("configQuery"|"peerQuery"|"ccQuery"|"localPeers");

        /**
         * Creates a new Query instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Query instance
         */
        public static create(properties?: discovery.IQuery): discovery.Query;

        /**
         * Encodes the specified Query message. Does not implicitly {@link discovery.Query.verify|verify} messages.
         * @param message Query message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Query message, length delimited. Does not implicitly {@link discovery.Query.verify|verify} messages.
         * @param message Query message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Query message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Query
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.Query;

        /**
         * Decodes a Query message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Query
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.Query;

        /**
         * Verifies a Query message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Query message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Query
         */
        public static fromObject(object: { [k: string]: any }): discovery.Query;

        /**
         * Creates a plain object from a Query message. Also converts values to other types if specified.
         * @param message Query
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.Query, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Query to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryResult. */
    interface IQueryResult {

        /** QueryResult error */
        error?: (discovery.IError|null);

        /** QueryResult configResult */
        configResult?: (discovery.IConfigResult|null);

        /** QueryResult ccQueryRes */
        ccQueryRes?: (discovery.IChaincodeQueryResult|null);

        /** QueryResult members */
        members?: (discovery.IPeerMembershipResult|null);
    }

    /** Represents a QueryResult. */
    class QueryResult implements IQueryResult {

        /**
         * Constructs a new QueryResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IQueryResult);

        /** QueryResult error. */
        public error?: (discovery.IError|null);

        /** QueryResult configResult. */
        public configResult?: (discovery.IConfigResult|null);

        /** QueryResult ccQueryRes. */
        public ccQueryRes?: (discovery.IChaincodeQueryResult|null);

        /** QueryResult members. */
        public members?: (discovery.IPeerMembershipResult|null);

        /** QueryResult result. */
        public result?: ("error"|"configResult"|"ccQueryRes"|"members");

        /**
         * Creates a new QueryResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryResult instance
         */
        public static create(properties?: discovery.IQueryResult): discovery.QueryResult;

        /**
         * Encodes the specified QueryResult message. Does not implicitly {@link discovery.QueryResult.verify|verify} messages.
         * @param message QueryResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryResult message, length delimited. Does not implicitly {@link discovery.QueryResult.verify|verify} messages.
         * @param message QueryResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.QueryResult;

        /**
         * Decodes a QueryResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.QueryResult;

        /**
         * Verifies a QueryResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryResult
         */
        public static fromObject(object: { [k: string]: any }): discovery.QueryResult;

        /**
         * Creates a plain object from a QueryResult message. Also converts values to other types if specified.
         * @param message QueryResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.QueryResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigQuery. */
    interface IConfigQuery {
    }

    /** Represents a ConfigQuery. */
    class ConfigQuery implements IConfigQuery {

        /**
         * Constructs a new ConfigQuery.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IConfigQuery);

        /**
         * Creates a new ConfigQuery instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigQuery instance
         */
        public static create(properties?: discovery.IConfigQuery): discovery.ConfigQuery;

        /**
         * Encodes the specified ConfigQuery message. Does not implicitly {@link discovery.ConfigQuery.verify|verify} messages.
         * @param message ConfigQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IConfigQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigQuery message, length delimited. Does not implicitly {@link discovery.ConfigQuery.verify|verify} messages.
         * @param message ConfigQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IConfigQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigQuery message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.ConfigQuery;

        /**
         * Decodes a ConfigQuery message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.ConfigQuery;

        /**
         * Verifies a ConfigQuery message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigQuery message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigQuery
         */
        public static fromObject(object: { [k: string]: any }): discovery.ConfigQuery;

        /**
         * Creates a plain object from a ConfigQuery message. Also converts values to other types if specified.
         * @param message ConfigQuery
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.ConfigQuery, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigQuery to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigResult. */
    interface IConfigResult {

        /** ConfigResult msps */
        msps?: ({ [k: string]: msp.IFabricMSPConfig }|null);

        /** ConfigResult orderers */
        orderers?: ({ [k: string]: discovery.IEndpoints }|null);
    }

    /** Represents a ConfigResult. */
    class ConfigResult implements IConfigResult {

        /**
         * Constructs a new ConfigResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IConfigResult);

        /** ConfigResult msps. */
        public msps: { [k: string]: msp.IFabricMSPConfig };

        /** ConfigResult orderers. */
        public orderers: { [k: string]: discovery.IEndpoints };

        /**
         * Creates a new ConfigResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigResult instance
         */
        public static create(properties?: discovery.IConfigResult): discovery.ConfigResult;

        /**
         * Encodes the specified ConfigResult message. Does not implicitly {@link discovery.ConfigResult.verify|verify} messages.
         * @param message ConfigResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IConfigResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigResult message, length delimited. Does not implicitly {@link discovery.ConfigResult.verify|verify} messages.
         * @param message ConfigResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IConfigResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.ConfigResult;

        /**
         * Decodes a ConfigResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.ConfigResult;

        /**
         * Verifies a ConfigResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigResult
         */
        public static fromObject(object: { [k: string]: any }): discovery.ConfigResult;

        /**
         * Creates a plain object from a ConfigResult message. Also converts values to other types if specified.
         * @param message ConfigResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.ConfigResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PeerMembershipQuery. */
    interface IPeerMembershipQuery {

        /** PeerMembershipQuery filter */
        filter?: (discovery.IChaincodeInterest|null);
    }

    /** Represents a PeerMembershipQuery. */
    class PeerMembershipQuery implements IPeerMembershipQuery {

        /**
         * Constructs a new PeerMembershipQuery.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IPeerMembershipQuery);

        /** PeerMembershipQuery filter. */
        public filter?: (discovery.IChaincodeInterest|null);

        /**
         * Creates a new PeerMembershipQuery instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PeerMembershipQuery instance
         */
        public static create(properties?: discovery.IPeerMembershipQuery): discovery.PeerMembershipQuery;

        /**
         * Encodes the specified PeerMembershipQuery message. Does not implicitly {@link discovery.PeerMembershipQuery.verify|verify} messages.
         * @param message PeerMembershipQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IPeerMembershipQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PeerMembershipQuery message, length delimited. Does not implicitly {@link discovery.PeerMembershipQuery.verify|verify} messages.
         * @param message PeerMembershipQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IPeerMembershipQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PeerMembershipQuery message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PeerMembershipQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.PeerMembershipQuery;

        /**
         * Decodes a PeerMembershipQuery message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PeerMembershipQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.PeerMembershipQuery;

        /**
         * Verifies a PeerMembershipQuery message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PeerMembershipQuery message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PeerMembershipQuery
         */
        public static fromObject(object: { [k: string]: any }): discovery.PeerMembershipQuery;

        /**
         * Creates a plain object from a PeerMembershipQuery message. Also converts values to other types if specified.
         * @param message PeerMembershipQuery
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.PeerMembershipQuery, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PeerMembershipQuery to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PeerMembershipResult. */
    interface IPeerMembershipResult {

        /** PeerMembershipResult peersByOrg */
        peersByOrg?: ({ [k: string]: discovery.IPeers }|null);
    }

    /** Represents a PeerMembershipResult. */
    class PeerMembershipResult implements IPeerMembershipResult {

        /**
         * Constructs a new PeerMembershipResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IPeerMembershipResult);

        /** PeerMembershipResult peersByOrg. */
        public peersByOrg: { [k: string]: discovery.IPeers };

        /**
         * Creates a new PeerMembershipResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PeerMembershipResult instance
         */
        public static create(properties?: discovery.IPeerMembershipResult): discovery.PeerMembershipResult;

        /**
         * Encodes the specified PeerMembershipResult message. Does not implicitly {@link discovery.PeerMembershipResult.verify|verify} messages.
         * @param message PeerMembershipResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IPeerMembershipResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PeerMembershipResult message, length delimited. Does not implicitly {@link discovery.PeerMembershipResult.verify|verify} messages.
         * @param message PeerMembershipResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IPeerMembershipResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PeerMembershipResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PeerMembershipResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.PeerMembershipResult;

        /**
         * Decodes a PeerMembershipResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PeerMembershipResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.PeerMembershipResult;

        /**
         * Verifies a PeerMembershipResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PeerMembershipResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PeerMembershipResult
         */
        public static fromObject(object: { [k: string]: any }): discovery.PeerMembershipResult;

        /**
         * Creates a plain object from a PeerMembershipResult message. Also converts values to other types if specified.
         * @param message PeerMembershipResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.PeerMembershipResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PeerMembershipResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeQuery. */
    interface IChaincodeQuery {

        /** ChaincodeQuery interests */
        interests?: (discovery.IChaincodeInterest[]|null);
    }

    /** Represents a ChaincodeQuery. */
    class ChaincodeQuery implements IChaincodeQuery {

        /**
         * Constructs a new ChaincodeQuery.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IChaincodeQuery);

        /** ChaincodeQuery interests. */
        public interests: discovery.IChaincodeInterest[];

        /**
         * Creates a new ChaincodeQuery instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeQuery instance
         */
        public static create(properties?: discovery.IChaincodeQuery): discovery.ChaincodeQuery;

        /**
         * Encodes the specified ChaincodeQuery message. Does not implicitly {@link discovery.ChaincodeQuery.verify|verify} messages.
         * @param message ChaincodeQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IChaincodeQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeQuery message, length delimited. Does not implicitly {@link discovery.ChaincodeQuery.verify|verify} messages.
         * @param message ChaincodeQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IChaincodeQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeQuery message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.ChaincodeQuery;

        /**
         * Decodes a ChaincodeQuery message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.ChaincodeQuery;

        /**
         * Verifies a ChaincodeQuery message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeQuery message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeQuery
         */
        public static fromObject(object: { [k: string]: any }): discovery.ChaincodeQuery;

        /**
         * Creates a plain object from a ChaincodeQuery message. Also converts values to other types if specified.
         * @param message ChaincodeQuery
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.ChaincodeQuery, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeQuery to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeInterest. */
    interface IChaincodeInterest {

        /** ChaincodeInterest chaincodes */
        chaincodes?: (discovery.IChaincodeCall[]|null);
    }

    /** Represents a ChaincodeInterest. */
    class ChaincodeInterest implements IChaincodeInterest {

        /**
         * Constructs a new ChaincodeInterest.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IChaincodeInterest);

        /** ChaincodeInterest chaincodes. */
        public chaincodes: discovery.IChaincodeCall[];

        /**
         * Creates a new ChaincodeInterest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeInterest instance
         */
        public static create(properties?: discovery.IChaincodeInterest): discovery.ChaincodeInterest;

        /**
         * Encodes the specified ChaincodeInterest message. Does not implicitly {@link discovery.ChaincodeInterest.verify|verify} messages.
         * @param message ChaincodeInterest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IChaincodeInterest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeInterest message, length delimited. Does not implicitly {@link discovery.ChaincodeInterest.verify|verify} messages.
         * @param message ChaincodeInterest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IChaincodeInterest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeInterest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeInterest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.ChaincodeInterest;

        /**
         * Decodes a ChaincodeInterest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeInterest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.ChaincodeInterest;

        /**
         * Verifies a ChaincodeInterest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeInterest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeInterest
         */
        public static fromObject(object: { [k: string]: any }): discovery.ChaincodeInterest;

        /**
         * Creates a plain object from a ChaincodeInterest message. Also converts values to other types if specified.
         * @param message ChaincodeInterest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.ChaincodeInterest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeInterest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeCall. */
    interface IChaincodeCall {

        /** ChaincodeCall name */
        name?: (string|null);

        /** ChaincodeCall collectionNames */
        collectionNames?: (string[]|null);
    }

    /** Represents a ChaincodeCall. */
    class ChaincodeCall implements IChaincodeCall {

        /**
         * Constructs a new ChaincodeCall.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IChaincodeCall);

        /** ChaincodeCall name. */
        public name: string;

        /** ChaincodeCall collectionNames. */
        public collectionNames: string[];

        /**
         * Creates a new ChaincodeCall instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeCall instance
         */
        public static create(properties?: discovery.IChaincodeCall): discovery.ChaincodeCall;

        /**
         * Encodes the specified ChaincodeCall message. Does not implicitly {@link discovery.ChaincodeCall.verify|verify} messages.
         * @param message ChaincodeCall message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IChaincodeCall, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeCall message, length delimited. Does not implicitly {@link discovery.ChaincodeCall.verify|verify} messages.
         * @param message ChaincodeCall message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IChaincodeCall, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeCall message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeCall
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.ChaincodeCall;

        /**
         * Decodes a ChaincodeCall message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeCall
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.ChaincodeCall;

        /**
         * Verifies a ChaincodeCall message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeCall message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeCall
         */
        public static fromObject(object: { [k: string]: any }): discovery.ChaincodeCall;

        /**
         * Creates a plain object from a ChaincodeCall message. Also converts values to other types if specified.
         * @param message ChaincodeCall
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.ChaincodeCall, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeCall to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeQueryResult. */
    interface IChaincodeQueryResult {

        /** ChaincodeQueryResult content */
        content?: (discovery.IEndorsementDescriptor[]|null);
    }

    /** Represents a ChaincodeQueryResult. */
    class ChaincodeQueryResult implements IChaincodeQueryResult {

        /**
         * Constructs a new ChaincodeQueryResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IChaincodeQueryResult);

        /** ChaincodeQueryResult content. */
        public content: discovery.IEndorsementDescriptor[];

        /**
         * Creates a new ChaincodeQueryResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeQueryResult instance
         */
        public static create(properties?: discovery.IChaincodeQueryResult): discovery.ChaincodeQueryResult;

        /**
         * Encodes the specified ChaincodeQueryResult message. Does not implicitly {@link discovery.ChaincodeQueryResult.verify|verify} messages.
         * @param message ChaincodeQueryResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IChaincodeQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeQueryResult message, length delimited. Does not implicitly {@link discovery.ChaincodeQueryResult.verify|verify} messages.
         * @param message ChaincodeQueryResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IChaincodeQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeQueryResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeQueryResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.ChaincodeQueryResult;

        /**
         * Decodes a ChaincodeQueryResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeQueryResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.ChaincodeQueryResult;

        /**
         * Verifies a ChaincodeQueryResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeQueryResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeQueryResult
         */
        public static fromObject(object: { [k: string]: any }): discovery.ChaincodeQueryResult;

        /**
         * Creates a plain object from a ChaincodeQueryResult message. Also converts values to other types if specified.
         * @param message ChaincodeQueryResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.ChaincodeQueryResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeQueryResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LocalPeerQuery. */
    interface ILocalPeerQuery {
    }

    /** Represents a LocalPeerQuery. */
    class LocalPeerQuery implements ILocalPeerQuery {

        /**
         * Constructs a new LocalPeerQuery.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.ILocalPeerQuery);

        /**
         * Creates a new LocalPeerQuery instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LocalPeerQuery instance
         */
        public static create(properties?: discovery.ILocalPeerQuery): discovery.LocalPeerQuery;

        /**
         * Encodes the specified LocalPeerQuery message. Does not implicitly {@link discovery.LocalPeerQuery.verify|verify} messages.
         * @param message LocalPeerQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.ILocalPeerQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LocalPeerQuery message, length delimited. Does not implicitly {@link discovery.LocalPeerQuery.verify|verify} messages.
         * @param message LocalPeerQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.ILocalPeerQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LocalPeerQuery message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LocalPeerQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.LocalPeerQuery;

        /**
         * Decodes a LocalPeerQuery message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LocalPeerQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.LocalPeerQuery;

        /**
         * Verifies a LocalPeerQuery message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LocalPeerQuery message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LocalPeerQuery
         */
        public static fromObject(object: { [k: string]: any }): discovery.LocalPeerQuery;

        /**
         * Creates a plain object from a LocalPeerQuery message. Also converts values to other types if specified.
         * @param message LocalPeerQuery
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.LocalPeerQuery, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LocalPeerQuery to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EndorsementDescriptor. */
    interface IEndorsementDescriptor {

        /** EndorsementDescriptor chaincode */
        chaincode?: (string|null);

        /** EndorsementDescriptor endorsersByGroups */
        endorsersByGroups?: ({ [k: string]: discovery.IPeers }|null);

        /** EndorsementDescriptor layouts */
        layouts?: (discovery.ILayout[]|null);
    }

    /** Represents an EndorsementDescriptor. */
    class EndorsementDescriptor implements IEndorsementDescriptor {

        /**
         * Constructs a new EndorsementDescriptor.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IEndorsementDescriptor);

        /** EndorsementDescriptor chaincode. */
        public chaincode: string;

        /** EndorsementDescriptor endorsersByGroups. */
        public endorsersByGroups: { [k: string]: discovery.IPeers };

        /** EndorsementDescriptor layouts. */
        public layouts: discovery.ILayout[];

        /**
         * Creates a new EndorsementDescriptor instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EndorsementDescriptor instance
         */
        public static create(properties?: discovery.IEndorsementDescriptor): discovery.EndorsementDescriptor;

        /**
         * Encodes the specified EndorsementDescriptor message. Does not implicitly {@link discovery.EndorsementDescriptor.verify|verify} messages.
         * @param message EndorsementDescriptor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IEndorsementDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EndorsementDescriptor message, length delimited. Does not implicitly {@link discovery.EndorsementDescriptor.verify|verify} messages.
         * @param message EndorsementDescriptor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IEndorsementDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EndorsementDescriptor message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EndorsementDescriptor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.EndorsementDescriptor;

        /**
         * Decodes an EndorsementDescriptor message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EndorsementDescriptor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.EndorsementDescriptor;

        /**
         * Verifies an EndorsementDescriptor message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EndorsementDescriptor message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EndorsementDescriptor
         */
        public static fromObject(object: { [k: string]: any }): discovery.EndorsementDescriptor;

        /**
         * Creates a plain object from an EndorsementDescriptor message. Also converts values to other types if specified.
         * @param message EndorsementDescriptor
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.EndorsementDescriptor, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EndorsementDescriptor to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Layout. */
    interface ILayout {

        /** Layout quantitiesByGroup */
        quantitiesByGroup?: ({ [k: string]: number }|null);
    }

    /** Represents a Layout. */
    class Layout implements ILayout {

        /**
         * Constructs a new Layout.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.ILayout);

        /** Layout quantitiesByGroup. */
        public quantitiesByGroup: { [k: string]: number };

        /**
         * Creates a new Layout instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Layout instance
         */
        public static create(properties?: discovery.ILayout): discovery.Layout;

        /**
         * Encodes the specified Layout message. Does not implicitly {@link discovery.Layout.verify|verify} messages.
         * @param message Layout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.ILayout, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Layout message, length delimited. Does not implicitly {@link discovery.Layout.verify|verify} messages.
         * @param message Layout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.ILayout, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Layout message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Layout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.Layout;

        /**
         * Decodes a Layout message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Layout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.Layout;

        /**
         * Verifies a Layout message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Layout message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Layout
         */
        public static fromObject(object: { [k: string]: any }): discovery.Layout;

        /**
         * Creates a plain object from a Layout message. Also converts values to other types if specified.
         * @param message Layout
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.Layout, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Layout to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Peers. */
    interface IPeers {

        /** Peers peers */
        peers?: (discovery.IPeer[]|null);
    }

    /** Represents a Peers. */
    class Peers implements IPeers {

        /**
         * Constructs a new Peers.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IPeers);

        /** Peers peers. */
        public peers: discovery.IPeer[];

        /**
         * Creates a new Peers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Peers instance
         */
        public static create(properties?: discovery.IPeers): discovery.Peers;

        /**
         * Encodes the specified Peers message. Does not implicitly {@link discovery.Peers.verify|verify} messages.
         * @param message Peers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IPeers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Peers message, length delimited. Does not implicitly {@link discovery.Peers.verify|verify} messages.
         * @param message Peers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IPeers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Peers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Peers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.Peers;

        /**
         * Decodes a Peers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Peers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.Peers;

        /**
         * Verifies a Peers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Peers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Peers
         */
        public static fromObject(object: { [k: string]: any }): discovery.Peers;

        /**
         * Creates a plain object from a Peers message. Also converts values to other types if specified.
         * @param message Peers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.Peers, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Peers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Peer. */
    interface IPeer {

        /** Peer stateInfo */
        stateInfo?: (gossip.IEnvelope|null);

        /** Peer membershipInfo */
        membershipInfo?: (gossip.IEnvelope|null);

        /** Peer identity */
        identity?: (Uint8Array|null);
    }

    /** Represents a Peer. */
    class Peer implements IPeer {

        /**
         * Constructs a new Peer.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IPeer);

        /** Peer stateInfo. */
        public stateInfo?: (gossip.IEnvelope|null);

        /** Peer membershipInfo. */
        public membershipInfo?: (gossip.IEnvelope|null);

        /** Peer identity. */
        public identity: Uint8Array;

        /**
         * Creates a new Peer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Peer instance
         */
        public static create(properties?: discovery.IPeer): discovery.Peer;

        /**
         * Encodes the specified Peer message. Does not implicitly {@link discovery.Peer.verify|verify} messages.
         * @param message Peer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IPeer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Peer message, length delimited. Does not implicitly {@link discovery.Peer.verify|verify} messages.
         * @param message Peer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IPeer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Peer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Peer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.Peer;

        /**
         * Decodes a Peer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Peer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.Peer;

        /**
         * Verifies a Peer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Peer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Peer
         */
        public static fromObject(object: { [k: string]: any }): discovery.Peer;

        /**
         * Creates a plain object from a Peer message. Also converts values to other types if specified.
         * @param message Peer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.Peer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Peer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Error. */
    interface IError {

        /** Error content */
        content?: (string|null);
    }

    /** Represents an Error. */
    class Error implements IError {

        /**
         * Constructs a new Error.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IError);

        /** Error content. */
        public content: string;

        /**
         * Creates a new Error instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Error instance
         */
        public static create(properties?: discovery.IError): discovery.Error;

        /**
         * Encodes the specified Error message. Does not implicitly {@link discovery.Error.verify|verify} messages.
         * @param message Error message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Error message, length delimited. Does not implicitly {@link discovery.Error.verify|verify} messages.
         * @param message Error message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Error message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Error
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.Error;

        /**
         * Decodes an Error message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Error
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.Error;

        /**
         * Verifies an Error message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Error message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Error
         */
        public static fromObject(object: { [k: string]: any }): discovery.Error;

        /**
         * Creates a plain object from an Error message. Also converts values to other types if specified.
         * @param message Error
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.Error, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Error to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Endpoints. */
    interface IEndpoints {

        /** Endpoints endpoint */
        endpoint?: (discovery.IEndpoint[]|null);
    }

    /** Represents an Endpoints. */
    class Endpoints implements IEndpoints {

        /**
         * Constructs a new Endpoints.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IEndpoints);

        /** Endpoints endpoint. */
        public endpoint: discovery.IEndpoint[];

        /**
         * Creates a new Endpoints instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Endpoints instance
         */
        public static create(properties?: discovery.IEndpoints): discovery.Endpoints;

        /**
         * Encodes the specified Endpoints message. Does not implicitly {@link discovery.Endpoints.verify|verify} messages.
         * @param message Endpoints message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IEndpoints, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Endpoints message, length delimited. Does not implicitly {@link discovery.Endpoints.verify|verify} messages.
         * @param message Endpoints message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IEndpoints, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Endpoints message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Endpoints
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.Endpoints;

        /**
         * Decodes an Endpoints message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Endpoints
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.Endpoints;

        /**
         * Verifies an Endpoints message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Endpoints message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Endpoints
         */
        public static fromObject(object: { [k: string]: any }): discovery.Endpoints;

        /**
         * Creates a plain object from an Endpoints message. Also converts values to other types if specified.
         * @param message Endpoints
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.Endpoints, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Endpoints to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Endpoint. */
    interface IEndpoint {

        /** Endpoint host */
        host?: (string|null);

        /** Endpoint port */
        port?: (number|null);
    }

    /** Represents an Endpoint. */
    class Endpoint implements IEndpoint {

        /**
         * Constructs a new Endpoint.
         * @param [properties] Properties to set
         */
        constructor(properties?: discovery.IEndpoint);

        /** Endpoint host. */
        public host: string;

        /** Endpoint port. */
        public port: number;

        /**
         * Creates a new Endpoint instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Endpoint instance
         */
        public static create(properties?: discovery.IEndpoint): discovery.Endpoint;

        /**
         * Encodes the specified Endpoint message. Does not implicitly {@link discovery.Endpoint.verify|verify} messages.
         * @param message Endpoint message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: discovery.IEndpoint, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Endpoint message, length delimited. Does not implicitly {@link discovery.Endpoint.verify|verify} messages.
         * @param message Endpoint message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: discovery.IEndpoint, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Endpoint message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Endpoint
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): discovery.Endpoint;

        /**
         * Decodes an Endpoint message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Endpoint
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): discovery.Endpoint;

        /**
         * Verifies an Endpoint message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Endpoint message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Endpoint
         */
        public static fromObject(object: { [k: string]: any }): discovery.Endpoint;

        /**
         * Creates a plain object from an Endpoint message. Also converts values to other types if specified.
         * @param message Endpoint
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: discovery.Endpoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Endpoint to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace gossip. */
export namespace gossip {

    /** Represents a Gossip */
    class Gossip extends $protobuf.rpc.Service {

        /**
         * Constructs a new Gossip service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new Gossip service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): Gossip;

        /**
         * Calls GossipStream.
         * @param request Envelope message or plain object
         * @param callback Node-style callback called with the error, if any, and Envelope
         */
        public gossipStream(request: gossip.IEnvelope, callback: gossip.Gossip.GossipStreamCallback): void;

        /**
         * Calls GossipStream.
         * @param request Envelope message or plain object
         * @returns Promise
         */
        public gossipStream(request: gossip.IEnvelope): Promise<gossip.Envelope>;

        /**
         * Calls Ping.
         * @param request Empty message or plain object
         * @param callback Node-style callback called with the error, if any, and Empty
         */
        public ping(request: gossip.IEmpty, callback: gossip.Gossip.PingCallback): void;

        /**
         * Calls Ping.
         * @param request Empty message or plain object
         * @returns Promise
         */
        public ping(request: gossip.IEmpty): Promise<gossip.Empty>;
    }

    namespace Gossip {

        /**
         * Callback as used by {@link gossip.Gossip#gossipStream}.
         * @param error Error, if any
         * @param [response] Envelope
         */
        type GossipStreamCallback = (error: (Error|null), response?: gossip.Envelope) => void;

        /**
         * Callback as used by {@link gossip.Gossip#ping}.
         * @param error Error, if any
         * @param [response] Empty
         */
        type PingCallback = (error: (Error|null), response?: gossip.Empty) => void;
    }

    /** Properties of an Envelope. */
    interface IEnvelope {

        /** Envelope payload */
        payload?: (Uint8Array|null);

        /** Envelope signature */
        signature?: (Uint8Array|null);

        /** Envelope secretEnvelope */
        secretEnvelope?: (gossip.ISecretEnvelope|null);
    }

    /** Represents an Envelope. */
    class Envelope implements IEnvelope {

        /**
         * Constructs a new Envelope.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IEnvelope);

        /** Envelope payload. */
        public payload: Uint8Array;

        /** Envelope signature. */
        public signature: Uint8Array;

        /** Envelope secretEnvelope. */
        public secretEnvelope?: (gossip.ISecretEnvelope|null);

        /**
         * Creates a new Envelope instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Envelope instance
         */
        public static create(properties?: gossip.IEnvelope): gossip.Envelope;

        /**
         * Encodes the specified Envelope message. Does not implicitly {@link gossip.Envelope.verify|verify} messages.
         * @param message Envelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Envelope message, length delimited. Does not implicitly {@link gossip.Envelope.verify|verify} messages.
         * @param message Envelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Envelope message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Envelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.Envelope;

        /**
         * Decodes an Envelope message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Envelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.Envelope;

        /**
         * Verifies an Envelope message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Envelope message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Envelope
         */
        public static fromObject(object: { [k: string]: any }): gossip.Envelope;

        /**
         * Creates a plain object from an Envelope message. Also converts values to other types if specified.
         * @param message Envelope
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.Envelope, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Envelope to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecretEnvelope. */
    interface ISecretEnvelope {

        /** SecretEnvelope payload */
        payload?: (Uint8Array|null);

        /** SecretEnvelope signature */
        signature?: (Uint8Array|null);
    }

    /** Represents a SecretEnvelope. */
    class SecretEnvelope implements ISecretEnvelope {

        /**
         * Constructs a new SecretEnvelope.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.ISecretEnvelope);

        /** SecretEnvelope payload. */
        public payload: Uint8Array;

        /** SecretEnvelope signature. */
        public signature: Uint8Array;

        /**
         * Creates a new SecretEnvelope instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecretEnvelope instance
         */
        public static create(properties?: gossip.ISecretEnvelope): gossip.SecretEnvelope;

        /**
         * Encodes the specified SecretEnvelope message. Does not implicitly {@link gossip.SecretEnvelope.verify|verify} messages.
         * @param message SecretEnvelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.ISecretEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecretEnvelope message, length delimited. Does not implicitly {@link gossip.SecretEnvelope.verify|verify} messages.
         * @param message SecretEnvelope message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.ISecretEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecretEnvelope message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecretEnvelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.SecretEnvelope;

        /**
         * Decodes a SecretEnvelope message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecretEnvelope
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.SecretEnvelope;

        /**
         * Verifies a SecretEnvelope message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecretEnvelope message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecretEnvelope
         */
        public static fromObject(object: { [k: string]: any }): gossip.SecretEnvelope;

        /**
         * Creates a plain object from a SecretEnvelope message. Also converts values to other types if specified.
         * @param message SecretEnvelope
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.SecretEnvelope, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecretEnvelope to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Secret. */
    interface ISecret {

        /** Secret internalEndpoint */
        internalEndpoint?: (string|null);
    }

    /** Represents a Secret. */
    class Secret implements ISecret {

        /**
         * Constructs a new Secret.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.ISecret);

        /** Secret internalEndpoint. */
        public internalEndpoint: string;

        /** Secret content. */
        public content?: "internalEndpoint";

        /**
         * Creates a new Secret instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Secret instance
         */
        public static create(properties?: gossip.ISecret): gossip.Secret;

        /**
         * Encodes the specified Secret message. Does not implicitly {@link gossip.Secret.verify|verify} messages.
         * @param message Secret message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.ISecret, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Secret message, length delimited. Does not implicitly {@link gossip.Secret.verify|verify} messages.
         * @param message Secret message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.ISecret, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Secret message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Secret
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.Secret;

        /**
         * Decodes a Secret message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Secret
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.Secret;

        /**
         * Verifies a Secret message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Secret message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Secret
         */
        public static fromObject(object: { [k: string]: any }): gossip.Secret;

        /**
         * Creates a plain object from a Secret message. Also converts values to other types if specified.
         * @param message Secret
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.Secret, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Secret to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GossipMessage. */
    interface IGossipMessage {

        /** GossipMessage nonce */
        nonce?: (number|Long|null);

        /** GossipMessage channel */
        channel?: (Uint8Array|null);

        /** GossipMessage tag */
        tag?: (gossip.GossipMessage.Tag|null);

        /** GossipMessage aliveMsg */
        aliveMsg?: (gossip.IAliveMessage|null);

        /** GossipMessage memReq */
        memReq?: (gossip.IMembershipRequest|null);

        /** GossipMessage memRes */
        memRes?: (gossip.IMembershipResponse|null);

        /** GossipMessage dataMsg */
        dataMsg?: (gossip.IDataMessage|null);

        /** GossipMessage hello */
        hello?: (gossip.IGossipHello|null);

        /** GossipMessage dataDig */
        dataDig?: (gossip.IDataDigest|null);

        /** GossipMessage dataReq */
        dataReq?: (gossip.IDataRequest|null);

        /** GossipMessage dataUpdate */
        dataUpdate?: (gossip.IDataUpdate|null);

        /** GossipMessage empty */
        empty?: (gossip.IEmpty|null);

        /** GossipMessage conn */
        conn?: (gossip.IConnEstablish|null);

        /** GossipMessage stateInfo */
        stateInfo?: (gossip.IStateInfo|null);

        /** GossipMessage stateSnapshot */
        stateSnapshot?: (gossip.IStateInfoSnapshot|null);

        /** GossipMessage stateInfoPullReq */
        stateInfoPullReq?: (gossip.IStateInfoPullRequest|null);

        /** GossipMessage stateRequest */
        stateRequest?: (gossip.IRemoteStateRequest|null);

        /** GossipMessage stateResponse */
        stateResponse?: (gossip.IRemoteStateResponse|null);

        /** GossipMessage leadershipMsg */
        leadershipMsg?: (gossip.ILeadershipMessage|null);

        /** GossipMessage peerIdentity */
        peerIdentity?: (gossip.IPeerIdentity|null);

        /** GossipMessage ack */
        ack?: (gossip.IAcknowledgement|null);

        /** GossipMessage privateReq */
        privateReq?: (gossip.IRemotePvtDataRequest|null);

        /** GossipMessage privateRes */
        privateRes?: (gossip.IRemotePvtDataResponse|null);

        /** GossipMessage privateData */
        privateData?: (gossip.IPrivateDataMessage|null);
    }

    /** Represents a GossipMessage. */
    class GossipMessage implements IGossipMessage {

        /**
         * Constructs a new GossipMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IGossipMessage);

        /** GossipMessage nonce. */
        public nonce: (number|Long);

        /** GossipMessage channel. */
        public channel: Uint8Array;

        /** GossipMessage tag. */
        public tag: gossip.GossipMessage.Tag;

        /** GossipMessage aliveMsg. */
        public aliveMsg?: (gossip.IAliveMessage|null);

        /** GossipMessage memReq. */
        public memReq?: (gossip.IMembershipRequest|null);

        /** GossipMessage memRes. */
        public memRes?: (gossip.IMembershipResponse|null);

        /** GossipMessage dataMsg. */
        public dataMsg?: (gossip.IDataMessage|null);

        /** GossipMessage hello. */
        public hello?: (gossip.IGossipHello|null);

        /** GossipMessage dataDig. */
        public dataDig?: (gossip.IDataDigest|null);

        /** GossipMessage dataReq. */
        public dataReq?: (gossip.IDataRequest|null);

        /** GossipMessage dataUpdate. */
        public dataUpdate?: (gossip.IDataUpdate|null);

        /** GossipMessage empty. */
        public empty?: (gossip.IEmpty|null);

        /** GossipMessage conn. */
        public conn?: (gossip.IConnEstablish|null);

        /** GossipMessage stateInfo. */
        public stateInfo?: (gossip.IStateInfo|null);

        /** GossipMessage stateSnapshot. */
        public stateSnapshot?: (gossip.IStateInfoSnapshot|null);

        /** GossipMessage stateInfoPullReq. */
        public stateInfoPullReq?: (gossip.IStateInfoPullRequest|null);

        /** GossipMessage stateRequest. */
        public stateRequest?: (gossip.IRemoteStateRequest|null);

        /** GossipMessage stateResponse. */
        public stateResponse?: (gossip.IRemoteStateResponse|null);

        /** GossipMessage leadershipMsg. */
        public leadershipMsg?: (gossip.ILeadershipMessage|null);

        /** GossipMessage peerIdentity. */
        public peerIdentity?: (gossip.IPeerIdentity|null);

        /** GossipMessage ack. */
        public ack?: (gossip.IAcknowledgement|null);

        /** GossipMessage privateReq. */
        public privateReq?: (gossip.IRemotePvtDataRequest|null);

        /** GossipMessage privateRes. */
        public privateRes?: (gossip.IRemotePvtDataResponse|null);

        /** GossipMessage privateData. */
        public privateData?: (gossip.IPrivateDataMessage|null);

        /** GossipMessage content. */
        public content?: ("aliveMsg"|"memReq"|"memRes"|"dataMsg"|"hello"|"dataDig"|"dataReq"|"dataUpdate"|"empty"|"conn"|"stateInfo"|"stateSnapshot"|"stateInfoPullReq"|"stateRequest"|"stateResponse"|"leadershipMsg"|"peerIdentity"|"ack"|"privateReq"|"privateRes"|"privateData");

        /**
         * Creates a new GossipMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GossipMessage instance
         */
        public static create(properties?: gossip.IGossipMessage): gossip.GossipMessage;

        /**
         * Encodes the specified GossipMessage message. Does not implicitly {@link gossip.GossipMessage.verify|verify} messages.
         * @param message GossipMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IGossipMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GossipMessage message, length delimited. Does not implicitly {@link gossip.GossipMessage.verify|verify} messages.
         * @param message GossipMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IGossipMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GossipMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GossipMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.GossipMessage;

        /**
         * Decodes a GossipMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GossipMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.GossipMessage;

        /**
         * Verifies a GossipMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GossipMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GossipMessage
         */
        public static fromObject(object: { [k: string]: any }): gossip.GossipMessage;

        /**
         * Creates a plain object from a GossipMessage message. Also converts values to other types if specified.
         * @param message GossipMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.GossipMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GossipMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace GossipMessage {

        /** Tag enum. */
        enum Tag {
            UNDEFINED = 0,
            EMPTY = 1,
            ORG_ONLY = 2,
            CHAN_ONLY = 3,
            CHAN_AND_ORG = 4,
            CHAN_OR_ORG = 5
        }
    }

    /** Properties of a StateInfo. */
    interface IStateInfo {

        /** StateInfo timestamp */
        timestamp?: (gossip.IPeerTime|null);

        /** StateInfo pkiId */
        pkiId?: (Uint8Array|null);

        /** StateInfo channel_MAC */
        channel_MAC?: (Uint8Array|null);

        /** StateInfo properties */
        properties?: (gossip.IProperties|null);
    }

    /** Represents a StateInfo. */
    class StateInfo implements IStateInfo {

        /**
         * Constructs a new StateInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IStateInfo);

        /** StateInfo timestamp. */
        public timestamp?: (gossip.IPeerTime|null);

        /** StateInfo pkiId. */
        public pkiId: Uint8Array;

        /** StateInfo channel_MAC. */
        public channel_MAC: Uint8Array;

        /** StateInfo properties. */
        public properties?: (gossip.IProperties|null);

        /**
         * Creates a new StateInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StateInfo instance
         */
        public static create(properties?: gossip.IStateInfo): gossip.StateInfo;

        /**
         * Encodes the specified StateInfo message. Does not implicitly {@link gossip.StateInfo.verify|verify} messages.
         * @param message StateInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IStateInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StateInfo message, length delimited. Does not implicitly {@link gossip.StateInfo.verify|verify} messages.
         * @param message StateInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IStateInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StateInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StateInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.StateInfo;

        /**
         * Decodes a StateInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StateInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.StateInfo;

        /**
         * Verifies a StateInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StateInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StateInfo
         */
        public static fromObject(object: { [k: string]: any }): gossip.StateInfo;

        /**
         * Creates a plain object from a StateInfo message. Also converts values to other types if specified.
         * @param message StateInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.StateInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StateInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Properties. */
    interface IProperties {

        /** Properties ledgerHeight */
        ledgerHeight?: (number|Long|null);

        /** Properties leftChannel */
        leftChannel?: (boolean|null);

        /** Properties chaincodes */
        chaincodes?: (gossip.IChaincode[]|null);
    }

    /** Represents a Properties. */
    class Properties implements IProperties {

        /**
         * Constructs a new Properties.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IProperties);

        /** Properties ledgerHeight. */
        public ledgerHeight: (number|Long);

        /** Properties leftChannel. */
        public leftChannel: boolean;

        /** Properties chaincodes. */
        public chaincodes: gossip.IChaincode[];

        /**
         * Creates a new Properties instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Properties instance
         */
        public static create(properties?: gossip.IProperties): gossip.Properties;

        /**
         * Encodes the specified Properties message. Does not implicitly {@link gossip.Properties.verify|verify} messages.
         * @param message Properties message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IProperties, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Properties message, length delimited. Does not implicitly {@link gossip.Properties.verify|verify} messages.
         * @param message Properties message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IProperties, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Properties message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Properties
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.Properties;

        /**
         * Decodes a Properties message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Properties
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.Properties;

        /**
         * Verifies a Properties message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Properties message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Properties
         */
        public static fromObject(object: { [k: string]: any }): gossip.Properties;

        /**
         * Creates a plain object from a Properties message. Also converts values to other types if specified.
         * @param message Properties
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.Properties, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Properties to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StateInfoSnapshot. */
    interface IStateInfoSnapshot {

        /** StateInfoSnapshot elements */
        elements?: (gossip.IEnvelope[]|null);
    }

    /** Represents a StateInfoSnapshot. */
    class StateInfoSnapshot implements IStateInfoSnapshot {

        /**
         * Constructs a new StateInfoSnapshot.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IStateInfoSnapshot);

        /** StateInfoSnapshot elements. */
        public elements: gossip.IEnvelope[];

        /**
         * Creates a new StateInfoSnapshot instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StateInfoSnapshot instance
         */
        public static create(properties?: gossip.IStateInfoSnapshot): gossip.StateInfoSnapshot;

        /**
         * Encodes the specified StateInfoSnapshot message. Does not implicitly {@link gossip.StateInfoSnapshot.verify|verify} messages.
         * @param message StateInfoSnapshot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IStateInfoSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StateInfoSnapshot message, length delimited. Does not implicitly {@link gossip.StateInfoSnapshot.verify|verify} messages.
         * @param message StateInfoSnapshot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IStateInfoSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StateInfoSnapshot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StateInfoSnapshot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.StateInfoSnapshot;

        /**
         * Decodes a StateInfoSnapshot message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StateInfoSnapshot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.StateInfoSnapshot;

        /**
         * Verifies a StateInfoSnapshot message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StateInfoSnapshot message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StateInfoSnapshot
         */
        public static fromObject(object: { [k: string]: any }): gossip.StateInfoSnapshot;

        /**
         * Creates a plain object from a StateInfoSnapshot message. Also converts values to other types if specified.
         * @param message StateInfoSnapshot
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.StateInfoSnapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StateInfoSnapshot to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StateInfoPullRequest. */
    interface IStateInfoPullRequest {

        /** StateInfoPullRequest channel_MAC */
        channel_MAC?: (Uint8Array|null);
    }

    /** Represents a StateInfoPullRequest. */
    class StateInfoPullRequest implements IStateInfoPullRequest {

        /**
         * Constructs a new StateInfoPullRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IStateInfoPullRequest);

        /** StateInfoPullRequest channel_MAC. */
        public channel_MAC: Uint8Array;

        /**
         * Creates a new StateInfoPullRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StateInfoPullRequest instance
         */
        public static create(properties?: gossip.IStateInfoPullRequest): gossip.StateInfoPullRequest;

        /**
         * Encodes the specified StateInfoPullRequest message. Does not implicitly {@link gossip.StateInfoPullRequest.verify|verify} messages.
         * @param message StateInfoPullRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IStateInfoPullRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StateInfoPullRequest message, length delimited. Does not implicitly {@link gossip.StateInfoPullRequest.verify|verify} messages.
         * @param message StateInfoPullRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IStateInfoPullRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StateInfoPullRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StateInfoPullRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.StateInfoPullRequest;

        /**
         * Decodes a StateInfoPullRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StateInfoPullRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.StateInfoPullRequest;

        /**
         * Verifies a StateInfoPullRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StateInfoPullRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StateInfoPullRequest
         */
        public static fromObject(object: { [k: string]: any }): gossip.StateInfoPullRequest;

        /**
         * Creates a plain object from a StateInfoPullRequest message. Also converts values to other types if specified.
         * @param message StateInfoPullRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.StateInfoPullRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StateInfoPullRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConnEstablish. */
    interface IConnEstablish {

        /** ConnEstablish pkiId */
        pkiId?: (Uint8Array|null);

        /** ConnEstablish identity */
        identity?: (Uint8Array|null);

        /** ConnEstablish tlsCertHash */
        tlsCertHash?: (Uint8Array|null);
    }

    /** Represents a ConnEstablish. */
    class ConnEstablish implements IConnEstablish {

        /**
         * Constructs a new ConnEstablish.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IConnEstablish);

        /** ConnEstablish pkiId. */
        public pkiId: Uint8Array;

        /** ConnEstablish identity. */
        public identity: Uint8Array;

        /** ConnEstablish tlsCertHash. */
        public tlsCertHash: Uint8Array;

        /**
         * Creates a new ConnEstablish instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnEstablish instance
         */
        public static create(properties?: gossip.IConnEstablish): gossip.ConnEstablish;

        /**
         * Encodes the specified ConnEstablish message. Does not implicitly {@link gossip.ConnEstablish.verify|verify} messages.
         * @param message ConnEstablish message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IConnEstablish, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnEstablish message, length delimited. Does not implicitly {@link gossip.ConnEstablish.verify|verify} messages.
         * @param message ConnEstablish message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IConnEstablish, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnEstablish message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnEstablish
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.ConnEstablish;

        /**
         * Decodes a ConnEstablish message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnEstablish
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.ConnEstablish;

        /**
         * Verifies a ConnEstablish message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnEstablish message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnEstablish
         */
        public static fromObject(object: { [k: string]: any }): gossip.ConnEstablish;

        /**
         * Creates a plain object from a ConnEstablish message. Also converts values to other types if specified.
         * @param message ConnEstablish
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.ConnEstablish, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnEstablish to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PeerIdentity. */
    interface IPeerIdentity {

        /** PeerIdentity pkiId */
        pkiId?: (Uint8Array|null);

        /** PeerIdentity cert */
        cert?: (Uint8Array|null);

        /** PeerIdentity metadata */
        metadata?: (Uint8Array|null);
    }

    /** Represents a PeerIdentity. */
    class PeerIdentity implements IPeerIdentity {

        /**
         * Constructs a new PeerIdentity.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IPeerIdentity);

        /** PeerIdentity pkiId. */
        public pkiId: Uint8Array;

        /** PeerIdentity cert. */
        public cert: Uint8Array;

        /** PeerIdentity metadata. */
        public metadata: Uint8Array;

        /**
         * Creates a new PeerIdentity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PeerIdentity instance
         */
        public static create(properties?: gossip.IPeerIdentity): gossip.PeerIdentity;

        /**
         * Encodes the specified PeerIdentity message. Does not implicitly {@link gossip.PeerIdentity.verify|verify} messages.
         * @param message PeerIdentity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IPeerIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PeerIdentity message, length delimited. Does not implicitly {@link gossip.PeerIdentity.verify|verify} messages.
         * @param message PeerIdentity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IPeerIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PeerIdentity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PeerIdentity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.PeerIdentity;

        /**
         * Decodes a PeerIdentity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PeerIdentity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.PeerIdentity;

        /**
         * Verifies a PeerIdentity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PeerIdentity message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PeerIdentity
         */
        public static fromObject(object: { [k: string]: any }): gossip.PeerIdentity;

        /**
         * Creates a plain object from a PeerIdentity message. Also converts values to other types if specified.
         * @param message PeerIdentity
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.PeerIdentity, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PeerIdentity to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** PullMsgType enum. */
    enum PullMsgType {
        UNDEFINED = 0,
        BLOCK_MSG = 1,
        IDENTITY_MSG = 2
    }

    /** Properties of a DataRequest. */
    interface IDataRequest {

        /** DataRequest nonce */
        nonce?: (number|Long|null);

        /** DataRequest digests */
        digests?: (Uint8Array[]|null);

        /** DataRequest msgType */
        msgType?: (gossip.PullMsgType|null);
    }

    /** Represents a DataRequest. */
    class DataRequest implements IDataRequest {

        /**
         * Constructs a new DataRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IDataRequest);

        /** DataRequest nonce. */
        public nonce: (number|Long);

        /** DataRequest digests. */
        public digests: Uint8Array[];

        /** DataRequest msgType. */
        public msgType: gossip.PullMsgType;

        /**
         * Creates a new DataRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataRequest instance
         */
        public static create(properties?: gossip.IDataRequest): gossip.DataRequest;

        /**
         * Encodes the specified DataRequest message. Does not implicitly {@link gossip.DataRequest.verify|verify} messages.
         * @param message DataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DataRequest message, length delimited. Does not implicitly {@link gossip.DataRequest.verify|verify} messages.
         * @param message DataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DataRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.DataRequest;

        /**
         * Decodes a DataRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.DataRequest;

        /**
         * Verifies a DataRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataRequest
         */
        public static fromObject(object: { [k: string]: any }): gossip.DataRequest;

        /**
         * Creates a plain object from a DataRequest message. Also converts values to other types if specified.
         * @param message DataRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.DataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GossipHello. */
    interface IGossipHello {

        /** GossipHello nonce */
        nonce?: (number|Long|null);

        /** GossipHello metadata */
        metadata?: (Uint8Array|null);

        /** GossipHello msgType */
        msgType?: (gossip.PullMsgType|null);
    }

    /** Represents a GossipHello. */
    class GossipHello implements IGossipHello {

        /**
         * Constructs a new GossipHello.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IGossipHello);

        /** GossipHello nonce. */
        public nonce: (number|Long);

        /** GossipHello metadata. */
        public metadata: Uint8Array;

        /** GossipHello msgType. */
        public msgType: gossip.PullMsgType;

        /**
         * Creates a new GossipHello instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GossipHello instance
         */
        public static create(properties?: gossip.IGossipHello): gossip.GossipHello;

        /**
         * Encodes the specified GossipHello message. Does not implicitly {@link gossip.GossipHello.verify|verify} messages.
         * @param message GossipHello message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IGossipHello, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GossipHello message, length delimited. Does not implicitly {@link gossip.GossipHello.verify|verify} messages.
         * @param message GossipHello message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IGossipHello, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GossipHello message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GossipHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.GossipHello;

        /**
         * Decodes a GossipHello message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GossipHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.GossipHello;

        /**
         * Verifies a GossipHello message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GossipHello message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GossipHello
         */
        public static fromObject(object: { [k: string]: any }): gossip.GossipHello;

        /**
         * Creates a plain object from a GossipHello message. Also converts values to other types if specified.
         * @param message GossipHello
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.GossipHello, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GossipHello to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataUpdate. */
    interface IDataUpdate {

        /** DataUpdate nonce */
        nonce?: (number|Long|null);

        /** DataUpdate data */
        data?: (gossip.IEnvelope[]|null);

        /** DataUpdate msgType */
        msgType?: (gossip.PullMsgType|null);
    }

    /** Represents a DataUpdate. */
    class DataUpdate implements IDataUpdate {

        /**
         * Constructs a new DataUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IDataUpdate);

        /** DataUpdate nonce. */
        public nonce: (number|Long);

        /** DataUpdate data. */
        public data: gossip.IEnvelope[];

        /** DataUpdate msgType. */
        public msgType: gossip.PullMsgType;

        /**
         * Creates a new DataUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataUpdate instance
         */
        public static create(properties?: gossip.IDataUpdate): gossip.DataUpdate;

        /**
         * Encodes the specified DataUpdate message. Does not implicitly {@link gossip.DataUpdate.verify|verify} messages.
         * @param message DataUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IDataUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DataUpdate message, length delimited. Does not implicitly {@link gossip.DataUpdate.verify|verify} messages.
         * @param message DataUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IDataUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DataUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.DataUpdate;

        /**
         * Decodes a DataUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.DataUpdate;

        /**
         * Verifies a DataUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataUpdate
         */
        public static fromObject(object: { [k: string]: any }): gossip.DataUpdate;

        /**
         * Creates a plain object from a DataUpdate message. Also converts values to other types if specified.
         * @param message DataUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.DataUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataDigest. */
    interface IDataDigest {

        /** DataDigest nonce */
        nonce?: (number|Long|null);

        /** DataDigest digests */
        digests?: (Uint8Array[]|null);

        /** DataDigest msgType */
        msgType?: (gossip.PullMsgType|null);
    }

    /** Represents a DataDigest. */
    class DataDigest implements IDataDigest {

        /**
         * Constructs a new DataDigest.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IDataDigest);

        /** DataDigest nonce. */
        public nonce: (number|Long);

        /** DataDigest digests. */
        public digests: Uint8Array[];

        /** DataDigest msgType. */
        public msgType: gossip.PullMsgType;

        /**
         * Creates a new DataDigest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataDigest instance
         */
        public static create(properties?: gossip.IDataDigest): gossip.DataDigest;

        /**
         * Encodes the specified DataDigest message. Does not implicitly {@link gossip.DataDigest.verify|verify} messages.
         * @param message DataDigest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IDataDigest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DataDigest message, length delimited. Does not implicitly {@link gossip.DataDigest.verify|verify} messages.
         * @param message DataDigest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IDataDigest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DataDigest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataDigest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.DataDigest;

        /**
         * Decodes a DataDigest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataDigest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.DataDigest;

        /**
         * Verifies a DataDigest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataDigest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataDigest
         */
        public static fromObject(object: { [k: string]: any }): gossip.DataDigest;

        /**
         * Creates a plain object from a DataDigest message. Also converts values to other types if specified.
         * @param message DataDigest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.DataDigest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataDigest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataMessage. */
    interface IDataMessage {

        /** DataMessage payload */
        payload?: (gossip.IPayload|null);
    }

    /** Represents a DataMessage. */
    class DataMessage implements IDataMessage {

        /**
         * Constructs a new DataMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IDataMessage);

        /** DataMessage payload. */
        public payload?: (gossip.IPayload|null);

        /**
         * Creates a new DataMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataMessage instance
         */
        public static create(properties?: gossip.IDataMessage): gossip.DataMessage;

        /**
         * Encodes the specified DataMessage message. Does not implicitly {@link gossip.DataMessage.verify|verify} messages.
         * @param message DataMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IDataMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DataMessage message, length delimited. Does not implicitly {@link gossip.DataMessage.verify|verify} messages.
         * @param message DataMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IDataMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DataMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.DataMessage;

        /**
         * Decodes a DataMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.DataMessage;

        /**
         * Verifies a DataMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataMessage
         */
        public static fromObject(object: { [k: string]: any }): gossip.DataMessage;

        /**
         * Creates a plain object from a DataMessage message. Also converts values to other types if specified.
         * @param message DataMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.DataMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PrivateDataMessage. */
    interface IPrivateDataMessage {

        /** PrivateDataMessage payload */
        payload?: (gossip.IPrivatePayload|null);
    }

    /** Represents a PrivateDataMessage. */
    class PrivateDataMessage implements IPrivateDataMessage {

        /**
         * Constructs a new PrivateDataMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IPrivateDataMessage);

        /** PrivateDataMessage payload. */
        public payload?: (gossip.IPrivatePayload|null);

        /**
         * Creates a new PrivateDataMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PrivateDataMessage instance
         */
        public static create(properties?: gossip.IPrivateDataMessage): gossip.PrivateDataMessage;

        /**
         * Encodes the specified PrivateDataMessage message. Does not implicitly {@link gossip.PrivateDataMessage.verify|verify} messages.
         * @param message PrivateDataMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IPrivateDataMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PrivateDataMessage message, length delimited. Does not implicitly {@link gossip.PrivateDataMessage.verify|verify} messages.
         * @param message PrivateDataMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IPrivateDataMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PrivateDataMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PrivateDataMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.PrivateDataMessage;

        /**
         * Decodes a PrivateDataMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PrivateDataMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.PrivateDataMessage;

        /**
         * Verifies a PrivateDataMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PrivateDataMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PrivateDataMessage
         */
        public static fromObject(object: { [k: string]: any }): gossip.PrivateDataMessage;

        /**
         * Creates a plain object from a PrivateDataMessage message. Also converts values to other types if specified.
         * @param message PrivateDataMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.PrivateDataMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PrivateDataMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Payload. */
    interface IPayload {

        /** Payload seqNum */
        seqNum?: (number|Long|null);

        /** Payload data */
        data?: (Uint8Array|null);

        /** Payload privateData */
        privateData?: (Uint8Array[]|null);
    }

    /** Represents a Payload. */
    class Payload implements IPayload {

        /**
         * Constructs a new Payload.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IPayload);

        /** Payload seqNum. */
        public seqNum: (number|Long);

        /** Payload data. */
        public data: Uint8Array;

        /** Payload privateData. */
        public privateData: Uint8Array[];

        /**
         * Creates a new Payload instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Payload instance
         */
        public static create(properties?: gossip.IPayload): gossip.Payload;

        /**
         * Encodes the specified Payload message. Does not implicitly {@link gossip.Payload.verify|verify} messages.
         * @param message Payload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Payload message, length delimited. Does not implicitly {@link gossip.Payload.verify|verify} messages.
         * @param message Payload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Payload message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Payload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.Payload;

        /**
         * Decodes a Payload message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Payload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.Payload;

        /**
         * Verifies a Payload message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Payload message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Payload
         */
        public static fromObject(object: { [k: string]: any }): gossip.Payload;

        /**
         * Creates a plain object from a Payload message. Also converts values to other types if specified.
         * @param message Payload
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.Payload, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Payload to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PrivatePayload. */
    interface IPrivatePayload {

        /** PrivatePayload collectionName */
        collectionName?: (string|null);

        /** PrivatePayload namespace */
        namespace?: (string|null);

        /** PrivatePayload txId */
        txId?: (string|null);

        /** PrivatePayload privateRwset */
        privateRwset?: (Uint8Array|null);

        /** PrivatePayload privateSimHeight */
        privateSimHeight?: (number|Long|null);

        /** PrivatePayload collectionConfigs */
        collectionConfigs?: (common.ICollectionConfigPackage|null);
    }

    /** Represents a PrivatePayload. */
    class PrivatePayload implements IPrivatePayload {

        /**
         * Constructs a new PrivatePayload.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IPrivatePayload);

        /** PrivatePayload collectionName. */
        public collectionName: string;

        /** PrivatePayload namespace. */
        public namespace: string;

        /** PrivatePayload txId. */
        public txId: string;

        /** PrivatePayload privateRwset. */
        public privateRwset: Uint8Array;

        /** PrivatePayload privateSimHeight. */
        public privateSimHeight: (number|Long);

        /** PrivatePayload collectionConfigs. */
        public collectionConfigs?: (common.ICollectionConfigPackage|null);

        /**
         * Creates a new PrivatePayload instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PrivatePayload instance
         */
        public static create(properties?: gossip.IPrivatePayload): gossip.PrivatePayload;

        /**
         * Encodes the specified PrivatePayload message. Does not implicitly {@link gossip.PrivatePayload.verify|verify} messages.
         * @param message PrivatePayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IPrivatePayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PrivatePayload message, length delimited. Does not implicitly {@link gossip.PrivatePayload.verify|verify} messages.
         * @param message PrivatePayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IPrivatePayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PrivatePayload message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PrivatePayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.PrivatePayload;

        /**
         * Decodes a PrivatePayload message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PrivatePayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.PrivatePayload;

        /**
         * Verifies a PrivatePayload message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PrivatePayload message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PrivatePayload
         */
        public static fromObject(object: { [k: string]: any }): gossip.PrivatePayload;

        /**
         * Creates a plain object from a PrivatePayload message. Also converts values to other types if specified.
         * @param message PrivatePayload
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.PrivatePayload, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PrivatePayload to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AliveMessage. */
    interface IAliveMessage {

        /** AliveMessage membership */
        membership?: (gossip.IMember|null);

        /** AliveMessage timestamp */
        timestamp?: (gossip.IPeerTime|null);

        /** AliveMessage identity */
        identity?: (Uint8Array|null);
    }

    /** Represents an AliveMessage. */
    class AliveMessage implements IAliveMessage {

        /**
         * Constructs a new AliveMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IAliveMessage);

        /** AliveMessage membership. */
        public membership?: (gossip.IMember|null);

        /** AliveMessage timestamp. */
        public timestamp?: (gossip.IPeerTime|null);

        /** AliveMessage identity. */
        public identity: Uint8Array;

        /**
         * Creates a new AliveMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AliveMessage instance
         */
        public static create(properties?: gossip.IAliveMessage): gossip.AliveMessage;

        /**
         * Encodes the specified AliveMessage message. Does not implicitly {@link gossip.AliveMessage.verify|verify} messages.
         * @param message AliveMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IAliveMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AliveMessage message, length delimited. Does not implicitly {@link gossip.AliveMessage.verify|verify} messages.
         * @param message AliveMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IAliveMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AliveMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AliveMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.AliveMessage;

        /**
         * Decodes an AliveMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AliveMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.AliveMessage;

        /**
         * Verifies an AliveMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AliveMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AliveMessage
         */
        public static fromObject(object: { [k: string]: any }): gossip.AliveMessage;

        /**
         * Creates a plain object from an AliveMessage message. Also converts values to other types if specified.
         * @param message AliveMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.AliveMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AliveMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadershipMessage. */
    interface ILeadershipMessage {

        /** LeadershipMessage pkiId */
        pkiId?: (Uint8Array|null);

        /** LeadershipMessage timestamp */
        timestamp?: (gossip.IPeerTime|null);

        /** LeadershipMessage isDeclaration */
        isDeclaration?: (boolean|null);
    }

    /** Represents a LeadershipMessage. */
    class LeadershipMessage implements ILeadershipMessage {

        /**
         * Constructs a new LeadershipMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.ILeadershipMessage);

        /** LeadershipMessage pkiId. */
        public pkiId: Uint8Array;

        /** LeadershipMessage timestamp. */
        public timestamp?: (gossip.IPeerTime|null);

        /** LeadershipMessage isDeclaration. */
        public isDeclaration: boolean;

        /**
         * Creates a new LeadershipMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadershipMessage instance
         */
        public static create(properties?: gossip.ILeadershipMessage): gossip.LeadershipMessage;

        /**
         * Encodes the specified LeadershipMessage message. Does not implicitly {@link gossip.LeadershipMessage.verify|verify} messages.
         * @param message LeadershipMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.ILeadershipMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadershipMessage message, length delimited. Does not implicitly {@link gossip.LeadershipMessage.verify|verify} messages.
         * @param message LeadershipMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.ILeadershipMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadershipMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadershipMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.LeadershipMessage;

        /**
         * Decodes a LeadershipMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadershipMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.LeadershipMessage;

        /**
         * Verifies a LeadershipMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadershipMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadershipMessage
         */
        public static fromObject(object: { [k: string]: any }): gossip.LeadershipMessage;

        /**
         * Creates a plain object from a LeadershipMessage message. Also converts values to other types if specified.
         * @param message LeadershipMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.LeadershipMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadershipMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PeerTime. */
    interface IPeerTime {

        /** PeerTime incNum */
        incNum?: (number|Long|null);

        /** PeerTime seqNum */
        seqNum?: (number|Long|null);
    }

    /** Represents a PeerTime. */
    class PeerTime implements IPeerTime {

        /**
         * Constructs a new PeerTime.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IPeerTime);

        /** PeerTime incNum. */
        public incNum: (number|Long);

        /** PeerTime seqNum. */
        public seqNum: (number|Long);

        /**
         * Creates a new PeerTime instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PeerTime instance
         */
        public static create(properties?: gossip.IPeerTime): gossip.PeerTime;

        /**
         * Encodes the specified PeerTime message. Does not implicitly {@link gossip.PeerTime.verify|verify} messages.
         * @param message PeerTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IPeerTime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PeerTime message, length delimited. Does not implicitly {@link gossip.PeerTime.verify|verify} messages.
         * @param message PeerTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IPeerTime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PeerTime message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PeerTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.PeerTime;

        /**
         * Decodes a PeerTime message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PeerTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.PeerTime;

        /**
         * Verifies a PeerTime message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PeerTime message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PeerTime
         */
        public static fromObject(object: { [k: string]: any }): gossip.PeerTime;

        /**
         * Creates a plain object from a PeerTime message. Also converts values to other types if specified.
         * @param message PeerTime
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.PeerTime, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PeerTime to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MembershipRequest. */
    interface IMembershipRequest {

        /** MembershipRequest selfInformation */
        selfInformation?: (gossip.IEnvelope|null);

        /** MembershipRequest known */
        known?: (Uint8Array[]|null);
    }

    /** Represents a MembershipRequest. */
    class MembershipRequest implements IMembershipRequest {

        /**
         * Constructs a new MembershipRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IMembershipRequest);

        /** MembershipRequest selfInformation. */
        public selfInformation?: (gossip.IEnvelope|null);

        /** MembershipRequest known. */
        public known: Uint8Array[];

        /**
         * Creates a new MembershipRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MembershipRequest instance
         */
        public static create(properties?: gossip.IMembershipRequest): gossip.MembershipRequest;

        /**
         * Encodes the specified MembershipRequest message. Does not implicitly {@link gossip.MembershipRequest.verify|verify} messages.
         * @param message MembershipRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IMembershipRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MembershipRequest message, length delimited. Does not implicitly {@link gossip.MembershipRequest.verify|verify} messages.
         * @param message MembershipRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IMembershipRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MembershipRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MembershipRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.MembershipRequest;

        /**
         * Decodes a MembershipRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MembershipRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.MembershipRequest;

        /**
         * Verifies a MembershipRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MembershipRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MembershipRequest
         */
        public static fromObject(object: { [k: string]: any }): gossip.MembershipRequest;

        /**
         * Creates a plain object from a MembershipRequest message. Also converts values to other types if specified.
         * @param message MembershipRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.MembershipRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MembershipRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MembershipResponse. */
    interface IMembershipResponse {

        /** MembershipResponse alive */
        alive?: (gossip.IEnvelope[]|null);

        /** MembershipResponse dead */
        dead?: (gossip.IEnvelope[]|null);
    }

    /** Represents a MembershipResponse. */
    class MembershipResponse implements IMembershipResponse {

        /**
         * Constructs a new MembershipResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IMembershipResponse);

        /** MembershipResponse alive. */
        public alive: gossip.IEnvelope[];

        /** MembershipResponse dead. */
        public dead: gossip.IEnvelope[];

        /**
         * Creates a new MembershipResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MembershipResponse instance
         */
        public static create(properties?: gossip.IMembershipResponse): gossip.MembershipResponse;

        /**
         * Encodes the specified MembershipResponse message. Does not implicitly {@link gossip.MembershipResponse.verify|verify} messages.
         * @param message MembershipResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IMembershipResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MembershipResponse message, length delimited. Does not implicitly {@link gossip.MembershipResponse.verify|verify} messages.
         * @param message MembershipResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IMembershipResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MembershipResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MembershipResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.MembershipResponse;

        /**
         * Decodes a MembershipResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MembershipResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.MembershipResponse;

        /**
         * Verifies a MembershipResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MembershipResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MembershipResponse
         */
        public static fromObject(object: { [k: string]: any }): gossip.MembershipResponse;

        /**
         * Creates a plain object from a MembershipResponse message. Also converts values to other types if specified.
         * @param message MembershipResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.MembershipResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MembershipResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Member. */
    interface IMember {

        /** Member endpoint */
        endpoint?: (string|null);

        /** Member metadata */
        metadata?: (Uint8Array|null);

        /** Member pkiId */
        pkiId?: (Uint8Array|null);
    }

    /** Represents a Member. */
    class Member implements IMember {

        /**
         * Constructs a new Member.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IMember);

        /** Member endpoint. */
        public endpoint: string;

        /** Member metadata. */
        public metadata: Uint8Array;

        /** Member pkiId. */
        public pkiId: Uint8Array;

        /**
         * Creates a new Member instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Member instance
         */
        public static create(properties?: gossip.IMember): gossip.Member;

        /**
         * Encodes the specified Member message. Does not implicitly {@link gossip.Member.verify|verify} messages.
         * @param message Member message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IMember, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Member message, length delimited. Does not implicitly {@link gossip.Member.verify|verify} messages.
         * @param message Member message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IMember, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Member message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Member
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.Member;

        /**
         * Decodes a Member message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Member
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.Member;

        /**
         * Verifies a Member message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Member message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Member
         */
        public static fromObject(object: { [k: string]: any }): gossip.Member;

        /**
         * Creates a plain object from a Member message. Also converts values to other types if specified.
         * @param message Member
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.Member, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Member to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Empty. */
    interface IEmpty {
    }

    /** Represents an Empty. */
    class Empty implements IEmpty {

        /**
         * Constructs a new Empty.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IEmpty);

        /**
         * Creates a new Empty instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Empty instance
         */
        public static create(properties?: gossip.IEmpty): gossip.Empty;

        /**
         * Encodes the specified Empty message. Does not implicitly {@link gossip.Empty.verify|verify} messages.
         * @param message Empty message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IEmpty, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Empty message, length delimited. Does not implicitly {@link gossip.Empty.verify|verify} messages.
         * @param message Empty message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IEmpty, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Empty message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Empty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.Empty;

        /**
         * Decodes an Empty message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Empty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.Empty;

        /**
         * Verifies an Empty message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Empty message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Empty
         */
        public static fromObject(object: { [k: string]: any }): gossip.Empty;

        /**
         * Creates a plain object from an Empty message. Also converts values to other types if specified.
         * @param message Empty
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.Empty, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Empty to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoteStateRequest. */
    interface IRemoteStateRequest {

        /** RemoteStateRequest startSeqNum */
        startSeqNum?: (number|Long|null);

        /** RemoteStateRequest endSeqNum */
        endSeqNum?: (number|Long|null);
    }

    /** Represents a RemoteStateRequest. */
    class RemoteStateRequest implements IRemoteStateRequest {

        /**
         * Constructs a new RemoteStateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IRemoteStateRequest);

        /** RemoteStateRequest startSeqNum. */
        public startSeqNum: (number|Long);

        /** RemoteStateRequest endSeqNum. */
        public endSeqNum: (number|Long);

        /**
         * Creates a new RemoteStateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoteStateRequest instance
         */
        public static create(properties?: gossip.IRemoteStateRequest): gossip.RemoteStateRequest;

        /**
         * Encodes the specified RemoteStateRequest message. Does not implicitly {@link gossip.RemoteStateRequest.verify|verify} messages.
         * @param message RemoteStateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IRemoteStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoteStateRequest message, length delimited. Does not implicitly {@link gossip.RemoteStateRequest.verify|verify} messages.
         * @param message RemoteStateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IRemoteStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoteStateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoteStateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.RemoteStateRequest;

        /**
         * Decodes a RemoteStateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoteStateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.RemoteStateRequest;

        /**
         * Verifies a RemoteStateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoteStateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoteStateRequest
         */
        public static fromObject(object: { [k: string]: any }): gossip.RemoteStateRequest;

        /**
         * Creates a plain object from a RemoteStateRequest message. Also converts values to other types if specified.
         * @param message RemoteStateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.RemoteStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoteStateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoteStateResponse. */
    interface IRemoteStateResponse {

        /** RemoteStateResponse payloads */
        payloads?: (gossip.IPayload[]|null);
    }

    /** Represents a RemoteStateResponse. */
    class RemoteStateResponse implements IRemoteStateResponse {

        /**
         * Constructs a new RemoteStateResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IRemoteStateResponse);

        /** RemoteStateResponse payloads. */
        public payloads: gossip.IPayload[];

        /**
         * Creates a new RemoteStateResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoteStateResponse instance
         */
        public static create(properties?: gossip.IRemoteStateResponse): gossip.RemoteStateResponse;

        /**
         * Encodes the specified RemoteStateResponse message. Does not implicitly {@link gossip.RemoteStateResponse.verify|verify} messages.
         * @param message RemoteStateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IRemoteStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoteStateResponse message, length delimited. Does not implicitly {@link gossip.RemoteStateResponse.verify|verify} messages.
         * @param message RemoteStateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IRemoteStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoteStateResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoteStateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.RemoteStateResponse;

        /**
         * Decodes a RemoteStateResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoteStateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.RemoteStateResponse;

        /**
         * Verifies a RemoteStateResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoteStateResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoteStateResponse
         */
        public static fromObject(object: { [k: string]: any }): gossip.RemoteStateResponse;

        /**
         * Creates a plain object from a RemoteStateResponse message. Also converts values to other types if specified.
         * @param message RemoteStateResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.RemoteStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoteStateResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemotePvtDataRequest. */
    interface IRemotePvtDataRequest {

        /** RemotePvtDataRequest digests */
        digests?: (gossip.IPvtDataDigest[]|null);
    }

    /** Represents a RemotePvtDataRequest. */
    class RemotePvtDataRequest implements IRemotePvtDataRequest {

        /**
         * Constructs a new RemotePvtDataRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IRemotePvtDataRequest);

        /** RemotePvtDataRequest digests. */
        public digests: gossip.IPvtDataDigest[];

        /**
         * Creates a new RemotePvtDataRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemotePvtDataRequest instance
         */
        public static create(properties?: gossip.IRemotePvtDataRequest): gossip.RemotePvtDataRequest;

        /**
         * Encodes the specified RemotePvtDataRequest message. Does not implicitly {@link gossip.RemotePvtDataRequest.verify|verify} messages.
         * @param message RemotePvtDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IRemotePvtDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemotePvtDataRequest message, length delimited. Does not implicitly {@link gossip.RemotePvtDataRequest.verify|verify} messages.
         * @param message RemotePvtDataRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IRemotePvtDataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemotePvtDataRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemotePvtDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.RemotePvtDataRequest;

        /**
         * Decodes a RemotePvtDataRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemotePvtDataRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.RemotePvtDataRequest;

        /**
         * Verifies a RemotePvtDataRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemotePvtDataRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemotePvtDataRequest
         */
        public static fromObject(object: { [k: string]: any }): gossip.RemotePvtDataRequest;

        /**
         * Creates a plain object from a RemotePvtDataRequest message. Also converts values to other types if specified.
         * @param message RemotePvtDataRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.RemotePvtDataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemotePvtDataRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvtDataDigest. */
    interface IPvtDataDigest {

        /** PvtDataDigest txId */
        txId?: (string|null);

        /** PvtDataDigest namespace */
        namespace?: (string|null);

        /** PvtDataDigest collection */
        collection?: (string|null);

        /** PvtDataDigest blockSeq */
        blockSeq?: (number|Long|null);

        /** PvtDataDigest seqInBlock */
        seqInBlock?: (number|Long|null);
    }

    /** Represents a PvtDataDigest. */
    class PvtDataDigest implements IPvtDataDigest {

        /**
         * Constructs a new PvtDataDigest.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IPvtDataDigest);

        /** PvtDataDigest txId. */
        public txId: string;

        /** PvtDataDigest namespace. */
        public namespace: string;

        /** PvtDataDigest collection. */
        public collection: string;

        /** PvtDataDigest blockSeq. */
        public blockSeq: (number|Long);

        /** PvtDataDigest seqInBlock. */
        public seqInBlock: (number|Long);

        /**
         * Creates a new PvtDataDigest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvtDataDigest instance
         */
        public static create(properties?: gossip.IPvtDataDigest): gossip.PvtDataDigest;

        /**
         * Encodes the specified PvtDataDigest message. Does not implicitly {@link gossip.PvtDataDigest.verify|verify} messages.
         * @param message PvtDataDigest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IPvtDataDigest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvtDataDigest message, length delimited. Does not implicitly {@link gossip.PvtDataDigest.verify|verify} messages.
         * @param message PvtDataDigest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IPvtDataDigest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvtDataDigest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvtDataDigest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.PvtDataDigest;

        /**
         * Decodes a PvtDataDigest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvtDataDigest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.PvtDataDigest;

        /**
         * Verifies a PvtDataDigest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvtDataDigest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvtDataDigest
         */
        public static fromObject(object: { [k: string]: any }): gossip.PvtDataDigest;

        /**
         * Creates a plain object from a PvtDataDigest message. Also converts values to other types if specified.
         * @param message PvtDataDigest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.PvtDataDigest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvtDataDigest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemotePvtDataResponse. */
    interface IRemotePvtDataResponse {

        /** RemotePvtDataResponse elements */
        elements?: (gossip.IPvtDataElement[]|null);
    }

    /** Represents a RemotePvtDataResponse. */
    class RemotePvtDataResponse implements IRemotePvtDataResponse {

        /**
         * Constructs a new RemotePvtDataResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IRemotePvtDataResponse);

        /** RemotePvtDataResponse elements. */
        public elements: gossip.IPvtDataElement[];

        /**
         * Creates a new RemotePvtDataResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemotePvtDataResponse instance
         */
        public static create(properties?: gossip.IRemotePvtDataResponse): gossip.RemotePvtDataResponse;

        /**
         * Encodes the specified RemotePvtDataResponse message. Does not implicitly {@link gossip.RemotePvtDataResponse.verify|verify} messages.
         * @param message RemotePvtDataResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IRemotePvtDataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemotePvtDataResponse message, length delimited. Does not implicitly {@link gossip.RemotePvtDataResponse.verify|verify} messages.
         * @param message RemotePvtDataResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IRemotePvtDataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemotePvtDataResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemotePvtDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.RemotePvtDataResponse;

        /**
         * Decodes a RemotePvtDataResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemotePvtDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.RemotePvtDataResponse;

        /**
         * Verifies a RemotePvtDataResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemotePvtDataResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemotePvtDataResponse
         */
        public static fromObject(object: { [k: string]: any }): gossip.RemotePvtDataResponse;

        /**
         * Creates a plain object from a RemotePvtDataResponse message. Also converts values to other types if specified.
         * @param message RemotePvtDataResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.RemotePvtDataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemotePvtDataResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvtDataElement. */
    interface IPvtDataElement {

        /** PvtDataElement digest */
        digest?: (gossip.IPvtDataDigest|null);

        /** PvtDataElement payload */
        payload?: (Uint8Array[]|null);
    }

    /** Represents a PvtDataElement. */
    class PvtDataElement implements IPvtDataElement {

        /**
         * Constructs a new PvtDataElement.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IPvtDataElement);

        /** PvtDataElement digest. */
        public digest?: (gossip.IPvtDataDigest|null);

        /** PvtDataElement payload. */
        public payload: Uint8Array[];

        /**
         * Creates a new PvtDataElement instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvtDataElement instance
         */
        public static create(properties?: gossip.IPvtDataElement): gossip.PvtDataElement;

        /**
         * Encodes the specified PvtDataElement message. Does not implicitly {@link gossip.PvtDataElement.verify|verify} messages.
         * @param message PvtDataElement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IPvtDataElement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvtDataElement message, length delimited. Does not implicitly {@link gossip.PvtDataElement.verify|verify} messages.
         * @param message PvtDataElement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IPvtDataElement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvtDataElement message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvtDataElement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.PvtDataElement;

        /**
         * Decodes a PvtDataElement message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvtDataElement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.PvtDataElement;

        /**
         * Verifies a PvtDataElement message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvtDataElement message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvtDataElement
         */
        public static fromObject(object: { [k: string]: any }): gossip.PvtDataElement;

        /**
         * Creates a plain object from a PvtDataElement message. Also converts values to other types if specified.
         * @param message PvtDataElement
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.PvtDataElement, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvtDataElement to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvtDataPayload. */
    interface IPvtDataPayload {

        /** PvtDataPayload txSeqInBlock */
        txSeqInBlock?: (number|Long|null);

        /** PvtDataPayload payload */
        payload?: (Uint8Array|null);
    }

    /** Represents a PvtDataPayload. */
    class PvtDataPayload implements IPvtDataPayload {

        /**
         * Constructs a new PvtDataPayload.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IPvtDataPayload);

        /** PvtDataPayload txSeqInBlock. */
        public txSeqInBlock: (number|Long);

        /** PvtDataPayload payload. */
        public payload: Uint8Array;

        /**
         * Creates a new PvtDataPayload instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvtDataPayload instance
         */
        public static create(properties?: gossip.IPvtDataPayload): gossip.PvtDataPayload;

        /**
         * Encodes the specified PvtDataPayload message. Does not implicitly {@link gossip.PvtDataPayload.verify|verify} messages.
         * @param message PvtDataPayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IPvtDataPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvtDataPayload message, length delimited. Does not implicitly {@link gossip.PvtDataPayload.verify|verify} messages.
         * @param message PvtDataPayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IPvtDataPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvtDataPayload message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvtDataPayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.PvtDataPayload;

        /**
         * Decodes a PvtDataPayload message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvtDataPayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.PvtDataPayload;

        /**
         * Verifies a PvtDataPayload message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvtDataPayload message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvtDataPayload
         */
        public static fromObject(object: { [k: string]: any }): gossip.PvtDataPayload;

        /**
         * Creates a plain object from a PvtDataPayload message. Also converts values to other types if specified.
         * @param message PvtDataPayload
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.PvtDataPayload, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvtDataPayload to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Acknowledgement. */
    interface IAcknowledgement {

        /** Acknowledgement error */
        error?: (string|null);
    }

    /** Represents an Acknowledgement. */
    class Acknowledgement implements IAcknowledgement {

        /**
         * Constructs a new Acknowledgement.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IAcknowledgement);

        /** Acknowledgement error. */
        public error: string;

        /**
         * Creates a new Acknowledgement instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Acknowledgement instance
         */
        public static create(properties?: gossip.IAcknowledgement): gossip.Acknowledgement;

        /**
         * Encodes the specified Acknowledgement message. Does not implicitly {@link gossip.Acknowledgement.verify|verify} messages.
         * @param message Acknowledgement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Acknowledgement message, length delimited. Does not implicitly {@link gossip.Acknowledgement.verify|verify} messages.
         * @param message Acknowledgement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Acknowledgement message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Acknowledgement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.Acknowledgement;

        /**
         * Decodes an Acknowledgement message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Acknowledgement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.Acknowledgement;

        /**
         * Verifies an Acknowledgement message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Acknowledgement message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Acknowledgement
         */
        public static fromObject(object: { [k: string]: any }): gossip.Acknowledgement;

        /**
         * Creates a plain object from an Acknowledgement message. Also converts values to other types if specified.
         * @param message Acknowledgement
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.Acknowledgement, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Acknowledgement to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Chaincode. */
    interface IChaincode {

        /** Chaincode name */
        name?: (string|null);

        /** Chaincode version */
        version?: (string|null);

        /** Chaincode metadata */
        metadata?: (Uint8Array|null);
    }

    /** Represents a Chaincode. */
    class Chaincode implements IChaincode {

        /**
         * Constructs a new Chaincode.
         * @param [properties] Properties to set
         */
        constructor(properties?: gossip.IChaincode);

        /** Chaincode name. */
        public name: string;

        /** Chaincode version. */
        public version: string;

        /** Chaincode metadata. */
        public metadata: Uint8Array;

        /**
         * Creates a new Chaincode instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Chaincode instance
         */
        public static create(properties?: gossip.IChaincode): gossip.Chaincode;

        /**
         * Encodes the specified Chaincode message. Does not implicitly {@link gossip.Chaincode.verify|verify} messages.
         * @param message Chaincode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gossip.IChaincode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Chaincode message, length delimited. Does not implicitly {@link gossip.Chaincode.verify|verify} messages.
         * @param message Chaincode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gossip.IChaincode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Chaincode message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Chaincode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gossip.Chaincode;

        /**
         * Decodes a Chaincode message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Chaincode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gossip.Chaincode;

        /**
         * Verifies a Chaincode message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Chaincode message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Chaincode
         */
        public static fromObject(object: { [k: string]: any }): gossip.Chaincode;

        /**
         * Creates a plain object from a Chaincode message. Also converts values to other types if specified.
         * @param message Chaincode
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gossip.Chaincode, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Chaincode to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace protos. */
export namespace protos {

    /** Properties of a SignedChaincodeDeploymentSpec. */
    interface ISignedChaincodeDeploymentSpec {

        /** SignedChaincodeDeploymentSpec chaincodeDeploymentSpec */
        chaincodeDeploymentSpec?: (Uint8Array|null);

        /** SignedChaincodeDeploymentSpec instantiationPolicy */
        instantiationPolicy?: (Uint8Array|null);

        /** SignedChaincodeDeploymentSpec ownerEndorsements */
        ownerEndorsements?: (protos.IEndorsement[]|null);
    }

    /** Represents a SignedChaincodeDeploymentSpec. */
    class SignedChaincodeDeploymentSpec implements ISignedChaincodeDeploymentSpec {

        /**
         * Constructs a new SignedChaincodeDeploymentSpec.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.ISignedChaincodeDeploymentSpec);

        /** SignedChaincodeDeploymentSpec chaincodeDeploymentSpec. */
        public chaincodeDeploymentSpec: Uint8Array;

        /** SignedChaincodeDeploymentSpec instantiationPolicy. */
        public instantiationPolicy: Uint8Array;

        /** SignedChaincodeDeploymentSpec ownerEndorsements. */
        public ownerEndorsements: protos.IEndorsement[];

        /**
         * Creates a new SignedChaincodeDeploymentSpec instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SignedChaincodeDeploymentSpec instance
         */
        public static create(properties?: protos.ISignedChaincodeDeploymentSpec): protos.SignedChaincodeDeploymentSpec;

        /**
         * Encodes the specified SignedChaincodeDeploymentSpec message. Does not implicitly {@link protos.SignedChaincodeDeploymentSpec.verify|verify} messages.
         * @param message SignedChaincodeDeploymentSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.ISignedChaincodeDeploymentSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SignedChaincodeDeploymentSpec message, length delimited. Does not implicitly {@link protos.SignedChaincodeDeploymentSpec.verify|verify} messages.
         * @param message SignedChaincodeDeploymentSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.ISignedChaincodeDeploymentSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SignedChaincodeDeploymentSpec message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignedChaincodeDeploymentSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.SignedChaincodeDeploymentSpec;

        /**
         * Decodes a SignedChaincodeDeploymentSpec message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SignedChaincodeDeploymentSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.SignedChaincodeDeploymentSpec;

        /**
         * Verifies a SignedChaincodeDeploymentSpec message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SignedChaincodeDeploymentSpec message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SignedChaincodeDeploymentSpec
         */
        public static fromObject(object: { [k: string]: any }): protos.SignedChaincodeDeploymentSpec;

        /**
         * Creates a plain object from a SignedChaincodeDeploymentSpec message. Also converts values to other types if specified.
         * @param message SignedChaincodeDeploymentSpec
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.SignedChaincodeDeploymentSpec, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SignedChaincodeDeploymentSpec to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ProposalResponse. */
    interface IProposalResponse {

        /** ProposalResponse version */
        version?: (number|null);

        /** ProposalResponse timestamp */
        timestamp?: (google.protobuf.ITimestamp|null);

        /** ProposalResponse response */
        response?: (protos.IResponse|null);

        /** ProposalResponse payload */
        payload?: (Uint8Array|null);

        /** ProposalResponse endorsement */
        endorsement?: (protos.IEndorsement|null);
    }

    /** Represents a ProposalResponse. */
    class ProposalResponse implements IProposalResponse {

        /**
         * Constructs a new ProposalResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IProposalResponse);

        /** ProposalResponse version. */
        public version: number;

        /** ProposalResponse timestamp. */
        public timestamp?: (google.protobuf.ITimestamp|null);

        /** ProposalResponse response. */
        public response?: (protos.IResponse|null);

        /** ProposalResponse payload. */
        public payload: Uint8Array;

        /** ProposalResponse endorsement. */
        public endorsement?: (protos.IEndorsement|null);

        /**
         * Creates a new ProposalResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProposalResponse instance
         */
        public static create(properties?: protos.IProposalResponse): protos.ProposalResponse;

        /**
         * Encodes the specified ProposalResponse message. Does not implicitly {@link protos.ProposalResponse.verify|verify} messages.
         * @param message ProposalResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IProposalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProposalResponse message, length delimited. Does not implicitly {@link protos.ProposalResponse.verify|verify} messages.
         * @param message ProposalResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IProposalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProposalResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProposalResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ProposalResponse;

        /**
         * Decodes a ProposalResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProposalResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ProposalResponse;

        /**
         * Verifies a ProposalResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProposalResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProposalResponse
         */
        public static fromObject(object: { [k: string]: any }): protos.ProposalResponse;

        /**
         * Creates a plain object from a ProposalResponse message. Also converts values to other types if specified.
         * @param message ProposalResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ProposalResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProposalResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response status */
        status?: (number|null);

        /** Response message */
        message?: (string|null);

        /** Response payload */
        payload?: (Uint8Array|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IResponse);

        /** Response status. */
        public status: number;

        /** Response message. */
        public message: string;

        /** Response payload. */
        public payload: Uint8Array;

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: protos.IResponse): protos.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link protos.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link protos.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): protos.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ProposalResponsePayload. */
    interface IProposalResponsePayload {

        /** ProposalResponsePayload proposalHash */
        proposalHash?: (Uint8Array|null);

        /** ProposalResponsePayload extension */
        extension?: (Uint8Array|null);
    }

    /** Represents a ProposalResponsePayload. */
    class ProposalResponsePayload implements IProposalResponsePayload {

        /**
         * Constructs a new ProposalResponsePayload.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IProposalResponsePayload);

        /** ProposalResponsePayload proposalHash. */
        public proposalHash: Uint8Array;

        /** ProposalResponsePayload extension. */
        public extension: Uint8Array;

        /**
         * Creates a new ProposalResponsePayload instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProposalResponsePayload instance
         */
        public static create(properties?: protos.IProposalResponsePayload): protos.ProposalResponsePayload;

        /**
         * Encodes the specified ProposalResponsePayload message. Does not implicitly {@link protos.ProposalResponsePayload.verify|verify} messages.
         * @param message ProposalResponsePayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IProposalResponsePayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProposalResponsePayload message, length delimited. Does not implicitly {@link protos.ProposalResponsePayload.verify|verify} messages.
         * @param message ProposalResponsePayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IProposalResponsePayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProposalResponsePayload message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProposalResponsePayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ProposalResponsePayload;

        /**
         * Decodes a ProposalResponsePayload message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProposalResponsePayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ProposalResponsePayload;

        /**
         * Verifies a ProposalResponsePayload message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProposalResponsePayload message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProposalResponsePayload
         */
        public static fromObject(object: { [k: string]: any }): protos.ProposalResponsePayload;

        /**
         * Creates a plain object from a ProposalResponsePayload message. Also converts values to other types if specified.
         * @param message ProposalResponsePayload
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ProposalResponsePayload, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProposalResponsePayload to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Endorsement. */
    interface IEndorsement {

        /** Endorsement endorser */
        endorser?: (Uint8Array|null);

        /** Endorsement signature */
        signature?: (Uint8Array|null);
    }

    /** Represents an Endorsement. */
    class Endorsement implements IEndorsement {

        /**
         * Constructs a new Endorsement.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IEndorsement);

        /** Endorsement endorser. */
        public endorser: Uint8Array;

        /** Endorsement signature. */
        public signature: Uint8Array;

        /**
         * Creates a new Endorsement instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Endorsement instance
         */
        public static create(properties?: protos.IEndorsement): protos.Endorsement;

        /**
         * Encodes the specified Endorsement message. Does not implicitly {@link protos.Endorsement.verify|verify} messages.
         * @param message Endorsement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IEndorsement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Endorsement message, length delimited. Does not implicitly {@link protos.Endorsement.verify|verify} messages.
         * @param message Endorsement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IEndorsement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Endorsement message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Endorsement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.Endorsement;

        /**
         * Decodes an Endorsement message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Endorsement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.Endorsement;

        /**
         * Verifies an Endorsement message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Endorsement message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Endorsement
         */
        public static fromObject(object: { [k: string]: any }): protos.Endorsement;

        /**
         * Creates a plain object from an Endorsement message. Also converts values to other types if specified.
         * @param message Endorsement
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.Endorsement, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Endorsement to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SignedProposal. */
    interface ISignedProposal {

        /** SignedProposal proposalBytes */
        proposalBytes?: (Uint8Array|null);

        /** SignedProposal signature */
        signature?: (Uint8Array|null);
    }

    /** Represents a SignedProposal. */
    class SignedProposal implements ISignedProposal {

        /**
         * Constructs a new SignedProposal.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.ISignedProposal);

        /** SignedProposal proposalBytes. */
        public proposalBytes: Uint8Array;

        /** SignedProposal signature. */
        public signature: Uint8Array;

        /**
         * Creates a new SignedProposal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SignedProposal instance
         */
        public static create(properties?: protos.ISignedProposal): protos.SignedProposal;

        /**
         * Encodes the specified SignedProposal message. Does not implicitly {@link protos.SignedProposal.verify|verify} messages.
         * @param message SignedProposal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.ISignedProposal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SignedProposal message, length delimited. Does not implicitly {@link protos.SignedProposal.verify|verify} messages.
         * @param message SignedProposal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.ISignedProposal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SignedProposal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignedProposal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.SignedProposal;

        /**
         * Decodes a SignedProposal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SignedProposal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.SignedProposal;

        /**
         * Verifies a SignedProposal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SignedProposal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SignedProposal
         */
        public static fromObject(object: { [k: string]: any }): protos.SignedProposal;

        /**
         * Creates a plain object from a SignedProposal message. Also converts values to other types if specified.
         * @param message SignedProposal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.SignedProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SignedProposal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Proposal. */
    interface IProposal {

        /** Proposal header */
        header?: (Uint8Array|null);

        /** Proposal payload */
        payload?: (Uint8Array|null);

        /** Proposal extension */
        extension?: (Uint8Array|null);
    }

    /** Represents a Proposal. */
    class Proposal implements IProposal {

        /**
         * Constructs a new Proposal.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IProposal);

        /** Proposal header. */
        public header: Uint8Array;

        /** Proposal payload. */
        public payload: Uint8Array;

        /** Proposal extension. */
        public extension: Uint8Array;

        /**
         * Creates a new Proposal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Proposal instance
         */
        public static create(properties?: protos.IProposal): protos.Proposal;

        /**
         * Encodes the specified Proposal message. Does not implicitly {@link protos.Proposal.verify|verify} messages.
         * @param message Proposal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Proposal message, length delimited. Does not implicitly {@link protos.Proposal.verify|verify} messages.
         * @param message Proposal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Proposal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Proposal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.Proposal;

        /**
         * Decodes a Proposal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Proposal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.Proposal;

        /**
         * Verifies a Proposal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Proposal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Proposal
         */
        public static fromObject(object: { [k: string]: any }): protos.Proposal;

        /**
         * Creates a plain object from a Proposal message. Also converts values to other types if specified.
         * @param message Proposal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.Proposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Proposal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeHeaderExtension. */
    interface IChaincodeHeaderExtension {

        /** ChaincodeHeaderExtension chaincodeId */
        chaincodeId?: (protos.IChaincodeID|null);
    }

    /** Represents a ChaincodeHeaderExtension. */
    class ChaincodeHeaderExtension implements IChaincodeHeaderExtension {

        /**
         * Constructs a new ChaincodeHeaderExtension.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeHeaderExtension);

        /** ChaincodeHeaderExtension chaincodeId. */
        public chaincodeId?: (protos.IChaincodeID|null);

        /**
         * Creates a new ChaincodeHeaderExtension instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeHeaderExtension instance
         */
        public static create(properties?: protos.IChaincodeHeaderExtension): protos.ChaincodeHeaderExtension;

        /**
         * Encodes the specified ChaincodeHeaderExtension message. Does not implicitly {@link protos.ChaincodeHeaderExtension.verify|verify} messages.
         * @param message ChaincodeHeaderExtension message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeHeaderExtension, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeHeaderExtension message, length delimited. Does not implicitly {@link protos.ChaincodeHeaderExtension.verify|verify} messages.
         * @param message ChaincodeHeaderExtension message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeHeaderExtension, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeHeaderExtension message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeHeaderExtension
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeHeaderExtension;

        /**
         * Decodes a ChaincodeHeaderExtension message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeHeaderExtension
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeHeaderExtension;

        /**
         * Verifies a ChaincodeHeaderExtension message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeHeaderExtension message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeHeaderExtension
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeHeaderExtension;

        /**
         * Creates a plain object from a ChaincodeHeaderExtension message. Also converts values to other types if specified.
         * @param message ChaincodeHeaderExtension
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeHeaderExtension, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeHeaderExtension to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeProposalPayload. */
    interface IChaincodeProposalPayload {

        /** ChaincodeProposalPayload input */
        input?: (Uint8Array|null);

        /** ChaincodeProposalPayload TransientMap */
        TransientMap?: ({ [k: string]: Uint8Array }|null);
    }

    /** Represents a ChaincodeProposalPayload. */
    class ChaincodeProposalPayload implements IChaincodeProposalPayload {

        /**
         * Constructs a new ChaincodeProposalPayload.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeProposalPayload);

        /** ChaincodeProposalPayload input. */
        public input: Uint8Array;

        /** ChaincodeProposalPayload TransientMap. */
        public TransientMap: { [k: string]: Uint8Array };

        /**
         * Creates a new ChaincodeProposalPayload instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeProposalPayload instance
         */
        public static create(properties?: protos.IChaincodeProposalPayload): protos.ChaincodeProposalPayload;

        /**
         * Encodes the specified ChaincodeProposalPayload message. Does not implicitly {@link protos.ChaincodeProposalPayload.verify|verify} messages.
         * @param message ChaincodeProposalPayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeProposalPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeProposalPayload message, length delimited. Does not implicitly {@link protos.ChaincodeProposalPayload.verify|verify} messages.
         * @param message ChaincodeProposalPayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeProposalPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeProposalPayload message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeProposalPayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeProposalPayload;

        /**
         * Decodes a ChaincodeProposalPayload message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeProposalPayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeProposalPayload;

        /**
         * Verifies a ChaincodeProposalPayload message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeProposalPayload message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeProposalPayload
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeProposalPayload;

        /**
         * Creates a plain object from a ChaincodeProposalPayload message. Also converts values to other types if specified.
         * @param message ChaincodeProposalPayload
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeProposalPayload, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeProposalPayload to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeAction. */
    interface IChaincodeAction {

        /** ChaincodeAction results */
        results?: (Uint8Array|null);

        /** ChaincodeAction events */
        events?: (Uint8Array|null);

        /** ChaincodeAction response */
        response?: (protos.IResponse|null);

        /** ChaincodeAction chaincodeId */
        chaincodeId?: (protos.IChaincodeID|null);
    }

    /** Represents a ChaincodeAction. */
    class ChaincodeAction implements IChaincodeAction {

        /**
         * Constructs a new ChaincodeAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeAction);

        /** ChaincodeAction results. */
        public results: Uint8Array;

        /** ChaincodeAction events. */
        public events: Uint8Array;

        /** ChaincodeAction response. */
        public response?: (protos.IResponse|null);

        /** ChaincodeAction chaincodeId. */
        public chaincodeId?: (protos.IChaincodeID|null);

        /**
         * Creates a new ChaincodeAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeAction instance
         */
        public static create(properties?: protos.IChaincodeAction): protos.ChaincodeAction;

        /**
         * Encodes the specified ChaincodeAction message. Does not implicitly {@link protos.ChaincodeAction.verify|verify} messages.
         * @param message ChaincodeAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeAction message, length delimited. Does not implicitly {@link protos.ChaincodeAction.verify|verify} messages.
         * @param message ChaincodeAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeAction;

        /**
         * Decodes a ChaincodeAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeAction;

        /**
         * Verifies a ChaincodeAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeAction
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeAction;

        /**
         * Creates a plain object from a ChaincodeAction message. Also converts values to other types if specified.
         * @param message ChaincodeAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeID. */
    interface IChaincodeID {

        /** ChaincodeID path */
        path?: (string|null);

        /** ChaincodeID name */
        name?: (string|null);

        /** ChaincodeID version */
        version?: (string|null);
    }

    /** Represents a ChaincodeID. */
    class ChaincodeID implements IChaincodeID {

        /**
         * Constructs a new ChaincodeID.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeID);

        /** ChaincodeID path. */
        public path: string;

        /** ChaincodeID name. */
        public name: string;

        /** ChaincodeID version. */
        public version: string;

        /**
         * Creates a new ChaincodeID instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeID instance
         */
        public static create(properties?: protos.IChaincodeID): protos.ChaincodeID;

        /**
         * Encodes the specified ChaincodeID message. Does not implicitly {@link protos.ChaincodeID.verify|verify} messages.
         * @param message ChaincodeID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeID message, length delimited. Does not implicitly {@link protos.ChaincodeID.verify|verify} messages.
         * @param message ChaincodeID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeID message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeID;

        /**
         * Decodes a ChaincodeID message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeID;

        /**
         * Verifies a ChaincodeID message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeID message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeID
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeID;

        /**
         * Creates a plain object from a ChaincodeID message. Also converts values to other types if specified.
         * @param message ChaincodeID
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeID, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeID to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeInput. */
    interface IChaincodeInput {

        /** ChaincodeInput args */
        args?: (Uint8Array[]|null);

        /** ChaincodeInput decorations */
        decorations?: ({ [k: string]: Uint8Array }|null);

        /** ChaincodeInput isInit */
        isInit?: (boolean|null);
    }

    /** Represents a ChaincodeInput. */
    class ChaincodeInput implements IChaincodeInput {

        /**
         * Constructs a new ChaincodeInput.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeInput);

        /** ChaincodeInput args. */
        public args: Uint8Array[];

        /** ChaincodeInput decorations. */
        public decorations: { [k: string]: Uint8Array };

        /** ChaincodeInput isInit. */
        public isInit: boolean;

        /**
         * Creates a new ChaincodeInput instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeInput instance
         */
        public static create(properties?: protos.IChaincodeInput): protos.ChaincodeInput;

        /**
         * Encodes the specified ChaincodeInput message. Does not implicitly {@link protos.ChaincodeInput.verify|verify} messages.
         * @param message ChaincodeInput message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeInput, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeInput message, length delimited. Does not implicitly {@link protos.ChaincodeInput.verify|verify} messages.
         * @param message ChaincodeInput message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeInput, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeInput message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeInput
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeInput;

        /**
         * Decodes a ChaincodeInput message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeInput
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeInput;

        /**
         * Verifies a ChaincodeInput message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeInput message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeInput
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeInput;

        /**
         * Creates a plain object from a ChaincodeInput message. Also converts values to other types if specified.
         * @param message ChaincodeInput
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeInput, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeInput to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeSpec. */
    interface IChaincodeSpec {

        /** ChaincodeSpec type */
        type?: (protos.ChaincodeSpec.Type|null);

        /** ChaincodeSpec chaincodeId */
        chaincodeId?: (protos.IChaincodeID|null);

        /** ChaincodeSpec input */
        input?: (protos.IChaincodeInput|null);

        /** ChaincodeSpec timeout */
        timeout?: (number|null);
    }

    /** Represents a ChaincodeSpec. */
    class ChaincodeSpec implements IChaincodeSpec {

        /**
         * Constructs a new ChaincodeSpec.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeSpec);

        /** ChaincodeSpec type. */
        public type: protos.ChaincodeSpec.Type;

        /** ChaincodeSpec chaincodeId. */
        public chaincodeId?: (protos.IChaincodeID|null);

        /** ChaincodeSpec input. */
        public input?: (protos.IChaincodeInput|null);

        /** ChaincodeSpec timeout. */
        public timeout: number;

        /**
         * Creates a new ChaincodeSpec instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeSpec instance
         */
        public static create(properties?: protos.IChaincodeSpec): protos.ChaincodeSpec;

        /**
         * Encodes the specified ChaincodeSpec message. Does not implicitly {@link protos.ChaincodeSpec.verify|verify} messages.
         * @param message ChaincodeSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeSpec message, length delimited. Does not implicitly {@link protos.ChaincodeSpec.verify|verify} messages.
         * @param message ChaincodeSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeSpec message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeSpec;

        /**
         * Decodes a ChaincodeSpec message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeSpec;

        /**
         * Verifies a ChaincodeSpec message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeSpec message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeSpec
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeSpec;

        /**
         * Creates a plain object from a ChaincodeSpec message. Also converts values to other types if specified.
         * @param message ChaincodeSpec
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeSpec, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeSpec to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ChaincodeSpec {

        /** Type enum. */
        enum Type {
            UNDEFINED = 0,
            GOLANG = 1,
            NODE = 2,
            CAR = 3,
            JAVA = 4
        }
    }

    /** Properties of a ChaincodeDeploymentSpec. */
    interface IChaincodeDeploymentSpec {

        /** ChaincodeDeploymentSpec chaincodeSpec */
        chaincodeSpec?: (protos.IChaincodeSpec|null);

        /** ChaincodeDeploymentSpec codePackage */
        codePackage?: (Uint8Array|null);
    }

    /** Represents a ChaincodeDeploymentSpec. */
    class ChaincodeDeploymentSpec implements IChaincodeDeploymentSpec {

        /**
         * Constructs a new ChaincodeDeploymentSpec.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeDeploymentSpec);

        /** ChaincodeDeploymentSpec chaincodeSpec. */
        public chaincodeSpec?: (protos.IChaincodeSpec|null);

        /** ChaincodeDeploymentSpec codePackage. */
        public codePackage: Uint8Array;

        /**
         * Creates a new ChaincodeDeploymentSpec instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeDeploymentSpec instance
         */
        public static create(properties?: protos.IChaincodeDeploymentSpec): protos.ChaincodeDeploymentSpec;

        /**
         * Encodes the specified ChaincodeDeploymentSpec message. Does not implicitly {@link protos.ChaincodeDeploymentSpec.verify|verify} messages.
         * @param message ChaincodeDeploymentSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeDeploymentSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeDeploymentSpec message, length delimited. Does not implicitly {@link protos.ChaincodeDeploymentSpec.verify|verify} messages.
         * @param message ChaincodeDeploymentSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeDeploymentSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeDeploymentSpec message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeDeploymentSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeDeploymentSpec;

        /**
         * Decodes a ChaincodeDeploymentSpec message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeDeploymentSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeDeploymentSpec;

        /**
         * Verifies a ChaincodeDeploymentSpec message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeDeploymentSpec message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeDeploymentSpec
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeDeploymentSpec;

        /**
         * Creates a plain object from a ChaincodeDeploymentSpec message. Also converts values to other types if specified.
         * @param message ChaincodeDeploymentSpec
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeDeploymentSpec, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeDeploymentSpec to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeInvocationSpec. */
    interface IChaincodeInvocationSpec {

        /** ChaincodeInvocationSpec chaincodeSpec */
        chaincodeSpec?: (protos.IChaincodeSpec|null);
    }

    /** Represents a ChaincodeInvocationSpec. */
    class ChaincodeInvocationSpec implements IChaincodeInvocationSpec {

        /**
         * Constructs a new ChaincodeInvocationSpec.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeInvocationSpec);

        /** ChaincodeInvocationSpec chaincodeSpec. */
        public chaincodeSpec?: (protos.IChaincodeSpec|null);

        /**
         * Creates a new ChaincodeInvocationSpec instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeInvocationSpec instance
         */
        public static create(properties?: protos.IChaincodeInvocationSpec): protos.ChaincodeInvocationSpec;

        /**
         * Encodes the specified ChaincodeInvocationSpec message. Does not implicitly {@link protos.ChaincodeInvocationSpec.verify|verify} messages.
         * @param message ChaincodeInvocationSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeInvocationSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeInvocationSpec message, length delimited. Does not implicitly {@link protos.ChaincodeInvocationSpec.verify|verify} messages.
         * @param message ChaincodeInvocationSpec message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeInvocationSpec, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeInvocationSpec message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeInvocationSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeInvocationSpec;

        /**
         * Decodes a ChaincodeInvocationSpec message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeInvocationSpec
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeInvocationSpec;

        /**
         * Verifies a ChaincodeInvocationSpec message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeInvocationSpec message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeInvocationSpec
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeInvocationSpec;

        /**
         * Creates a plain object from a ChaincodeInvocationSpec message. Also converts values to other types if specified.
         * @param message ChaincodeInvocationSpec
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeInvocationSpec, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeInvocationSpec to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LifecycleEvent. */
    interface ILifecycleEvent {

        /** LifecycleEvent chaincodeName */
        chaincodeName?: (string|null);
    }

    /** Represents a LifecycleEvent. */
    class LifecycleEvent implements ILifecycleEvent {

        /**
         * Constructs a new LifecycleEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.ILifecycleEvent);

        /** LifecycleEvent chaincodeName. */
        public chaincodeName: string;

        /**
         * Creates a new LifecycleEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LifecycleEvent instance
         */
        public static create(properties?: protos.ILifecycleEvent): protos.LifecycleEvent;

        /**
         * Encodes the specified LifecycleEvent message. Does not implicitly {@link protos.LifecycleEvent.verify|verify} messages.
         * @param message LifecycleEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.ILifecycleEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LifecycleEvent message, length delimited. Does not implicitly {@link protos.LifecycleEvent.verify|verify} messages.
         * @param message LifecycleEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.ILifecycleEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LifecycleEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LifecycleEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.LifecycleEvent;

        /**
         * Decodes a LifecycleEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LifecycleEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.LifecycleEvent;

        /**
         * Verifies a LifecycleEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LifecycleEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LifecycleEvent
         */
        public static fromObject(object: { [k: string]: any }): protos.LifecycleEvent;

        /**
         * Creates a plain object from a LifecycleEvent message. Also converts values to other types if specified.
         * @param message LifecycleEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.LifecycleEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LifecycleEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CDSData. */
    interface ICDSData {

        /** CDSData hash */
        hash?: (Uint8Array|null);

        /** CDSData metadatahash */
        metadatahash?: (Uint8Array|null);
    }

    /** Represents a CDSData. */
    class CDSData implements ICDSData {

        /**
         * Constructs a new CDSData.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.ICDSData);

        /** CDSData hash. */
        public hash: Uint8Array;

        /** CDSData metadatahash. */
        public metadatahash: Uint8Array;

        /**
         * Creates a new CDSData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CDSData instance
         */
        public static create(properties?: protos.ICDSData): protos.CDSData;

        /**
         * Encodes the specified CDSData message. Does not implicitly {@link protos.CDSData.verify|verify} messages.
         * @param message CDSData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.ICDSData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CDSData message, length delimited. Does not implicitly {@link protos.CDSData.verify|verify} messages.
         * @param message CDSData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.ICDSData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CDSData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CDSData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.CDSData;

        /**
         * Decodes a CDSData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CDSData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.CDSData;

        /**
         * Verifies a CDSData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CDSData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CDSData
         */
        public static fromObject(object: { [k: string]: any }): protos.CDSData;

        /**
         * Creates a plain object from a CDSData message. Also converts values to other types if specified.
         * @param message CDSData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.CDSData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CDSData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeData. */
    interface IChaincodeData {

        /** ChaincodeData name */
        name?: (string|null);

        /** ChaincodeData version */
        version?: (string|null);

        /** ChaincodeData escc */
        escc?: (string|null);

        /** ChaincodeData vscc */
        vscc?: (string|null);

        /** ChaincodeData policy */
        policy?: (common.ISignaturePolicyEnvelope|null);

        /** ChaincodeData data */
        data?: (Uint8Array|null);

        /** ChaincodeData id */
        id?: (Uint8Array|null);

        /** ChaincodeData instantiationPolicy */
        instantiationPolicy?: (common.ISignaturePolicyEnvelope|null);
    }

    /** Represents a ChaincodeData. */
    class ChaincodeData implements IChaincodeData {

        /**
         * Constructs a new ChaincodeData.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeData);

        /** ChaincodeData name. */
        public name: string;

        /** ChaincodeData version. */
        public version: string;

        /** ChaincodeData escc. */
        public escc: string;

        /** ChaincodeData vscc. */
        public vscc: string;

        /** ChaincodeData policy. */
        public policy?: (common.ISignaturePolicyEnvelope|null);

        /** ChaincodeData data. */
        public data: Uint8Array;

        /** ChaincodeData id. */
        public id: Uint8Array;

        /** ChaincodeData instantiationPolicy. */
        public instantiationPolicy?: (common.ISignaturePolicyEnvelope|null);

        /**
         * Creates a new ChaincodeData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeData instance
         */
        public static create(properties?: protos.IChaincodeData): protos.ChaincodeData;

        /**
         * Encodes the specified ChaincodeData message. Does not implicitly {@link protos.ChaincodeData.verify|verify} messages.
         * @param message ChaincodeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeData message, length delimited. Does not implicitly {@link protos.ChaincodeData.verify|verify} messages.
         * @param message ChaincodeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeData;

        /**
         * Decodes a ChaincodeData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeData;

        /**
         * Verifies a ChaincodeData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeData
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeData;

        /**
         * Creates a plain object from a ChaincodeData message. Also converts values to other types if specified.
         * @param message ChaincodeData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeEvent. */
    interface IChaincodeEvent {

        /** ChaincodeEvent chaincodeId */
        chaincodeId?: (string|null);

        /** ChaincodeEvent txId */
        txId?: (string|null);

        /** ChaincodeEvent eventName */
        eventName?: (string|null);

        /** ChaincodeEvent payload */
        payload?: (Uint8Array|null);
    }

    /** Represents a ChaincodeEvent. */
    class ChaincodeEvent implements IChaincodeEvent {

        /**
         * Constructs a new ChaincodeEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeEvent);

        /** ChaincodeEvent chaincodeId. */
        public chaincodeId: string;

        /** ChaincodeEvent txId. */
        public txId: string;

        /** ChaincodeEvent eventName. */
        public eventName: string;

        /** ChaincodeEvent payload. */
        public payload: Uint8Array;

        /**
         * Creates a new ChaincodeEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeEvent instance
         */
        public static create(properties?: protos.IChaincodeEvent): protos.ChaincodeEvent;

        /**
         * Encodes the specified ChaincodeEvent message. Does not implicitly {@link protos.ChaincodeEvent.verify|verify} messages.
         * @param message ChaincodeEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeEvent message, length delimited. Does not implicitly {@link protos.ChaincodeEvent.verify|verify} messages.
         * @param message ChaincodeEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeEvent;

        /**
         * Decodes a ChaincodeEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeEvent;

        /**
         * Verifies a ChaincodeEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeEvent
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeEvent;

        /**
         * Creates a plain object from a ChaincodeEvent message. Also converts values to other types if specified.
         * @param message ChaincodeEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeQueryResponse. */
    interface IChaincodeQueryResponse {

        /** ChaincodeQueryResponse chaincodes */
        chaincodes?: (protos.IChaincodeInfo[]|null);
    }

    /** Represents a ChaincodeQueryResponse. */
    class ChaincodeQueryResponse implements IChaincodeQueryResponse {

        /**
         * Constructs a new ChaincodeQueryResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeQueryResponse);

        /** ChaincodeQueryResponse chaincodes. */
        public chaincodes: protos.IChaincodeInfo[];

        /**
         * Creates a new ChaincodeQueryResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeQueryResponse instance
         */
        public static create(properties?: protos.IChaincodeQueryResponse): protos.ChaincodeQueryResponse;

        /**
         * Encodes the specified ChaincodeQueryResponse message. Does not implicitly {@link protos.ChaincodeQueryResponse.verify|verify} messages.
         * @param message ChaincodeQueryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeQueryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeQueryResponse message, length delimited. Does not implicitly {@link protos.ChaincodeQueryResponse.verify|verify} messages.
         * @param message ChaincodeQueryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeQueryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeQueryResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeQueryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeQueryResponse;

        /**
         * Decodes a ChaincodeQueryResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeQueryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeQueryResponse;

        /**
         * Verifies a ChaincodeQueryResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeQueryResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeQueryResponse
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeQueryResponse;

        /**
         * Creates a plain object from a ChaincodeQueryResponse message. Also converts values to other types if specified.
         * @param message ChaincodeQueryResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeQueryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeQueryResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeInfo. */
    interface IChaincodeInfo {

        /** ChaincodeInfo name */
        name?: (string|null);

        /** ChaincodeInfo version */
        version?: (string|null);

        /** ChaincodeInfo path */
        path?: (string|null);

        /** ChaincodeInfo input */
        input?: (string|null);

        /** ChaincodeInfo escc */
        escc?: (string|null);

        /** ChaincodeInfo vscc */
        vscc?: (string|null);

        /** ChaincodeInfo id */
        id?: (Uint8Array|null);
    }

    /** Represents a ChaincodeInfo. */
    class ChaincodeInfo implements IChaincodeInfo {

        /**
         * Constructs a new ChaincodeInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeInfo);

        /** ChaincodeInfo name. */
        public name: string;

        /** ChaincodeInfo version. */
        public version: string;

        /** ChaincodeInfo path. */
        public path: string;

        /** ChaincodeInfo input. */
        public input: string;

        /** ChaincodeInfo escc. */
        public escc: string;

        /** ChaincodeInfo vscc. */
        public vscc: string;

        /** ChaincodeInfo id. */
        public id: Uint8Array;

        /**
         * Creates a new ChaincodeInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeInfo instance
         */
        public static create(properties?: protos.IChaincodeInfo): protos.ChaincodeInfo;

        /**
         * Encodes the specified ChaincodeInfo message. Does not implicitly {@link protos.ChaincodeInfo.verify|verify} messages.
         * @param message ChaincodeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeInfo message, length delimited. Does not implicitly {@link protos.ChaincodeInfo.verify|verify} messages.
         * @param message ChaincodeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeInfo;

        /**
         * Decodes a ChaincodeInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeInfo;

        /**
         * Verifies a ChaincodeInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeInfo
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeInfo;

        /**
         * Creates a plain object from a ChaincodeInfo message. Also converts values to other types if specified.
         * @param message ChaincodeInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChannelQueryResponse. */
    interface IChannelQueryResponse {

        /** ChannelQueryResponse channels */
        channels?: (protos.IChannelInfo[]|null);
    }

    /** Represents a ChannelQueryResponse. */
    class ChannelQueryResponse implements IChannelQueryResponse {

        /**
         * Constructs a new ChannelQueryResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChannelQueryResponse);

        /** ChannelQueryResponse channels. */
        public channels: protos.IChannelInfo[];

        /**
         * Creates a new ChannelQueryResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChannelQueryResponse instance
         */
        public static create(properties?: protos.IChannelQueryResponse): protos.ChannelQueryResponse;

        /**
         * Encodes the specified ChannelQueryResponse message. Does not implicitly {@link protos.ChannelQueryResponse.verify|verify} messages.
         * @param message ChannelQueryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChannelQueryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChannelQueryResponse message, length delimited. Does not implicitly {@link protos.ChannelQueryResponse.verify|verify} messages.
         * @param message ChannelQueryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChannelQueryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChannelQueryResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChannelQueryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChannelQueryResponse;

        /**
         * Decodes a ChannelQueryResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChannelQueryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChannelQueryResponse;

        /**
         * Verifies a ChannelQueryResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChannelQueryResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChannelQueryResponse
         */
        public static fromObject(object: { [k: string]: any }): protos.ChannelQueryResponse;

        /**
         * Creates a plain object from a ChannelQueryResponse message. Also converts values to other types if specified.
         * @param message ChannelQueryResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChannelQueryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChannelQueryResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChannelInfo. */
    interface IChannelInfo {

        /** ChannelInfo channelId */
        channelId?: (string|null);
    }

    /** Represents a ChannelInfo. */
    class ChannelInfo implements IChannelInfo {

        /**
         * Constructs a new ChannelInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChannelInfo);

        /** ChannelInfo channelId. */
        public channelId: string;

        /**
         * Creates a new ChannelInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChannelInfo instance
         */
        public static create(properties?: protos.IChannelInfo): protos.ChannelInfo;

        /**
         * Encodes the specified ChannelInfo message. Does not implicitly {@link protos.ChannelInfo.verify|verify} messages.
         * @param message ChannelInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChannelInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChannelInfo message, length delimited. Does not implicitly {@link protos.ChannelInfo.verify|verify} messages.
         * @param message ChannelInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChannelInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChannelInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChannelInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChannelInfo;

        /**
         * Decodes a ChannelInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChannelInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChannelInfo;

        /**
         * Verifies a ChannelInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChannelInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChannelInfo
         */
        public static fromObject(object: { [k: string]: any }): protos.ChannelInfo;

        /**
         * Creates a plain object from a ChannelInfo message. Also converts values to other types if specified.
         * @param message ChannelInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChannelInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChannelInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents an Endorser */
    class Endorser extends $protobuf.rpc.Service {

        /**
         * Constructs a new Endorser service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new Endorser service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): Endorser;

        /**
         * Calls ProcessProposal.
         * @param request SignedProposal message or plain object
         * @param callback Node-style callback called with the error, if any, and ProposalResponse
         */
        public processProposal(request: protos.ISignedProposal, callback: protos.Endorser.ProcessProposalCallback): void;

        /**
         * Calls ProcessProposal.
         * @param request SignedProposal message or plain object
         * @returns Promise
         */
        public processProposal(request: protos.ISignedProposal): Promise<protos.ProposalResponse>;
    }

    namespace Endorser {

        /**
         * Callback as used by {@link protos.Endorser#processProposal}.
         * @param error Error, if any
         * @param [response] ProposalResponse
         */
        type ProcessProposalCallback = (error: (Error|null), response?: protos.ProposalResponse) => void;
    }

    /** Properties of a FilteredBlock. */
    interface IFilteredBlock {

        /** FilteredBlock channelId */
        channelId?: (string|null);

        /** FilteredBlock number */
        number?: (number|Long|null);

        /** FilteredBlock filteredTransactions */
        filteredTransactions?: (protos.IFilteredTransaction[]|null);
    }

    /** Represents a FilteredBlock. */
    class FilteredBlock implements IFilteredBlock {

        /**
         * Constructs a new FilteredBlock.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IFilteredBlock);

        /** FilteredBlock channelId. */
        public channelId: string;

        /** FilteredBlock number. */
        public number: (number|Long);

        /** FilteredBlock filteredTransactions. */
        public filteredTransactions: protos.IFilteredTransaction[];

        /**
         * Creates a new FilteredBlock instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilteredBlock instance
         */
        public static create(properties?: protos.IFilteredBlock): protos.FilteredBlock;

        /**
         * Encodes the specified FilteredBlock message. Does not implicitly {@link protos.FilteredBlock.verify|verify} messages.
         * @param message FilteredBlock message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IFilteredBlock, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilteredBlock message, length delimited. Does not implicitly {@link protos.FilteredBlock.verify|verify} messages.
         * @param message FilteredBlock message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IFilteredBlock, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilteredBlock message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilteredBlock
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.FilteredBlock;

        /**
         * Decodes a FilteredBlock message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilteredBlock
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.FilteredBlock;

        /**
         * Verifies a FilteredBlock message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilteredBlock message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilteredBlock
         */
        public static fromObject(object: { [k: string]: any }): protos.FilteredBlock;

        /**
         * Creates a plain object from a FilteredBlock message. Also converts values to other types if specified.
         * @param message FilteredBlock
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.FilteredBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilteredBlock to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FilteredTransaction. */
    interface IFilteredTransaction {

        /** FilteredTransaction txid */
        txid?: (string|null);

        /** FilteredTransaction type */
        type?: (common.HeaderType|null);

        /** FilteredTransaction txValidationCode */
        txValidationCode?: (protos.TxValidationCode|null);

        /** FilteredTransaction transactionActions */
        transactionActions?: (protos.IFilteredTransactionActions|null);
    }

    /** Represents a FilteredTransaction. */
    class FilteredTransaction implements IFilteredTransaction {

        /**
         * Constructs a new FilteredTransaction.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IFilteredTransaction);

        /** FilteredTransaction txid. */
        public txid: string;

        /** FilteredTransaction type. */
        public type: common.HeaderType;

        /** FilteredTransaction txValidationCode. */
        public txValidationCode: protos.TxValidationCode;

        /** FilteredTransaction transactionActions. */
        public transactionActions?: (protos.IFilteredTransactionActions|null);

        /** FilteredTransaction Data. */
        public Data?: "transactionActions";

        /**
         * Creates a new FilteredTransaction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilteredTransaction instance
         */
        public static create(properties?: protos.IFilteredTransaction): protos.FilteredTransaction;

        /**
         * Encodes the specified FilteredTransaction message. Does not implicitly {@link protos.FilteredTransaction.verify|verify} messages.
         * @param message FilteredTransaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IFilteredTransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilteredTransaction message, length delimited. Does not implicitly {@link protos.FilteredTransaction.verify|verify} messages.
         * @param message FilteredTransaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IFilteredTransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilteredTransaction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilteredTransaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.FilteredTransaction;

        /**
         * Decodes a FilteredTransaction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilteredTransaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.FilteredTransaction;

        /**
         * Verifies a FilteredTransaction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilteredTransaction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilteredTransaction
         */
        public static fromObject(object: { [k: string]: any }): protos.FilteredTransaction;

        /**
         * Creates a plain object from a FilteredTransaction message. Also converts values to other types if specified.
         * @param message FilteredTransaction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.FilteredTransaction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilteredTransaction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FilteredTransactionActions. */
    interface IFilteredTransactionActions {

        /** FilteredTransactionActions chaincodeActions */
        chaincodeActions?: (protos.IFilteredChaincodeAction[]|null);
    }

    /** Represents a FilteredTransactionActions. */
    class FilteredTransactionActions implements IFilteredTransactionActions {

        /**
         * Constructs a new FilteredTransactionActions.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IFilteredTransactionActions);

        /** FilteredTransactionActions chaincodeActions. */
        public chaincodeActions: protos.IFilteredChaincodeAction[];

        /**
         * Creates a new FilteredTransactionActions instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilteredTransactionActions instance
         */
        public static create(properties?: protos.IFilteredTransactionActions): protos.FilteredTransactionActions;

        /**
         * Encodes the specified FilteredTransactionActions message. Does not implicitly {@link protos.FilteredTransactionActions.verify|verify} messages.
         * @param message FilteredTransactionActions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IFilteredTransactionActions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilteredTransactionActions message, length delimited. Does not implicitly {@link protos.FilteredTransactionActions.verify|verify} messages.
         * @param message FilteredTransactionActions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IFilteredTransactionActions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilteredTransactionActions message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilteredTransactionActions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.FilteredTransactionActions;

        /**
         * Decodes a FilteredTransactionActions message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilteredTransactionActions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.FilteredTransactionActions;

        /**
         * Verifies a FilteredTransactionActions message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilteredTransactionActions message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilteredTransactionActions
         */
        public static fromObject(object: { [k: string]: any }): protos.FilteredTransactionActions;

        /**
         * Creates a plain object from a FilteredTransactionActions message. Also converts values to other types if specified.
         * @param message FilteredTransactionActions
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.FilteredTransactionActions, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilteredTransactionActions to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FilteredChaincodeAction. */
    interface IFilteredChaincodeAction {

        /** FilteredChaincodeAction chaincodeEvent */
        chaincodeEvent?: (protos.IChaincodeEvent|null);
    }

    /** Represents a FilteredChaincodeAction. */
    class FilteredChaincodeAction implements IFilteredChaincodeAction {

        /**
         * Constructs a new FilteredChaincodeAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IFilteredChaincodeAction);

        /** FilteredChaincodeAction chaincodeEvent. */
        public chaincodeEvent?: (protos.IChaincodeEvent|null);

        /**
         * Creates a new FilteredChaincodeAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FilteredChaincodeAction instance
         */
        public static create(properties?: protos.IFilteredChaincodeAction): protos.FilteredChaincodeAction;

        /**
         * Encodes the specified FilteredChaincodeAction message. Does not implicitly {@link protos.FilteredChaincodeAction.verify|verify} messages.
         * @param message FilteredChaincodeAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IFilteredChaincodeAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FilteredChaincodeAction message, length delimited. Does not implicitly {@link protos.FilteredChaincodeAction.verify|verify} messages.
         * @param message FilteredChaincodeAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IFilteredChaincodeAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FilteredChaincodeAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FilteredChaincodeAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.FilteredChaincodeAction;

        /**
         * Decodes a FilteredChaincodeAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FilteredChaincodeAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.FilteredChaincodeAction;

        /**
         * Verifies a FilteredChaincodeAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FilteredChaincodeAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FilteredChaincodeAction
         */
        public static fromObject(object: { [k: string]: any }): protos.FilteredChaincodeAction;

        /**
         * Creates a plain object from a FilteredChaincodeAction message. Also converts values to other types if specified.
         * @param message FilteredChaincodeAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.FilteredChaincodeAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FilteredChaincodeAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BlockAndPrivateData. */
    interface IBlockAndPrivateData {

        /** BlockAndPrivateData block */
        block?: (common.IBlock|null);

        /** BlockAndPrivateData privateDataMap */
        privateDataMap?: ({ [k: string]: rwset.ITxPvtReadWriteSet }|null);
    }

    /** Represents a BlockAndPrivateData. */
    class BlockAndPrivateData implements IBlockAndPrivateData {

        /**
         * Constructs a new BlockAndPrivateData.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IBlockAndPrivateData);

        /** BlockAndPrivateData block. */
        public block?: (common.IBlock|null);

        /** BlockAndPrivateData privateDataMap. */
        public privateDataMap: { [k: string]: rwset.ITxPvtReadWriteSet };

        /**
         * Creates a new BlockAndPrivateData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BlockAndPrivateData instance
         */
        public static create(properties?: protos.IBlockAndPrivateData): protos.BlockAndPrivateData;

        /**
         * Encodes the specified BlockAndPrivateData message. Does not implicitly {@link protos.BlockAndPrivateData.verify|verify} messages.
         * @param message BlockAndPrivateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IBlockAndPrivateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BlockAndPrivateData message, length delimited. Does not implicitly {@link protos.BlockAndPrivateData.verify|verify} messages.
         * @param message BlockAndPrivateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IBlockAndPrivateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BlockAndPrivateData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BlockAndPrivateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.BlockAndPrivateData;

        /**
         * Decodes a BlockAndPrivateData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BlockAndPrivateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.BlockAndPrivateData;

        /**
         * Verifies a BlockAndPrivateData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BlockAndPrivateData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BlockAndPrivateData
         */
        public static fromObject(object: { [k: string]: any }): protos.BlockAndPrivateData;

        /**
         * Creates a plain object from a BlockAndPrivateData message. Also converts values to other types if specified.
         * @param message BlockAndPrivateData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.BlockAndPrivateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BlockAndPrivateData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeliverResponse. */
    interface IDeliverResponse {

        /** DeliverResponse status */
        status?: (common.Status|null);

        /** DeliverResponse block */
        block?: (common.IBlock|null);

        /** DeliverResponse filteredBlock */
        filteredBlock?: (protos.IFilteredBlock|null);

        /** DeliverResponse blockAndPrivateData */
        blockAndPrivateData?: (protos.IBlockAndPrivateData|null);
    }

    /** Represents a DeliverResponse. */
    class DeliverResponse implements IDeliverResponse {

        /**
         * Constructs a new DeliverResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IDeliverResponse);

        /** DeliverResponse status. */
        public status: common.Status;

        /** DeliverResponse block. */
        public block?: (common.IBlock|null);

        /** DeliverResponse filteredBlock. */
        public filteredBlock?: (protos.IFilteredBlock|null);

        /** DeliverResponse blockAndPrivateData. */
        public blockAndPrivateData?: (protos.IBlockAndPrivateData|null);

        /** DeliverResponse Type. */
        public Type?: ("status"|"block"|"filteredBlock"|"blockAndPrivateData");

        /**
         * Creates a new DeliverResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeliverResponse instance
         */
        public static create(properties?: protos.IDeliverResponse): protos.DeliverResponse;

        /**
         * Encodes the specified DeliverResponse message. Does not implicitly {@link protos.DeliverResponse.verify|verify} messages.
         * @param message DeliverResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IDeliverResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeliverResponse message, length delimited. Does not implicitly {@link protos.DeliverResponse.verify|verify} messages.
         * @param message DeliverResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IDeliverResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeliverResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeliverResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.DeliverResponse;

        /**
         * Decodes a DeliverResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeliverResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.DeliverResponse;

        /**
         * Verifies a DeliverResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeliverResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeliverResponse
         */
        public static fromObject(object: { [k: string]: any }): protos.DeliverResponse;

        /**
         * Creates a plain object from a DeliverResponse message. Also converts values to other types if specified.
         * @param message DeliverResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.DeliverResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeliverResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a Deliver */
    class Deliver extends $protobuf.rpc.Service {

        /**
         * Constructs a new Deliver service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new Deliver service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): Deliver;

        /**
         * Calls Deliver.
         * @param request Envelope message or plain object
         * @param callback Node-style callback called with the error, if any, and DeliverResponse
         */
        public deliver(request: common.IEnvelope, callback: protos.Deliver.DeliverCallback): void;

        /**
         * Calls Deliver.
         * @param request Envelope message or plain object
         * @returns Promise
         */
        public deliver(request: common.IEnvelope): Promise<protos.DeliverResponse>;

        /**
         * Calls DeliverFiltered.
         * @param request Envelope message or plain object
         * @param callback Node-style callback called with the error, if any, and DeliverResponse
         */
        public deliverFiltered(request: common.IEnvelope, callback: protos.Deliver.DeliverFilteredCallback): void;

        /**
         * Calls DeliverFiltered.
         * @param request Envelope message or plain object
         * @returns Promise
         */
        public deliverFiltered(request: common.IEnvelope): Promise<protos.DeliverResponse>;

        /**
         * Calls DeliverWithPrivateData.
         * @param request Envelope message or plain object
         * @param callback Node-style callback called with the error, if any, and DeliverResponse
         */
        public deliverWithPrivateData(request: common.IEnvelope, callback: protos.Deliver.DeliverWithPrivateDataCallback): void;

        /**
         * Calls DeliverWithPrivateData.
         * @param request Envelope message or plain object
         * @returns Promise
         */
        public deliverWithPrivateData(request: common.IEnvelope): Promise<protos.DeliverResponse>;
    }

    namespace Deliver {

        /**
         * Callback as used by {@link protos.Deliver#deliver}.
         * @param error Error, if any
         * @param [response] DeliverResponse
         */
        type DeliverCallback = (error: (Error|null), response?: protos.DeliverResponse) => void;

        /**
         * Callback as used by {@link protos.Deliver#deliverFiltered}.
         * @param error Error, if any
         * @param [response] DeliverResponse
         */
        type DeliverFilteredCallback = (error: (Error|null), response?: protos.DeliverResponse) => void;

        /**
         * Callback as used by {@link protos.Deliver#deliverWithPrivateData}.
         * @param error Error, if any
         * @param [response] DeliverResponse
         */
        type DeliverWithPrivateDataCallback = (error: (Error|null), response?: protos.DeliverResponse) => void;
    }

    /** Properties of a SignedTransaction. */
    interface ISignedTransaction {

        /** SignedTransaction transactionBytes */
        transactionBytes?: (Uint8Array|null);

        /** SignedTransaction signature */
        signature?: (Uint8Array|null);
    }

    /** Represents a SignedTransaction. */
    class SignedTransaction implements ISignedTransaction {

        /**
         * Constructs a new SignedTransaction.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.ISignedTransaction);

        /** SignedTransaction transactionBytes. */
        public transactionBytes: Uint8Array;

        /** SignedTransaction signature. */
        public signature: Uint8Array;

        /**
         * Creates a new SignedTransaction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SignedTransaction instance
         */
        public static create(properties?: protos.ISignedTransaction): protos.SignedTransaction;

        /**
         * Encodes the specified SignedTransaction message. Does not implicitly {@link protos.SignedTransaction.verify|verify} messages.
         * @param message SignedTransaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.ISignedTransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SignedTransaction message, length delimited. Does not implicitly {@link protos.SignedTransaction.verify|verify} messages.
         * @param message SignedTransaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.ISignedTransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SignedTransaction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignedTransaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.SignedTransaction;

        /**
         * Decodes a SignedTransaction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SignedTransaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.SignedTransaction;

        /**
         * Verifies a SignedTransaction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SignedTransaction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SignedTransaction
         */
        public static fromObject(object: { [k: string]: any }): protos.SignedTransaction;

        /**
         * Creates a plain object from a SignedTransaction message. Also converts values to other types if specified.
         * @param message SignedTransaction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.SignedTransaction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SignedTransaction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ProcessedTransaction. */
    interface IProcessedTransaction {

        /** ProcessedTransaction transactionEnvelope */
        transactionEnvelope?: (common.IEnvelope|null);

        /** ProcessedTransaction validationCode */
        validationCode?: (number|null);
    }

    /** Represents a ProcessedTransaction. */
    class ProcessedTransaction implements IProcessedTransaction {

        /**
         * Constructs a new ProcessedTransaction.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IProcessedTransaction);

        /** ProcessedTransaction transactionEnvelope. */
        public transactionEnvelope?: (common.IEnvelope|null);

        /** ProcessedTransaction validationCode. */
        public validationCode: number;

        /**
         * Creates a new ProcessedTransaction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProcessedTransaction instance
         */
        public static create(properties?: protos.IProcessedTransaction): protos.ProcessedTransaction;

        /**
         * Encodes the specified ProcessedTransaction message. Does not implicitly {@link protos.ProcessedTransaction.verify|verify} messages.
         * @param message ProcessedTransaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IProcessedTransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProcessedTransaction message, length delimited. Does not implicitly {@link protos.ProcessedTransaction.verify|verify} messages.
         * @param message ProcessedTransaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IProcessedTransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProcessedTransaction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProcessedTransaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ProcessedTransaction;

        /**
         * Decodes a ProcessedTransaction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProcessedTransaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ProcessedTransaction;

        /**
         * Verifies a ProcessedTransaction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProcessedTransaction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProcessedTransaction
         */
        public static fromObject(object: { [k: string]: any }): protos.ProcessedTransaction;

        /**
         * Creates a plain object from a ProcessedTransaction message. Also converts values to other types if specified.
         * @param message ProcessedTransaction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ProcessedTransaction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProcessedTransaction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Transaction. */
    interface ITransaction {

        /** Transaction actions */
        actions?: (protos.ITransactionAction[]|null);
    }

    /** Represents a Transaction. */
    class Transaction implements ITransaction {

        /**
         * Constructs a new Transaction.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.ITransaction);

        /** Transaction actions. */
        public actions: protos.ITransactionAction[];

        /**
         * Creates a new Transaction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Transaction instance
         */
        public static create(properties?: protos.ITransaction): protos.Transaction;

        /**
         * Encodes the specified Transaction message. Does not implicitly {@link protos.Transaction.verify|verify} messages.
         * @param message Transaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.ITransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Transaction message, length delimited. Does not implicitly {@link protos.Transaction.verify|verify} messages.
         * @param message Transaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.ITransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Transaction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Transaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.Transaction;

        /**
         * Decodes a Transaction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Transaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.Transaction;

        /**
         * Verifies a Transaction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Transaction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Transaction
         */
        public static fromObject(object: { [k: string]: any }): protos.Transaction;

        /**
         * Creates a plain object from a Transaction message. Also converts values to other types if specified.
         * @param message Transaction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.Transaction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Transaction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TransactionAction. */
    interface ITransactionAction {

        /** TransactionAction header */
        header?: (Uint8Array|null);

        /** TransactionAction payload */
        payload?: (Uint8Array|null);
    }

    /** Represents a TransactionAction. */
    class TransactionAction implements ITransactionAction {

        /**
         * Constructs a new TransactionAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.ITransactionAction);

        /** TransactionAction header. */
        public header: Uint8Array;

        /** TransactionAction payload. */
        public payload: Uint8Array;

        /**
         * Creates a new TransactionAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TransactionAction instance
         */
        public static create(properties?: protos.ITransactionAction): protos.TransactionAction;

        /**
         * Encodes the specified TransactionAction message. Does not implicitly {@link protos.TransactionAction.verify|verify} messages.
         * @param message TransactionAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.ITransactionAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TransactionAction message, length delimited. Does not implicitly {@link protos.TransactionAction.verify|verify} messages.
         * @param message TransactionAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.ITransactionAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TransactionAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TransactionAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.TransactionAction;

        /**
         * Decodes a TransactionAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TransactionAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.TransactionAction;

        /**
         * Verifies a TransactionAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TransactionAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TransactionAction
         */
        public static fromObject(object: { [k: string]: any }): protos.TransactionAction;

        /**
         * Creates a plain object from a TransactionAction message. Also converts values to other types if specified.
         * @param message TransactionAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.TransactionAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TransactionAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeActionPayload. */
    interface IChaincodeActionPayload {

        /** ChaincodeActionPayload chaincodeProposalPayload */
        chaincodeProposalPayload?: (Uint8Array|null);

        /** ChaincodeActionPayload action */
        action?: (protos.IChaincodeEndorsedAction|null);
    }

    /** Represents a ChaincodeActionPayload. */
    class ChaincodeActionPayload implements IChaincodeActionPayload {

        /**
         * Constructs a new ChaincodeActionPayload.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeActionPayload);

        /** ChaincodeActionPayload chaincodeProposalPayload. */
        public chaincodeProposalPayload: Uint8Array;

        /** ChaincodeActionPayload action. */
        public action?: (protos.IChaincodeEndorsedAction|null);

        /**
         * Creates a new ChaincodeActionPayload instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeActionPayload instance
         */
        public static create(properties?: protos.IChaincodeActionPayload): protos.ChaincodeActionPayload;

        /**
         * Encodes the specified ChaincodeActionPayload message. Does not implicitly {@link protos.ChaincodeActionPayload.verify|verify} messages.
         * @param message ChaincodeActionPayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeActionPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeActionPayload message, length delimited. Does not implicitly {@link protos.ChaincodeActionPayload.verify|verify} messages.
         * @param message ChaincodeActionPayload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeActionPayload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeActionPayload message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeActionPayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeActionPayload;

        /**
         * Decodes a ChaincodeActionPayload message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeActionPayload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeActionPayload;

        /**
         * Verifies a ChaincodeActionPayload message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeActionPayload message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeActionPayload
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeActionPayload;

        /**
         * Creates a plain object from a ChaincodeActionPayload message. Also converts values to other types if specified.
         * @param message ChaincodeActionPayload
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeActionPayload, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeActionPayload to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeEndorsedAction. */
    interface IChaincodeEndorsedAction {

        /** ChaincodeEndorsedAction proposalResponsePayload */
        proposalResponsePayload?: (Uint8Array|null);

        /** ChaincodeEndorsedAction endorsements */
        endorsements?: (protos.IEndorsement[]|null);
    }

    /** Represents a ChaincodeEndorsedAction. */
    class ChaincodeEndorsedAction implements IChaincodeEndorsedAction {

        /**
         * Constructs a new ChaincodeEndorsedAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeEndorsedAction);

        /** ChaincodeEndorsedAction proposalResponsePayload. */
        public proposalResponsePayload: Uint8Array;

        /** ChaincodeEndorsedAction endorsements. */
        public endorsements: protos.IEndorsement[];

        /**
         * Creates a new ChaincodeEndorsedAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeEndorsedAction instance
         */
        public static create(properties?: protos.IChaincodeEndorsedAction): protos.ChaincodeEndorsedAction;

        /**
         * Encodes the specified ChaincodeEndorsedAction message. Does not implicitly {@link protos.ChaincodeEndorsedAction.verify|verify} messages.
         * @param message ChaincodeEndorsedAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeEndorsedAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeEndorsedAction message, length delimited. Does not implicitly {@link protos.ChaincodeEndorsedAction.verify|verify} messages.
         * @param message ChaincodeEndorsedAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeEndorsedAction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeEndorsedAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeEndorsedAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeEndorsedAction;

        /**
         * Decodes a ChaincodeEndorsedAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeEndorsedAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeEndorsedAction;

        /**
         * Verifies a ChaincodeEndorsedAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeEndorsedAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeEndorsedAction
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeEndorsedAction;

        /**
         * Creates a plain object from a ChaincodeEndorsedAction message. Also converts values to other types if specified.
         * @param message ChaincodeEndorsedAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeEndorsedAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeEndorsedAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TxValidationCode enum. */
    enum TxValidationCode {
        VALID = 0,
        NIL_ENVELOPE = 1,
        BAD_PAYLOAD = 2,
        BAD_COMMON_HEADER = 3,
        BAD_CREATOR_SIGNATURE = 4,
        INVALID_ENDORSER_TRANSACTION = 5,
        INVALID_CONFIG_TRANSACTION = 6,
        UNSUPPORTED_TX_PAYLOAD = 7,
        BAD_PROPOSAL_TXID = 8,
        DUPLICATE_TXID = 9,
        ENDORSEMENT_POLICY_FAILURE = 10,
        MVCC_READ_CONFLICT = 11,
        PHANTOM_READ_CONFLICT = 12,
        UNKNOWN_TX_TYPE = 13,
        TARGET_CHAIN_NOT_FOUND = 14,
        MARSHAL_TX_ERROR = 15,
        NIL_TXACTION = 16,
        EXPIRED_CHAINCODE = 17,
        CHAINCODE_VERSION_CONFLICT = 18,
        BAD_HEADER_EXTENSION = 19,
        BAD_CHANNEL_HEADER = 20,
        BAD_RESPONSE_PAYLOAD = 21,
        BAD_RWSET = 22,
        ILLEGAL_WRITESET = 23,
        INVALID_WRITESET = 24,
        INVALID_CHAINCODE = 25,
        NOT_VALIDATED = 254,
        INVALID_OTHER_REASON = 255
    }

    /** MetaDataKeys enum. */
    enum MetaDataKeys {
        VALIDATION_PARAMETER = 0,
        VALIDATION_PARAMETER_V2 = 1
    }

    /** Properties of an ApplicationPolicy. */
    interface IApplicationPolicy {

        /** ApplicationPolicy signaturePolicy */
        signaturePolicy?: (common.ISignaturePolicyEnvelope|null);

        /** ApplicationPolicy channelConfigPolicyReference */
        channelConfigPolicyReference?: (string|null);
    }

    /** Represents an ApplicationPolicy. */
    class ApplicationPolicy implements IApplicationPolicy {

        /**
         * Constructs a new ApplicationPolicy.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IApplicationPolicy);

        /** ApplicationPolicy signaturePolicy. */
        public signaturePolicy?: (common.ISignaturePolicyEnvelope|null);

        /** ApplicationPolicy channelConfigPolicyReference. */
        public channelConfigPolicyReference: string;

        /** ApplicationPolicy Type. */
        public Type?: ("signaturePolicy"|"channelConfigPolicyReference");

        /**
         * Creates a new ApplicationPolicy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApplicationPolicy instance
         */
        public static create(properties?: protos.IApplicationPolicy): protos.ApplicationPolicy;

        /**
         * Encodes the specified ApplicationPolicy message. Does not implicitly {@link protos.ApplicationPolicy.verify|verify} messages.
         * @param message ApplicationPolicy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IApplicationPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApplicationPolicy message, length delimited. Does not implicitly {@link protos.ApplicationPolicy.verify|verify} messages.
         * @param message ApplicationPolicy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IApplicationPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApplicationPolicy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplicationPolicy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ApplicationPolicy;

        /**
         * Decodes an ApplicationPolicy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApplicationPolicy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ApplicationPolicy;

        /**
         * Verifies an ApplicationPolicy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApplicationPolicy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApplicationPolicy
         */
        public static fromObject(object: { [k: string]: any }): protos.ApplicationPolicy;

        /**
         * Creates a plain object from an ApplicationPolicy message. Also converts values to other types if specified.
         * @param message ApplicationPolicy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ApplicationPolicy, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApplicationPolicy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeIdentifier. */
    interface IChaincodeIdentifier {

        /** ChaincodeIdentifier hash */
        hash?: (Uint8Array|null);

        /** ChaincodeIdentifier version */
        version?: (string|null);
    }

    /** Represents a ChaincodeIdentifier. */
    class ChaincodeIdentifier implements IChaincodeIdentifier {

        /**
         * Constructs a new ChaincodeIdentifier.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeIdentifier);

        /** ChaincodeIdentifier hash. */
        public hash: Uint8Array;

        /** ChaincodeIdentifier version. */
        public version: string;

        /**
         * Creates a new ChaincodeIdentifier instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeIdentifier instance
         */
        public static create(properties?: protos.IChaincodeIdentifier): protos.ChaincodeIdentifier;

        /**
         * Encodes the specified ChaincodeIdentifier message. Does not implicitly {@link protos.ChaincodeIdentifier.verify|verify} messages.
         * @param message ChaincodeIdentifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeIdentifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeIdentifier message, length delimited. Does not implicitly {@link protos.ChaincodeIdentifier.verify|verify} messages.
         * @param message ChaincodeIdentifier message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeIdentifier, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeIdentifier message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeIdentifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeIdentifier;

        /**
         * Decodes a ChaincodeIdentifier message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeIdentifier
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeIdentifier;

        /**
         * Verifies a ChaincodeIdentifier message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeIdentifier message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeIdentifier
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeIdentifier;

        /**
         * Creates a plain object from a ChaincodeIdentifier message. Also converts values to other types if specified.
         * @param message ChaincodeIdentifier
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeIdentifier, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeIdentifier to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeValidation. */
    interface IChaincodeValidation {

        /** ChaincodeValidation name */
        name?: (string|null);

        /** ChaincodeValidation argument */
        argument?: (Uint8Array|null);
    }

    /** Represents a ChaincodeValidation. */
    class ChaincodeValidation implements IChaincodeValidation {

        /**
         * Constructs a new ChaincodeValidation.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeValidation);

        /** ChaincodeValidation name. */
        public name: string;

        /** ChaincodeValidation argument. */
        public argument: Uint8Array;

        /**
         * Creates a new ChaincodeValidation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeValidation instance
         */
        public static create(properties?: protos.IChaincodeValidation): protos.ChaincodeValidation;

        /**
         * Encodes the specified ChaincodeValidation message. Does not implicitly {@link protos.ChaincodeValidation.verify|verify} messages.
         * @param message ChaincodeValidation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeValidation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeValidation message, length delimited. Does not implicitly {@link protos.ChaincodeValidation.verify|verify} messages.
         * @param message ChaincodeValidation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeValidation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeValidation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeValidation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeValidation;

        /**
         * Decodes a ChaincodeValidation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeValidation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeValidation;

        /**
         * Verifies a ChaincodeValidation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeValidation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeValidation
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeValidation;

        /**
         * Creates a plain object from a ChaincodeValidation message. Also converts values to other types if specified.
         * @param message ChaincodeValidation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeValidation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeValidation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VSCCArgs. */
    interface IVSCCArgs {

        /** VSCCArgs endorsementPolicyRef */
        endorsementPolicyRef?: (string|null);
    }

    /** Represents a VSCCArgs. */
    class VSCCArgs implements IVSCCArgs {

        /**
         * Constructs a new VSCCArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IVSCCArgs);

        /** VSCCArgs endorsementPolicyRef. */
        public endorsementPolicyRef: string;

        /**
         * Creates a new VSCCArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VSCCArgs instance
         */
        public static create(properties?: protos.IVSCCArgs): protos.VSCCArgs;

        /**
         * Encodes the specified VSCCArgs message. Does not implicitly {@link protos.VSCCArgs.verify|verify} messages.
         * @param message VSCCArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IVSCCArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VSCCArgs message, length delimited. Does not implicitly {@link protos.VSCCArgs.verify|verify} messages.
         * @param message VSCCArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IVSCCArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VSCCArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VSCCArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.VSCCArgs;

        /**
         * Decodes a VSCCArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VSCCArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.VSCCArgs;

        /**
         * Verifies a VSCCArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VSCCArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VSCCArgs
         */
        public static fromObject(object: { [k: string]: any }): protos.VSCCArgs;

        /**
         * Creates a plain object from a VSCCArgs message. Also converts values to other types if specified.
         * @param message VSCCArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.VSCCArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VSCCArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeEndorsement. */
    interface IChaincodeEndorsement {

        /** ChaincodeEndorsement name */
        name?: (string|null);
    }

    /** Represents a ChaincodeEndorsement. */
    class ChaincodeEndorsement implements IChaincodeEndorsement {

        /**
         * Constructs a new ChaincodeEndorsement.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeEndorsement);

        /** ChaincodeEndorsement name. */
        public name: string;

        /**
         * Creates a new ChaincodeEndorsement instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeEndorsement instance
         */
        public static create(properties?: protos.IChaincodeEndorsement): protos.ChaincodeEndorsement;

        /**
         * Encodes the specified ChaincodeEndorsement message. Does not implicitly {@link protos.ChaincodeEndorsement.verify|verify} messages.
         * @param message ChaincodeEndorsement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeEndorsement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeEndorsement message, length delimited. Does not implicitly {@link protos.ChaincodeEndorsement.verify|verify} messages.
         * @param message ChaincodeEndorsement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeEndorsement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeEndorsement message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeEndorsement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeEndorsement;

        /**
         * Decodes a ChaincodeEndorsement message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeEndorsement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeEndorsement;

        /**
         * Verifies a ChaincodeEndorsement message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeEndorsement message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeEndorsement
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeEndorsement;

        /**
         * Creates a plain object from a ChaincodeEndorsement message. Also converts values to other types if specified.
         * @param message ChaincodeEndorsement
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeEndorsement, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeEndorsement to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigTree. */
    interface IConfigTree {

        /** ConfigTree channelConfig */
        channelConfig?: (common.IConfig|null);

        /** ConfigTree resourcesConfig */
        resourcesConfig?: (common.IConfig|null);
    }

    /** Represents a ConfigTree. */
    class ConfigTree implements IConfigTree {

        /**
         * Constructs a new ConfigTree.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IConfigTree);

        /** ConfigTree channelConfig. */
        public channelConfig?: (common.IConfig|null);

        /** ConfigTree resourcesConfig. */
        public resourcesConfig?: (common.IConfig|null);

        /**
         * Creates a new ConfigTree instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigTree instance
         */
        public static create(properties?: protos.IConfigTree): protos.ConfigTree;

        /**
         * Encodes the specified ConfigTree message. Does not implicitly {@link protos.ConfigTree.verify|verify} messages.
         * @param message ConfigTree message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IConfigTree, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigTree message, length delimited. Does not implicitly {@link protos.ConfigTree.verify|verify} messages.
         * @param message ConfigTree message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IConfigTree, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigTree message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigTree
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ConfigTree;

        /**
         * Decodes a ConfigTree message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigTree
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ConfigTree;

        /**
         * Verifies a ConfigTree message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigTree message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigTree
         */
        public static fromObject(object: { [k: string]: any }): protos.ConfigTree;

        /**
         * Creates a plain object from a ConfigTree message. Also converts values to other types if specified.
         * @param message ConfigTree
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ConfigTree, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigTree to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeMessage. */
    interface IChaincodeMessage {

        /** ChaincodeMessage type */
        type?: (protos.ChaincodeMessage.Type|null);

        /** ChaincodeMessage timestamp */
        timestamp?: (google.protobuf.ITimestamp|null);

        /** ChaincodeMessage payload */
        payload?: (Uint8Array|null);

        /** ChaincodeMessage txid */
        txid?: (string|null);

        /** ChaincodeMessage proposal */
        proposal?: (protos.ISignedProposal|null);

        /** ChaincodeMessage chaincodeEvent */
        chaincodeEvent?: (protos.IChaincodeEvent|null);

        /** ChaincodeMessage channelId */
        channelId?: (string|null);
    }

    /** Represents a ChaincodeMessage. */
    class ChaincodeMessage implements IChaincodeMessage {

        /**
         * Constructs a new ChaincodeMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IChaincodeMessage);

        /** ChaincodeMessage type. */
        public type: protos.ChaincodeMessage.Type;

        /** ChaincodeMessage timestamp. */
        public timestamp?: (google.protobuf.ITimestamp|null);

        /** ChaincodeMessage payload. */
        public payload: Uint8Array;

        /** ChaincodeMessage txid. */
        public txid: string;

        /** ChaincodeMessage proposal. */
        public proposal?: (protos.ISignedProposal|null);

        /** ChaincodeMessage chaincodeEvent. */
        public chaincodeEvent?: (protos.IChaincodeEvent|null);

        /** ChaincodeMessage channelId. */
        public channelId: string;

        /**
         * Creates a new ChaincodeMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeMessage instance
         */
        public static create(properties?: protos.IChaincodeMessage): protos.ChaincodeMessage;

        /**
         * Encodes the specified ChaincodeMessage message. Does not implicitly {@link protos.ChaincodeMessage.verify|verify} messages.
         * @param message ChaincodeMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IChaincodeMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeMessage message, length delimited. Does not implicitly {@link protos.ChaincodeMessage.verify|verify} messages.
         * @param message ChaincodeMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IChaincodeMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ChaincodeMessage;

        /**
         * Decodes a ChaincodeMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ChaincodeMessage;

        /**
         * Verifies a ChaincodeMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeMessage
         */
        public static fromObject(object: { [k: string]: any }): protos.ChaincodeMessage;

        /**
         * Creates a plain object from a ChaincodeMessage message. Also converts values to other types if specified.
         * @param message ChaincodeMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ChaincodeMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ChaincodeMessage {

        /** Type enum. */
        enum Type {
            UNDEFINED = 0,
            REGISTER = 1,
            REGISTERED = 2,
            INIT = 3,
            READY = 4,
            TRANSACTION = 5,
            COMPLETED = 6,
            ERROR = 7,
            GET_STATE = 8,
            PUT_STATE = 9,
            DEL_STATE = 10,
            INVOKE_CHAINCODE = 11,
            RESPONSE = 13,
            GET_STATE_BY_RANGE = 14,
            GET_QUERY_RESULT = 15,
            QUERY_STATE_NEXT = 16,
            QUERY_STATE_CLOSE = 17,
            KEEPALIVE = 18,
            GET_HISTORY_FOR_KEY = 19,
            GET_STATE_METADATA = 20,
            PUT_STATE_METADATA = 21,
            GET_PRIVATE_DATA_HASH = 22
        }
    }

    /** Properties of a GetState. */
    interface IGetState {

        /** GetState key */
        key?: (string|null);

        /** GetState collection */
        collection?: (string|null);
    }

    /** Represents a GetState. */
    class GetState implements IGetState {

        /**
         * Constructs a new GetState.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IGetState);

        /** GetState key. */
        public key: string;

        /** GetState collection. */
        public collection: string;

        /**
         * Creates a new GetState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetState instance
         */
        public static create(properties?: protos.IGetState): protos.GetState;

        /**
         * Encodes the specified GetState message. Does not implicitly {@link protos.GetState.verify|verify} messages.
         * @param message GetState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IGetState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetState message, length delimited. Does not implicitly {@link protos.GetState.verify|verify} messages.
         * @param message GetState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IGetState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.GetState;

        /**
         * Decodes a GetState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.GetState;

        /**
         * Verifies a GetState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetState
         */
        public static fromObject(object: { [k: string]: any }): protos.GetState;

        /**
         * Creates a plain object from a GetState message. Also converts values to other types if specified.
         * @param message GetState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.GetState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetStateMetadata. */
    interface IGetStateMetadata {

        /** GetStateMetadata key */
        key?: (string|null);

        /** GetStateMetadata collection */
        collection?: (string|null);
    }

    /** Represents a GetStateMetadata. */
    class GetStateMetadata implements IGetStateMetadata {

        /**
         * Constructs a new GetStateMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IGetStateMetadata);

        /** GetStateMetadata key. */
        public key: string;

        /** GetStateMetadata collection. */
        public collection: string;

        /**
         * Creates a new GetStateMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetStateMetadata instance
         */
        public static create(properties?: protos.IGetStateMetadata): protos.GetStateMetadata;

        /**
         * Encodes the specified GetStateMetadata message. Does not implicitly {@link protos.GetStateMetadata.verify|verify} messages.
         * @param message GetStateMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IGetStateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetStateMetadata message, length delimited. Does not implicitly {@link protos.GetStateMetadata.verify|verify} messages.
         * @param message GetStateMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IGetStateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetStateMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetStateMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.GetStateMetadata;

        /**
         * Decodes a GetStateMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetStateMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.GetStateMetadata;

        /**
         * Verifies a GetStateMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetStateMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetStateMetadata
         */
        public static fromObject(object: { [k: string]: any }): protos.GetStateMetadata;

        /**
         * Creates a plain object from a GetStateMetadata message. Also converts values to other types if specified.
         * @param message GetStateMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.GetStateMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetStateMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PutState. */
    interface IPutState {

        /** PutState key */
        key?: (string|null);

        /** PutState value */
        value?: (Uint8Array|null);

        /** PutState collection */
        collection?: (string|null);
    }

    /** Represents a PutState. */
    class PutState implements IPutState {

        /**
         * Constructs a new PutState.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IPutState);

        /** PutState key. */
        public key: string;

        /** PutState value. */
        public value: Uint8Array;

        /** PutState collection. */
        public collection: string;

        /**
         * Creates a new PutState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PutState instance
         */
        public static create(properties?: protos.IPutState): protos.PutState;

        /**
         * Encodes the specified PutState message. Does not implicitly {@link protos.PutState.verify|verify} messages.
         * @param message PutState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IPutState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PutState message, length delimited. Does not implicitly {@link protos.PutState.verify|verify} messages.
         * @param message PutState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IPutState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PutState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PutState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.PutState;

        /**
         * Decodes a PutState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PutState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.PutState;

        /**
         * Verifies a PutState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PutState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PutState
         */
        public static fromObject(object: { [k: string]: any }): protos.PutState;

        /**
         * Creates a plain object from a PutState message. Also converts values to other types if specified.
         * @param message PutState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.PutState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PutState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PutStateMetadata. */
    interface IPutStateMetadata {

        /** PutStateMetadata key */
        key?: (string|null);

        /** PutStateMetadata collection */
        collection?: (string|null);

        /** PutStateMetadata metadata */
        metadata?: (protos.IStateMetadata|null);
    }

    /** Represents a PutStateMetadata. */
    class PutStateMetadata implements IPutStateMetadata {

        /**
         * Constructs a new PutStateMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IPutStateMetadata);

        /** PutStateMetadata key. */
        public key: string;

        /** PutStateMetadata collection. */
        public collection: string;

        /** PutStateMetadata metadata. */
        public metadata?: (protos.IStateMetadata|null);

        /**
         * Creates a new PutStateMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PutStateMetadata instance
         */
        public static create(properties?: protos.IPutStateMetadata): protos.PutStateMetadata;

        /**
         * Encodes the specified PutStateMetadata message. Does not implicitly {@link protos.PutStateMetadata.verify|verify} messages.
         * @param message PutStateMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IPutStateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PutStateMetadata message, length delimited. Does not implicitly {@link protos.PutStateMetadata.verify|verify} messages.
         * @param message PutStateMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IPutStateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PutStateMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PutStateMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.PutStateMetadata;

        /**
         * Decodes a PutStateMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PutStateMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.PutStateMetadata;

        /**
         * Verifies a PutStateMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PutStateMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PutStateMetadata
         */
        public static fromObject(object: { [k: string]: any }): protos.PutStateMetadata;

        /**
         * Creates a plain object from a PutStateMetadata message. Also converts values to other types if specified.
         * @param message PutStateMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.PutStateMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PutStateMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DelState. */
    interface IDelState {

        /** DelState key */
        key?: (string|null);

        /** DelState collection */
        collection?: (string|null);
    }

    /** Represents a DelState. */
    class DelState implements IDelState {

        /**
         * Constructs a new DelState.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IDelState);

        /** DelState key. */
        public key: string;

        /** DelState collection. */
        public collection: string;

        /**
         * Creates a new DelState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DelState instance
         */
        public static create(properties?: protos.IDelState): protos.DelState;

        /**
         * Encodes the specified DelState message. Does not implicitly {@link protos.DelState.verify|verify} messages.
         * @param message DelState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IDelState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DelState message, length delimited. Does not implicitly {@link protos.DelState.verify|verify} messages.
         * @param message DelState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IDelState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DelState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DelState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.DelState;

        /**
         * Decodes a DelState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DelState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.DelState;

        /**
         * Verifies a DelState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DelState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DelState
         */
        public static fromObject(object: { [k: string]: any }): protos.DelState;

        /**
         * Creates a plain object from a DelState message. Also converts values to other types if specified.
         * @param message DelState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.DelState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DelState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetStateByRange. */
    interface IGetStateByRange {

        /** GetStateByRange startKey */
        startKey?: (string|null);

        /** GetStateByRange endKey */
        endKey?: (string|null);

        /** GetStateByRange collection */
        collection?: (string|null);

        /** GetStateByRange metadata */
        metadata?: (Uint8Array|null);
    }

    /** Represents a GetStateByRange. */
    class GetStateByRange implements IGetStateByRange {

        /**
         * Constructs a new GetStateByRange.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IGetStateByRange);

        /** GetStateByRange startKey. */
        public startKey: string;

        /** GetStateByRange endKey. */
        public endKey: string;

        /** GetStateByRange collection. */
        public collection: string;

        /** GetStateByRange metadata. */
        public metadata: Uint8Array;

        /**
         * Creates a new GetStateByRange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetStateByRange instance
         */
        public static create(properties?: protos.IGetStateByRange): protos.GetStateByRange;

        /**
         * Encodes the specified GetStateByRange message. Does not implicitly {@link protos.GetStateByRange.verify|verify} messages.
         * @param message GetStateByRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IGetStateByRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetStateByRange message, length delimited. Does not implicitly {@link protos.GetStateByRange.verify|verify} messages.
         * @param message GetStateByRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IGetStateByRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetStateByRange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetStateByRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.GetStateByRange;

        /**
         * Decodes a GetStateByRange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetStateByRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.GetStateByRange;

        /**
         * Verifies a GetStateByRange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetStateByRange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetStateByRange
         */
        public static fromObject(object: { [k: string]: any }): protos.GetStateByRange;

        /**
         * Creates a plain object from a GetStateByRange message. Also converts values to other types if specified.
         * @param message GetStateByRange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.GetStateByRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetStateByRange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetQueryResult. */
    interface IGetQueryResult {

        /** GetQueryResult query */
        query?: (string|null);

        /** GetQueryResult collection */
        collection?: (string|null);

        /** GetQueryResult metadata */
        metadata?: (Uint8Array|null);
    }

    /** Represents a GetQueryResult. */
    class GetQueryResult implements IGetQueryResult {

        /**
         * Constructs a new GetQueryResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IGetQueryResult);

        /** GetQueryResult query. */
        public query: string;

        /** GetQueryResult collection. */
        public collection: string;

        /** GetQueryResult metadata. */
        public metadata: Uint8Array;

        /**
         * Creates a new GetQueryResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetQueryResult instance
         */
        public static create(properties?: protos.IGetQueryResult): protos.GetQueryResult;

        /**
         * Encodes the specified GetQueryResult message. Does not implicitly {@link protos.GetQueryResult.verify|verify} messages.
         * @param message GetQueryResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IGetQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetQueryResult message, length delimited. Does not implicitly {@link protos.GetQueryResult.verify|verify} messages.
         * @param message GetQueryResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IGetQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetQueryResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetQueryResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.GetQueryResult;

        /**
         * Decodes a GetQueryResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetQueryResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.GetQueryResult;

        /**
         * Verifies a GetQueryResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetQueryResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetQueryResult
         */
        public static fromObject(object: { [k: string]: any }): protos.GetQueryResult;

        /**
         * Creates a plain object from a GetQueryResult message. Also converts values to other types if specified.
         * @param message GetQueryResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.GetQueryResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetQueryResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryMetadata. */
    interface IQueryMetadata {

        /** QueryMetadata pageSize */
        pageSize?: (number|null);

        /** QueryMetadata bookmark */
        bookmark?: (string|null);
    }

    /** Represents a QueryMetadata. */
    class QueryMetadata implements IQueryMetadata {

        /**
         * Constructs a new QueryMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IQueryMetadata);

        /** QueryMetadata pageSize. */
        public pageSize: number;

        /** QueryMetadata bookmark. */
        public bookmark: string;

        /**
         * Creates a new QueryMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryMetadata instance
         */
        public static create(properties?: protos.IQueryMetadata): protos.QueryMetadata;

        /**
         * Encodes the specified QueryMetadata message. Does not implicitly {@link protos.QueryMetadata.verify|verify} messages.
         * @param message QueryMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IQueryMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryMetadata message, length delimited. Does not implicitly {@link protos.QueryMetadata.verify|verify} messages.
         * @param message QueryMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IQueryMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.QueryMetadata;

        /**
         * Decodes a QueryMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.QueryMetadata;

        /**
         * Verifies a QueryMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryMetadata
         */
        public static fromObject(object: { [k: string]: any }): protos.QueryMetadata;

        /**
         * Creates a plain object from a QueryMetadata message. Also converts values to other types if specified.
         * @param message QueryMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.QueryMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetHistoryForKey. */
    interface IGetHistoryForKey {

        /** GetHistoryForKey key */
        key?: (string|null);
    }

    /** Represents a GetHistoryForKey. */
    class GetHistoryForKey implements IGetHistoryForKey {

        /**
         * Constructs a new GetHistoryForKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IGetHistoryForKey);

        /** GetHistoryForKey key. */
        public key: string;

        /**
         * Creates a new GetHistoryForKey instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetHistoryForKey instance
         */
        public static create(properties?: protos.IGetHistoryForKey): protos.GetHistoryForKey;

        /**
         * Encodes the specified GetHistoryForKey message. Does not implicitly {@link protos.GetHistoryForKey.verify|verify} messages.
         * @param message GetHistoryForKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IGetHistoryForKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetHistoryForKey message, length delimited. Does not implicitly {@link protos.GetHistoryForKey.verify|verify} messages.
         * @param message GetHistoryForKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IGetHistoryForKey, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetHistoryForKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetHistoryForKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.GetHistoryForKey;

        /**
         * Decodes a GetHistoryForKey message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetHistoryForKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.GetHistoryForKey;

        /**
         * Verifies a GetHistoryForKey message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetHistoryForKey message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetHistoryForKey
         */
        public static fromObject(object: { [k: string]: any }): protos.GetHistoryForKey;

        /**
         * Creates a plain object from a GetHistoryForKey message. Also converts values to other types if specified.
         * @param message GetHistoryForKey
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.GetHistoryForKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetHistoryForKey to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryStateNext. */
    interface IQueryStateNext {

        /** QueryStateNext id */
        id?: (string|null);
    }

    /** Represents a QueryStateNext. */
    class QueryStateNext implements IQueryStateNext {

        /**
         * Constructs a new QueryStateNext.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IQueryStateNext);

        /** QueryStateNext id. */
        public id: string;

        /**
         * Creates a new QueryStateNext instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryStateNext instance
         */
        public static create(properties?: protos.IQueryStateNext): protos.QueryStateNext;

        /**
         * Encodes the specified QueryStateNext message. Does not implicitly {@link protos.QueryStateNext.verify|verify} messages.
         * @param message QueryStateNext message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IQueryStateNext, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryStateNext message, length delimited. Does not implicitly {@link protos.QueryStateNext.verify|verify} messages.
         * @param message QueryStateNext message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IQueryStateNext, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryStateNext message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryStateNext
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.QueryStateNext;

        /**
         * Decodes a QueryStateNext message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryStateNext
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.QueryStateNext;

        /**
         * Verifies a QueryStateNext message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryStateNext message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryStateNext
         */
        public static fromObject(object: { [k: string]: any }): protos.QueryStateNext;

        /**
         * Creates a plain object from a QueryStateNext message. Also converts values to other types if specified.
         * @param message QueryStateNext
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.QueryStateNext, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryStateNext to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryStateClose. */
    interface IQueryStateClose {

        /** QueryStateClose id */
        id?: (string|null);
    }

    /** Represents a QueryStateClose. */
    class QueryStateClose implements IQueryStateClose {

        /**
         * Constructs a new QueryStateClose.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IQueryStateClose);

        /** QueryStateClose id. */
        public id: string;

        /**
         * Creates a new QueryStateClose instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryStateClose instance
         */
        public static create(properties?: protos.IQueryStateClose): protos.QueryStateClose;

        /**
         * Encodes the specified QueryStateClose message. Does not implicitly {@link protos.QueryStateClose.verify|verify} messages.
         * @param message QueryStateClose message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IQueryStateClose, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryStateClose message, length delimited. Does not implicitly {@link protos.QueryStateClose.verify|verify} messages.
         * @param message QueryStateClose message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IQueryStateClose, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryStateClose message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryStateClose
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.QueryStateClose;

        /**
         * Decodes a QueryStateClose message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryStateClose
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.QueryStateClose;

        /**
         * Verifies a QueryStateClose message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryStateClose message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryStateClose
         */
        public static fromObject(object: { [k: string]: any }): protos.QueryStateClose;

        /**
         * Creates a plain object from a QueryStateClose message. Also converts values to other types if specified.
         * @param message QueryStateClose
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.QueryStateClose, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryStateClose to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryResultBytes. */
    interface IQueryResultBytes {

        /** QueryResultBytes resultBytes */
        resultBytes?: (Uint8Array|null);
    }

    /** Represents a QueryResultBytes. */
    class QueryResultBytes implements IQueryResultBytes {

        /**
         * Constructs a new QueryResultBytes.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IQueryResultBytes);

        /** QueryResultBytes resultBytes. */
        public resultBytes: Uint8Array;

        /**
         * Creates a new QueryResultBytes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryResultBytes instance
         */
        public static create(properties?: protos.IQueryResultBytes): protos.QueryResultBytes;

        /**
         * Encodes the specified QueryResultBytes message. Does not implicitly {@link protos.QueryResultBytes.verify|verify} messages.
         * @param message QueryResultBytes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IQueryResultBytes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryResultBytes message, length delimited. Does not implicitly {@link protos.QueryResultBytes.verify|verify} messages.
         * @param message QueryResultBytes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IQueryResultBytes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryResultBytes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryResultBytes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.QueryResultBytes;

        /**
         * Decodes a QueryResultBytes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryResultBytes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.QueryResultBytes;

        /**
         * Verifies a QueryResultBytes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryResultBytes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryResultBytes
         */
        public static fromObject(object: { [k: string]: any }): protos.QueryResultBytes;

        /**
         * Creates a plain object from a QueryResultBytes message. Also converts values to other types if specified.
         * @param message QueryResultBytes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.QueryResultBytes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryResultBytes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryResponse. */
    interface IQueryResponse {

        /** QueryResponse results */
        results?: (protos.IQueryResultBytes[]|null);

        /** QueryResponse hasMore */
        hasMore?: (boolean|null);

        /** QueryResponse id */
        id?: (string|null);

        /** QueryResponse metadata */
        metadata?: (Uint8Array|null);
    }

    /** Represents a QueryResponse. */
    class QueryResponse implements IQueryResponse {

        /**
         * Constructs a new QueryResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IQueryResponse);

        /** QueryResponse results. */
        public results: protos.IQueryResultBytes[];

        /** QueryResponse hasMore. */
        public hasMore: boolean;

        /** QueryResponse id. */
        public id: string;

        /** QueryResponse metadata. */
        public metadata: Uint8Array;

        /**
         * Creates a new QueryResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryResponse instance
         */
        public static create(properties?: protos.IQueryResponse): protos.QueryResponse;

        /**
         * Encodes the specified QueryResponse message. Does not implicitly {@link protos.QueryResponse.verify|verify} messages.
         * @param message QueryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IQueryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryResponse message, length delimited. Does not implicitly {@link protos.QueryResponse.verify|verify} messages.
         * @param message QueryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IQueryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.QueryResponse;

        /**
         * Decodes a QueryResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.QueryResponse;

        /**
         * Verifies a QueryResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryResponse
         */
        public static fromObject(object: { [k: string]: any }): protos.QueryResponse;

        /**
         * Creates a plain object from a QueryResponse message. Also converts values to other types if specified.
         * @param message QueryResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.QueryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryResponseMetadata. */
    interface IQueryResponseMetadata {

        /** QueryResponseMetadata fetchedRecordsCount */
        fetchedRecordsCount?: (number|null);

        /** QueryResponseMetadata bookmark */
        bookmark?: (string|null);
    }

    /** Represents a QueryResponseMetadata. */
    class QueryResponseMetadata implements IQueryResponseMetadata {

        /**
         * Constructs a new QueryResponseMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IQueryResponseMetadata);

        /** QueryResponseMetadata fetchedRecordsCount. */
        public fetchedRecordsCount: number;

        /** QueryResponseMetadata bookmark. */
        public bookmark: string;

        /**
         * Creates a new QueryResponseMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryResponseMetadata instance
         */
        public static create(properties?: protos.IQueryResponseMetadata): protos.QueryResponseMetadata;

        /**
         * Encodes the specified QueryResponseMetadata message. Does not implicitly {@link protos.QueryResponseMetadata.verify|verify} messages.
         * @param message QueryResponseMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IQueryResponseMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryResponseMetadata message, length delimited. Does not implicitly {@link protos.QueryResponseMetadata.verify|verify} messages.
         * @param message QueryResponseMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IQueryResponseMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryResponseMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryResponseMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.QueryResponseMetadata;

        /**
         * Decodes a QueryResponseMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryResponseMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.QueryResponseMetadata;

        /**
         * Verifies a QueryResponseMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryResponseMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryResponseMetadata
         */
        public static fromObject(object: { [k: string]: any }): protos.QueryResponseMetadata;

        /**
         * Creates a plain object from a QueryResponseMetadata message. Also converts values to other types if specified.
         * @param message QueryResponseMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.QueryResponseMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryResponseMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StateMetadata. */
    interface IStateMetadata {

        /** StateMetadata metakey */
        metakey?: (string|null);

        /** StateMetadata value */
        value?: (Uint8Array|null);
    }

    /** Represents a StateMetadata. */
    class StateMetadata implements IStateMetadata {

        /**
         * Constructs a new StateMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IStateMetadata);

        /** StateMetadata metakey. */
        public metakey: string;

        /** StateMetadata value. */
        public value: Uint8Array;

        /**
         * Creates a new StateMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StateMetadata instance
         */
        public static create(properties?: protos.IStateMetadata): protos.StateMetadata;

        /**
         * Encodes the specified StateMetadata message. Does not implicitly {@link protos.StateMetadata.verify|verify} messages.
         * @param message StateMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IStateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StateMetadata message, length delimited. Does not implicitly {@link protos.StateMetadata.verify|verify} messages.
         * @param message StateMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IStateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StateMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StateMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.StateMetadata;

        /**
         * Decodes a StateMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StateMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.StateMetadata;

        /**
         * Verifies a StateMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StateMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StateMetadata
         */
        public static fromObject(object: { [k: string]: any }): protos.StateMetadata;

        /**
         * Creates a plain object from a StateMetadata message. Also converts values to other types if specified.
         * @param message StateMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.StateMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StateMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StateMetadataResult. */
    interface IStateMetadataResult {

        /** StateMetadataResult entries */
        entries?: (protos.IStateMetadata[]|null);
    }

    /** Represents a StateMetadataResult. */
    class StateMetadataResult implements IStateMetadataResult {

        /**
         * Constructs a new StateMetadataResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IStateMetadataResult);

        /** StateMetadataResult entries. */
        public entries: protos.IStateMetadata[];

        /**
         * Creates a new StateMetadataResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StateMetadataResult instance
         */
        public static create(properties?: protos.IStateMetadataResult): protos.StateMetadataResult;

        /**
         * Encodes the specified StateMetadataResult message. Does not implicitly {@link protos.StateMetadataResult.verify|verify} messages.
         * @param message StateMetadataResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IStateMetadataResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StateMetadataResult message, length delimited. Does not implicitly {@link protos.StateMetadataResult.verify|verify} messages.
         * @param message StateMetadataResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IStateMetadataResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StateMetadataResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StateMetadataResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.StateMetadataResult;

        /**
         * Decodes a StateMetadataResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StateMetadataResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.StateMetadataResult;

        /**
         * Verifies a StateMetadataResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StateMetadataResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StateMetadataResult
         */
        public static fromObject(object: { [k: string]: any }): protos.StateMetadataResult;

        /**
         * Creates a plain object from a StateMetadataResult message. Also converts values to other types if specified.
         * @param message StateMetadataResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.StateMetadataResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StateMetadataResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a ChaincodeSupport */
    class ChaincodeSupport extends $protobuf.rpc.Service {

        /**
         * Constructs a new ChaincodeSupport service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new ChaincodeSupport service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): ChaincodeSupport;

        /**
         * Calls Register.
         * @param request ChaincodeMessage message or plain object
         * @param callback Node-style callback called with the error, if any, and ChaincodeMessage
         */
        public register(request: protos.IChaincodeMessage, callback: protos.ChaincodeSupport.RegisterCallback): void;

        /**
         * Calls Register.
         * @param request ChaincodeMessage message or plain object
         * @returns Promise
         */
        public register(request: protos.IChaincodeMessage): Promise<protos.ChaincodeMessage>;
    }

    namespace ChaincodeSupport {

        /**
         * Callback as used by {@link protos.ChaincodeSupport#register}.
         * @param error Error, if any
         * @param [response] ChaincodeMessage
         */
        type RegisterCallback = (error: (Error|null), response?: protos.ChaincodeMessage) => void;
    }

    /** Properties of an AnchorPeers. */
    interface IAnchorPeers {

        /** AnchorPeers anchorPeers */
        anchorPeers?: (protos.IAnchorPeer[]|null);
    }

    /** Represents an AnchorPeers. */
    class AnchorPeers implements IAnchorPeers {

        /**
         * Constructs a new AnchorPeers.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IAnchorPeers);

        /** AnchorPeers anchorPeers. */
        public anchorPeers: protos.IAnchorPeer[];

        /**
         * Creates a new AnchorPeers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AnchorPeers instance
         */
        public static create(properties?: protos.IAnchorPeers): protos.AnchorPeers;

        /**
         * Encodes the specified AnchorPeers message. Does not implicitly {@link protos.AnchorPeers.verify|verify} messages.
         * @param message AnchorPeers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IAnchorPeers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AnchorPeers message, length delimited. Does not implicitly {@link protos.AnchorPeers.verify|verify} messages.
         * @param message AnchorPeers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IAnchorPeers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AnchorPeers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnchorPeers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.AnchorPeers;

        /**
         * Decodes an AnchorPeers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AnchorPeers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.AnchorPeers;

        /**
         * Verifies an AnchorPeers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AnchorPeers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AnchorPeers
         */
        public static fromObject(object: { [k: string]: any }): protos.AnchorPeers;

        /**
         * Creates a plain object from an AnchorPeers message. Also converts values to other types if specified.
         * @param message AnchorPeers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.AnchorPeers, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AnchorPeers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AnchorPeer. */
    interface IAnchorPeer {

        /** AnchorPeer host */
        host?: (string|null);

        /** AnchorPeer port */
        port?: (number|null);
    }

    /** Represents an AnchorPeer. */
    class AnchorPeer implements IAnchorPeer {

        /**
         * Constructs a new AnchorPeer.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IAnchorPeer);

        /** AnchorPeer host. */
        public host: string;

        /** AnchorPeer port. */
        public port: number;

        /**
         * Creates a new AnchorPeer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AnchorPeer instance
         */
        public static create(properties?: protos.IAnchorPeer): protos.AnchorPeer;

        /**
         * Encodes the specified AnchorPeer message. Does not implicitly {@link protos.AnchorPeer.verify|verify} messages.
         * @param message AnchorPeer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IAnchorPeer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AnchorPeer message, length delimited. Does not implicitly {@link protos.AnchorPeer.verify|verify} messages.
         * @param message AnchorPeer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IAnchorPeer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AnchorPeer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnchorPeer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.AnchorPeer;

        /**
         * Decodes an AnchorPeer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AnchorPeer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.AnchorPeer;

        /**
         * Verifies an AnchorPeer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AnchorPeer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AnchorPeer
         */
        public static fromObject(object: { [k: string]: any }): protos.AnchorPeer;

        /**
         * Creates a plain object from an AnchorPeer message. Also converts values to other types if specified.
         * @param message AnchorPeer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.AnchorPeer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AnchorPeer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a APIResource. */
    interface IAPIResource {

        /** APIResource policyRef */
        policyRef?: (string|null);
    }

    /** Represents a APIResource. */
    class APIResource implements IAPIResource {

        /**
         * Constructs a new APIResource.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IAPIResource);

        /** APIResource policyRef. */
        public policyRef: string;

        /**
         * Creates a new APIResource instance using the specified properties.
         * @param [properties] Properties to set
         * @returns APIResource instance
         */
        public static create(properties?: protos.IAPIResource): protos.APIResource;

        /**
         * Encodes the specified APIResource message. Does not implicitly {@link protos.APIResource.verify|verify} messages.
         * @param message APIResource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IAPIResource, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified APIResource message, length delimited. Does not implicitly {@link protos.APIResource.verify|verify} messages.
         * @param message APIResource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IAPIResource, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a APIResource message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns APIResource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.APIResource;

        /**
         * Decodes a APIResource message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns APIResource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.APIResource;

        /**
         * Verifies a APIResource message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a APIResource message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns APIResource
         */
        public static fromObject(object: { [k: string]: any }): protos.APIResource;

        /**
         * Creates a plain object from a APIResource message. Also converts values to other types if specified.
         * @param message APIResource
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.APIResource, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this APIResource to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ACLs. */
    interface IACLs {

        /** ACLs acls */
        acls?: ({ [k: string]: protos.IAPIResource }|null);
    }

    /** Represents a ACLs. */
    class ACLs implements IACLs {

        /**
         * Constructs a new ACLs.
         * @param [properties] Properties to set
         */
        constructor(properties?: protos.IACLs);

        /** ACLs acls. */
        public acls: { [k: string]: protos.IAPIResource };

        /**
         * Creates a new ACLs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ACLs instance
         */
        public static create(properties?: protos.IACLs): protos.ACLs;

        /**
         * Encodes the specified ACLs message. Does not implicitly {@link protos.ACLs.verify|verify} messages.
         * @param message ACLs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: protos.IACLs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ACLs message, length delimited. Does not implicitly {@link protos.ACLs.verify|verify} messages.
         * @param message ACLs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: protos.IACLs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ACLs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ACLs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): protos.ACLs;

        /**
         * Decodes a ACLs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ACLs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): protos.ACLs;

        /**
         * Verifies a ACLs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ACLs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ACLs
         */
        public static fromObject(object: { [k: string]: any }): protos.ACLs;

        /**
         * Creates a plain object from a ACLs message. Also converts values to other types if specified.
         * @param message ACLs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: protos.ACLs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ACLs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace rwset. */
export namespace rwset {

    /** Properties of a TxReadWriteSet. */
    interface ITxReadWriteSet {

        /** TxReadWriteSet dataModel */
        dataModel?: (rwset.TxReadWriteSet.DataModel|null);

        /** TxReadWriteSet nsRwset */
        nsRwset?: (rwset.INsReadWriteSet[]|null);
    }

    /** Represents a TxReadWriteSet. */
    class TxReadWriteSet implements ITxReadWriteSet {

        /**
         * Constructs a new TxReadWriteSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: rwset.ITxReadWriteSet);

        /** TxReadWriteSet dataModel. */
        public dataModel: rwset.TxReadWriteSet.DataModel;

        /** TxReadWriteSet nsRwset. */
        public nsRwset: rwset.INsReadWriteSet[];

        /**
         * Creates a new TxReadWriteSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TxReadWriteSet instance
         */
        public static create(properties?: rwset.ITxReadWriteSet): rwset.TxReadWriteSet;

        /**
         * Encodes the specified TxReadWriteSet message. Does not implicitly {@link rwset.TxReadWriteSet.verify|verify} messages.
         * @param message TxReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rwset.ITxReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TxReadWriteSet message, length delimited. Does not implicitly {@link rwset.TxReadWriteSet.verify|verify} messages.
         * @param message TxReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rwset.ITxReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TxReadWriteSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TxReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rwset.TxReadWriteSet;

        /**
         * Decodes a TxReadWriteSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TxReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rwset.TxReadWriteSet;

        /**
         * Verifies a TxReadWriteSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TxReadWriteSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TxReadWriteSet
         */
        public static fromObject(object: { [k: string]: any }): rwset.TxReadWriteSet;

        /**
         * Creates a plain object from a TxReadWriteSet message. Also converts values to other types if specified.
         * @param message TxReadWriteSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rwset.TxReadWriteSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TxReadWriteSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace TxReadWriteSet {

        /** DataModel enum. */
        enum DataModel {
            KV = 0
        }
    }

    /** Properties of a NsReadWriteSet. */
    interface INsReadWriteSet {

        /** NsReadWriteSet namespace */
        namespace?: (string|null);

        /** NsReadWriteSet rwset */
        rwset?: (Uint8Array|null);

        /** NsReadWriteSet collectionHashedRwset */
        collectionHashedRwset?: (rwset.ICollectionHashedReadWriteSet[]|null);
    }

    /** Represents a NsReadWriteSet. */
    class NsReadWriteSet implements INsReadWriteSet {

        /**
         * Constructs a new NsReadWriteSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: rwset.INsReadWriteSet);

        /** NsReadWriteSet namespace. */
        public namespace: string;

        /** NsReadWriteSet rwset. */
        public rwset: Uint8Array;

        /** NsReadWriteSet collectionHashedRwset. */
        public collectionHashedRwset: rwset.ICollectionHashedReadWriteSet[];

        /**
         * Creates a new NsReadWriteSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NsReadWriteSet instance
         */
        public static create(properties?: rwset.INsReadWriteSet): rwset.NsReadWriteSet;

        /**
         * Encodes the specified NsReadWriteSet message. Does not implicitly {@link rwset.NsReadWriteSet.verify|verify} messages.
         * @param message NsReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rwset.INsReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NsReadWriteSet message, length delimited. Does not implicitly {@link rwset.NsReadWriteSet.verify|verify} messages.
         * @param message NsReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rwset.INsReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NsReadWriteSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NsReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rwset.NsReadWriteSet;

        /**
         * Decodes a NsReadWriteSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NsReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rwset.NsReadWriteSet;

        /**
         * Verifies a NsReadWriteSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NsReadWriteSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NsReadWriteSet
         */
        public static fromObject(object: { [k: string]: any }): rwset.NsReadWriteSet;

        /**
         * Creates a plain object from a NsReadWriteSet message. Also converts values to other types if specified.
         * @param message NsReadWriteSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rwset.NsReadWriteSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NsReadWriteSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CollectionHashedReadWriteSet. */
    interface ICollectionHashedReadWriteSet {

        /** CollectionHashedReadWriteSet collectionName */
        collectionName?: (string|null);

        /** CollectionHashedReadWriteSet hashedRwset */
        hashedRwset?: (Uint8Array|null);

        /** CollectionHashedReadWriteSet pvtRwsetHash */
        pvtRwsetHash?: (Uint8Array|null);
    }

    /** Represents a CollectionHashedReadWriteSet. */
    class CollectionHashedReadWriteSet implements ICollectionHashedReadWriteSet {

        /**
         * Constructs a new CollectionHashedReadWriteSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: rwset.ICollectionHashedReadWriteSet);

        /** CollectionHashedReadWriteSet collectionName. */
        public collectionName: string;

        /** CollectionHashedReadWriteSet hashedRwset. */
        public hashedRwset: Uint8Array;

        /** CollectionHashedReadWriteSet pvtRwsetHash. */
        public pvtRwsetHash: Uint8Array;

        /**
         * Creates a new CollectionHashedReadWriteSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CollectionHashedReadWriteSet instance
         */
        public static create(properties?: rwset.ICollectionHashedReadWriteSet): rwset.CollectionHashedReadWriteSet;

        /**
         * Encodes the specified CollectionHashedReadWriteSet message. Does not implicitly {@link rwset.CollectionHashedReadWriteSet.verify|verify} messages.
         * @param message CollectionHashedReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rwset.ICollectionHashedReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CollectionHashedReadWriteSet message, length delimited. Does not implicitly {@link rwset.CollectionHashedReadWriteSet.verify|verify} messages.
         * @param message CollectionHashedReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rwset.ICollectionHashedReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CollectionHashedReadWriteSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CollectionHashedReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rwset.CollectionHashedReadWriteSet;

        /**
         * Decodes a CollectionHashedReadWriteSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CollectionHashedReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rwset.CollectionHashedReadWriteSet;

        /**
         * Verifies a CollectionHashedReadWriteSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CollectionHashedReadWriteSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CollectionHashedReadWriteSet
         */
        public static fromObject(object: { [k: string]: any }): rwset.CollectionHashedReadWriteSet;

        /**
         * Creates a plain object from a CollectionHashedReadWriteSet message. Also converts values to other types if specified.
         * @param message CollectionHashedReadWriteSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rwset.CollectionHashedReadWriteSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CollectionHashedReadWriteSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TxPvtReadWriteSet. */
    interface ITxPvtReadWriteSet {

        /** TxPvtReadWriteSet dataModel */
        dataModel?: (rwset.TxReadWriteSet.DataModel|null);

        /** TxPvtReadWriteSet nsPvtRwset */
        nsPvtRwset?: (rwset.INsPvtReadWriteSet[]|null);
    }

    /** Represents a TxPvtReadWriteSet. */
    class TxPvtReadWriteSet implements ITxPvtReadWriteSet {

        /**
         * Constructs a new TxPvtReadWriteSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: rwset.ITxPvtReadWriteSet);

        /** TxPvtReadWriteSet dataModel. */
        public dataModel: rwset.TxReadWriteSet.DataModel;

        /** TxPvtReadWriteSet nsPvtRwset. */
        public nsPvtRwset: rwset.INsPvtReadWriteSet[];

        /**
         * Creates a new TxPvtReadWriteSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TxPvtReadWriteSet instance
         */
        public static create(properties?: rwset.ITxPvtReadWriteSet): rwset.TxPvtReadWriteSet;

        /**
         * Encodes the specified TxPvtReadWriteSet message. Does not implicitly {@link rwset.TxPvtReadWriteSet.verify|verify} messages.
         * @param message TxPvtReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rwset.ITxPvtReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TxPvtReadWriteSet message, length delimited. Does not implicitly {@link rwset.TxPvtReadWriteSet.verify|verify} messages.
         * @param message TxPvtReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rwset.ITxPvtReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TxPvtReadWriteSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TxPvtReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rwset.TxPvtReadWriteSet;

        /**
         * Decodes a TxPvtReadWriteSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TxPvtReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rwset.TxPvtReadWriteSet;

        /**
         * Verifies a TxPvtReadWriteSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TxPvtReadWriteSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TxPvtReadWriteSet
         */
        public static fromObject(object: { [k: string]: any }): rwset.TxPvtReadWriteSet;

        /**
         * Creates a plain object from a TxPvtReadWriteSet message. Also converts values to other types if specified.
         * @param message TxPvtReadWriteSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rwset.TxPvtReadWriteSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TxPvtReadWriteSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NsPvtReadWriteSet. */
    interface INsPvtReadWriteSet {

        /** NsPvtReadWriteSet namespace */
        namespace?: (string|null);

        /** NsPvtReadWriteSet collectionPvtRwset */
        collectionPvtRwset?: (rwset.ICollectionPvtReadWriteSet[]|null);
    }

    /** Represents a NsPvtReadWriteSet. */
    class NsPvtReadWriteSet implements INsPvtReadWriteSet {

        /**
         * Constructs a new NsPvtReadWriteSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: rwset.INsPvtReadWriteSet);

        /** NsPvtReadWriteSet namespace. */
        public namespace: string;

        /** NsPvtReadWriteSet collectionPvtRwset. */
        public collectionPvtRwset: rwset.ICollectionPvtReadWriteSet[];

        /**
         * Creates a new NsPvtReadWriteSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NsPvtReadWriteSet instance
         */
        public static create(properties?: rwset.INsPvtReadWriteSet): rwset.NsPvtReadWriteSet;

        /**
         * Encodes the specified NsPvtReadWriteSet message. Does not implicitly {@link rwset.NsPvtReadWriteSet.verify|verify} messages.
         * @param message NsPvtReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rwset.INsPvtReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NsPvtReadWriteSet message, length delimited. Does not implicitly {@link rwset.NsPvtReadWriteSet.verify|verify} messages.
         * @param message NsPvtReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rwset.INsPvtReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NsPvtReadWriteSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NsPvtReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rwset.NsPvtReadWriteSet;

        /**
         * Decodes a NsPvtReadWriteSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NsPvtReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rwset.NsPvtReadWriteSet;

        /**
         * Verifies a NsPvtReadWriteSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NsPvtReadWriteSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NsPvtReadWriteSet
         */
        public static fromObject(object: { [k: string]: any }): rwset.NsPvtReadWriteSet;

        /**
         * Creates a plain object from a NsPvtReadWriteSet message. Also converts values to other types if specified.
         * @param message NsPvtReadWriteSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rwset.NsPvtReadWriteSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NsPvtReadWriteSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CollectionPvtReadWriteSet. */
    interface ICollectionPvtReadWriteSet {

        /** CollectionPvtReadWriteSet collectionName */
        collectionName?: (string|null);

        /** CollectionPvtReadWriteSet rwset */
        rwset?: (Uint8Array|null);
    }

    /** Represents a CollectionPvtReadWriteSet. */
    class CollectionPvtReadWriteSet implements ICollectionPvtReadWriteSet {

        /**
         * Constructs a new CollectionPvtReadWriteSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: rwset.ICollectionPvtReadWriteSet);

        /** CollectionPvtReadWriteSet collectionName. */
        public collectionName: string;

        /** CollectionPvtReadWriteSet rwset. */
        public rwset: Uint8Array;

        /**
         * Creates a new CollectionPvtReadWriteSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CollectionPvtReadWriteSet instance
         */
        public static create(properties?: rwset.ICollectionPvtReadWriteSet): rwset.CollectionPvtReadWriteSet;

        /**
         * Encodes the specified CollectionPvtReadWriteSet message. Does not implicitly {@link rwset.CollectionPvtReadWriteSet.verify|verify} messages.
         * @param message CollectionPvtReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rwset.ICollectionPvtReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CollectionPvtReadWriteSet message, length delimited. Does not implicitly {@link rwset.CollectionPvtReadWriteSet.verify|verify} messages.
         * @param message CollectionPvtReadWriteSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rwset.ICollectionPvtReadWriteSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CollectionPvtReadWriteSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CollectionPvtReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rwset.CollectionPvtReadWriteSet;

        /**
         * Decodes a CollectionPvtReadWriteSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CollectionPvtReadWriteSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rwset.CollectionPvtReadWriteSet;

        /**
         * Verifies a CollectionPvtReadWriteSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CollectionPvtReadWriteSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CollectionPvtReadWriteSet
         */
        public static fromObject(object: { [k: string]: any }): rwset.CollectionPvtReadWriteSet;

        /**
         * Creates a plain object from a CollectionPvtReadWriteSet message. Also converts values to other types if specified.
         * @param message CollectionPvtReadWriteSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rwset.CollectionPvtReadWriteSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CollectionPvtReadWriteSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace lifecycle. */
export namespace lifecycle {

    /** Properties of a StateMetadata. */
    interface IStateMetadata {

        /** StateMetadata datatype */
        datatype?: (string|null);

        /** StateMetadata fields */
        fields?: (string[]|null);
    }

    /** Represents a StateMetadata. */
    class StateMetadata implements IStateMetadata {

        /**
         * Constructs a new StateMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IStateMetadata);

        /** StateMetadata datatype. */
        public datatype: string;

        /** StateMetadata fields. */
        public fields: string[];

        /**
         * Creates a new StateMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StateMetadata instance
         */
        public static create(properties?: lifecycle.IStateMetadata): lifecycle.StateMetadata;

        /**
         * Encodes the specified StateMetadata message. Does not implicitly {@link lifecycle.StateMetadata.verify|verify} messages.
         * @param message StateMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IStateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StateMetadata message, length delimited. Does not implicitly {@link lifecycle.StateMetadata.verify|verify} messages.
         * @param message StateMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IStateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StateMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StateMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.StateMetadata;

        /**
         * Decodes a StateMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StateMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.StateMetadata;

        /**
         * Verifies a StateMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StateMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StateMetadata
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.StateMetadata;

        /**
         * Creates a plain object from a StateMetadata message. Also converts values to other types if specified.
         * @param message StateMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.StateMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StateMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StateData. */
    interface IStateData {

        /** StateData Int64 */
        Int64?: (number|Long|null);

        /** StateData Bytes */
        Bytes?: (Uint8Array|null);

        /** StateData String */
        String?: (string|null);
    }

    /** Represents a StateData. */
    class StateData implements IStateData {

        /**
         * Constructs a new StateData.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IStateData);

        /** StateData Int64. */
        public Int64: (number|Long);

        /** StateData Bytes. */
        public Bytes: Uint8Array;

        /** StateData String. */
        public String: string;

        /** StateData Type. */
        public Type?: ("Int64"|"Bytes"|"String");

        /**
         * Creates a new StateData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StateData instance
         */
        public static create(properties?: lifecycle.IStateData): lifecycle.StateData;

        /**
         * Encodes the specified StateData message. Does not implicitly {@link lifecycle.StateData.verify|verify} messages.
         * @param message StateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IStateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StateData message, length delimited. Does not implicitly {@link lifecycle.StateData.verify|verify} messages.
         * @param message StateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IStateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StateData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.StateData;

        /**
         * Decodes a StateData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.StateData;

        /**
         * Verifies a StateData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StateData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StateData
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.StateData;

        /**
         * Creates a plain object from a StateData message. Also converts values to other types if specified.
         * @param message StateData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.StateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StateData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InstallChaincodeArgs. */
    interface IInstallChaincodeArgs {

        /** InstallChaincodeArgs chaincodeInstallPackage */
        chaincodeInstallPackage?: (Uint8Array|null);
    }

    /** Represents an InstallChaincodeArgs. */
    class InstallChaincodeArgs implements IInstallChaincodeArgs {

        /**
         * Constructs a new InstallChaincodeArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IInstallChaincodeArgs);

        /** InstallChaincodeArgs chaincodeInstallPackage. */
        public chaincodeInstallPackage: Uint8Array;

        /**
         * Creates a new InstallChaincodeArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InstallChaincodeArgs instance
         */
        public static create(properties?: lifecycle.IInstallChaincodeArgs): lifecycle.InstallChaincodeArgs;

        /**
         * Encodes the specified InstallChaincodeArgs message. Does not implicitly {@link lifecycle.InstallChaincodeArgs.verify|verify} messages.
         * @param message InstallChaincodeArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IInstallChaincodeArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InstallChaincodeArgs message, length delimited. Does not implicitly {@link lifecycle.InstallChaincodeArgs.verify|verify} messages.
         * @param message InstallChaincodeArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IInstallChaincodeArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InstallChaincodeArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InstallChaincodeArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.InstallChaincodeArgs;

        /**
         * Decodes an InstallChaincodeArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InstallChaincodeArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.InstallChaincodeArgs;

        /**
         * Verifies an InstallChaincodeArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InstallChaincodeArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InstallChaincodeArgs
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.InstallChaincodeArgs;

        /**
         * Creates a plain object from an InstallChaincodeArgs message. Also converts values to other types if specified.
         * @param message InstallChaincodeArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.InstallChaincodeArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InstallChaincodeArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InstallChaincodeResult. */
    interface IInstallChaincodeResult {

        /** InstallChaincodeResult packageId */
        packageId?: (string|null);

        /** InstallChaincodeResult label */
        label?: (string|null);
    }

    /** Represents an InstallChaincodeResult. */
    class InstallChaincodeResult implements IInstallChaincodeResult {

        /**
         * Constructs a new InstallChaincodeResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IInstallChaincodeResult);

        /** InstallChaincodeResult packageId. */
        public packageId: string;

        /** InstallChaincodeResult label. */
        public label: string;

        /**
         * Creates a new InstallChaincodeResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InstallChaincodeResult instance
         */
        public static create(properties?: lifecycle.IInstallChaincodeResult): lifecycle.InstallChaincodeResult;

        /**
         * Encodes the specified InstallChaincodeResult message. Does not implicitly {@link lifecycle.InstallChaincodeResult.verify|verify} messages.
         * @param message InstallChaincodeResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IInstallChaincodeResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InstallChaincodeResult message, length delimited. Does not implicitly {@link lifecycle.InstallChaincodeResult.verify|verify} messages.
         * @param message InstallChaincodeResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IInstallChaincodeResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InstallChaincodeResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InstallChaincodeResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.InstallChaincodeResult;

        /**
         * Decodes an InstallChaincodeResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InstallChaincodeResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.InstallChaincodeResult;

        /**
         * Verifies an InstallChaincodeResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InstallChaincodeResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InstallChaincodeResult
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.InstallChaincodeResult;

        /**
         * Creates a plain object from an InstallChaincodeResult message. Also converts values to other types if specified.
         * @param message InstallChaincodeResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.InstallChaincodeResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InstallChaincodeResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryInstalledChaincodeArgs. */
    interface IQueryInstalledChaincodeArgs {

        /** QueryInstalledChaincodeArgs packageId */
        packageId?: (string|null);
    }

    /** Represents a QueryInstalledChaincodeArgs. */
    class QueryInstalledChaincodeArgs implements IQueryInstalledChaincodeArgs {

        /**
         * Constructs a new QueryInstalledChaincodeArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IQueryInstalledChaincodeArgs);

        /** QueryInstalledChaincodeArgs packageId. */
        public packageId: string;

        /**
         * Creates a new QueryInstalledChaincodeArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryInstalledChaincodeArgs instance
         */
        public static create(properties?: lifecycle.IQueryInstalledChaincodeArgs): lifecycle.QueryInstalledChaincodeArgs;

        /**
         * Encodes the specified QueryInstalledChaincodeArgs message. Does not implicitly {@link lifecycle.QueryInstalledChaincodeArgs.verify|verify} messages.
         * @param message QueryInstalledChaincodeArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IQueryInstalledChaincodeArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryInstalledChaincodeArgs message, length delimited. Does not implicitly {@link lifecycle.QueryInstalledChaincodeArgs.verify|verify} messages.
         * @param message QueryInstalledChaincodeArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IQueryInstalledChaincodeArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryInstalledChaincodeArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryInstalledChaincodeArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryInstalledChaincodeArgs;

        /**
         * Decodes a QueryInstalledChaincodeArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryInstalledChaincodeArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryInstalledChaincodeArgs;

        /**
         * Verifies a QueryInstalledChaincodeArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryInstalledChaincodeArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryInstalledChaincodeArgs
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.QueryInstalledChaincodeArgs;

        /**
         * Creates a plain object from a QueryInstalledChaincodeArgs message. Also converts values to other types if specified.
         * @param message QueryInstalledChaincodeArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.QueryInstalledChaincodeArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryInstalledChaincodeArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryInstalledChaincodeResult. */
    interface IQueryInstalledChaincodeResult {

        /** QueryInstalledChaincodeResult packageId */
        packageId?: (string|null);

        /** QueryInstalledChaincodeResult label */
        label?: (string|null);

        /** QueryInstalledChaincodeResult references */
        references?: ({ [k: string]: lifecycle.QueryInstalledChaincodeResult.IReferences }|null);
    }

    /** Represents a QueryInstalledChaincodeResult. */
    class QueryInstalledChaincodeResult implements IQueryInstalledChaincodeResult {

        /**
         * Constructs a new QueryInstalledChaincodeResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IQueryInstalledChaincodeResult);

        /** QueryInstalledChaincodeResult packageId. */
        public packageId: string;

        /** QueryInstalledChaincodeResult label. */
        public label: string;

        /** QueryInstalledChaincodeResult references. */
        public references: { [k: string]: lifecycle.QueryInstalledChaincodeResult.IReferences };

        /**
         * Creates a new QueryInstalledChaincodeResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryInstalledChaincodeResult instance
         */
        public static create(properties?: lifecycle.IQueryInstalledChaincodeResult): lifecycle.QueryInstalledChaincodeResult;

        /**
         * Encodes the specified QueryInstalledChaincodeResult message. Does not implicitly {@link lifecycle.QueryInstalledChaincodeResult.verify|verify} messages.
         * @param message QueryInstalledChaincodeResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IQueryInstalledChaincodeResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryInstalledChaincodeResult message, length delimited. Does not implicitly {@link lifecycle.QueryInstalledChaincodeResult.verify|verify} messages.
         * @param message QueryInstalledChaincodeResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IQueryInstalledChaincodeResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryInstalledChaincodeResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryInstalledChaincodeResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryInstalledChaincodeResult;

        /**
         * Decodes a QueryInstalledChaincodeResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryInstalledChaincodeResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryInstalledChaincodeResult;

        /**
         * Verifies a QueryInstalledChaincodeResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryInstalledChaincodeResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryInstalledChaincodeResult
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.QueryInstalledChaincodeResult;

        /**
         * Creates a plain object from a QueryInstalledChaincodeResult message. Also converts values to other types if specified.
         * @param message QueryInstalledChaincodeResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.QueryInstalledChaincodeResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryInstalledChaincodeResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace QueryInstalledChaincodeResult {

        /** Properties of a References. */
        interface IReferences {

            /** References chaincodes */
            chaincodes?: (lifecycle.QueryInstalledChaincodeResult.IChaincode[]|null);
        }

        /** Represents a References. */
        class References implements IReferences {

            /**
             * Constructs a new References.
             * @param [properties] Properties to set
             */
            constructor(properties?: lifecycle.QueryInstalledChaincodeResult.IReferences);

            /** References chaincodes. */
            public chaincodes: lifecycle.QueryInstalledChaincodeResult.IChaincode[];

            /**
             * Creates a new References instance using the specified properties.
             * @param [properties] Properties to set
             * @returns References instance
             */
            public static create(properties?: lifecycle.QueryInstalledChaincodeResult.IReferences): lifecycle.QueryInstalledChaincodeResult.References;

            /**
             * Encodes the specified References message. Does not implicitly {@link lifecycle.QueryInstalledChaincodeResult.References.verify|verify} messages.
             * @param message References message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lifecycle.QueryInstalledChaincodeResult.IReferences, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified References message, length delimited. Does not implicitly {@link lifecycle.QueryInstalledChaincodeResult.References.verify|verify} messages.
             * @param message References message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lifecycle.QueryInstalledChaincodeResult.IReferences, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a References message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns References
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryInstalledChaincodeResult.References;

            /**
             * Decodes a References message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns References
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryInstalledChaincodeResult.References;

            /**
             * Verifies a References message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a References message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns References
             */
            public static fromObject(object: { [k: string]: any }): lifecycle.QueryInstalledChaincodeResult.References;

            /**
             * Creates a plain object from a References message. Also converts values to other types if specified.
             * @param message References
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lifecycle.QueryInstalledChaincodeResult.References, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this References to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Chaincode. */
        interface IChaincode {

            /** Chaincode name */
            name?: (string|null);

            /** Chaincode version */
            version?: (string|null);
        }

        /** Represents a Chaincode. */
        class Chaincode implements IChaincode {

            /**
             * Constructs a new Chaincode.
             * @param [properties] Properties to set
             */
            constructor(properties?: lifecycle.QueryInstalledChaincodeResult.IChaincode);

            /** Chaincode name. */
            public name: string;

            /** Chaincode version. */
            public version: string;

            /**
             * Creates a new Chaincode instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Chaincode instance
             */
            public static create(properties?: lifecycle.QueryInstalledChaincodeResult.IChaincode): lifecycle.QueryInstalledChaincodeResult.Chaincode;

            /**
             * Encodes the specified Chaincode message. Does not implicitly {@link lifecycle.QueryInstalledChaincodeResult.Chaincode.verify|verify} messages.
             * @param message Chaincode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lifecycle.QueryInstalledChaincodeResult.IChaincode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Chaincode message, length delimited. Does not implicitly {@link lifecycle.QueryInstalledChaincodeResult.Chaincode.verify|verify} messages.
             * @param message Chaincode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lifecycle.QueryInstalledChaincodeResult.IChaincode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Chaincode message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Chaincode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryInstalledChaincodeResult.Chaincode;

            /**
             * Decodes a Chaincode message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Chaincode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryInstalledChaincodeResult.Chaincode;

            /**
             * Verifies a Chaincode message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Chaincode message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Chaincode
             */
            public static fromObject(object: { [k: string]: any }): lifecycle.QueryInstalledChaincodeResult.Chaincode;

            /**
             * Creates a plain object from a Chaincode message. Also converts values to other types if specified.
             * @param message Chaincode
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lifecycle.QueryInstalledChaincodeResult.Chaincode, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Chaincode to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a GetInstalledChaincodePackageArgs. */
    interface IGetInstalledChaincodePackageArgs {

        /** GetInstalledChaincodePackageArgs packageId */
        packageId?: (string|null);
    }

    /** Represents a GetInstalledChaincodePackageArgs. */
    class GetInstalledChaincodePackageArgs implements IGetInstalledChaincodePackageArgs {

        /**
         * Constructs a new GetInstalledChaincodePackageArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IGetInstalledChaincodePackageArgs);

        /** GetInstalledChaincodePackageArgs packageId. */
        public packageId: string;

        /**
         * Creates a new GetInstalledChaincodePackageArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetInstalledChaincodePackageArgs instance
         */
        public static create(properties?: lifecycle.IGetInstalledChaincodePackageArgs): lifecycle.GetInstalledChaincodePackageArgs;

        /**
         * Encodes the specified GetInstalledChaincodePackageArgs message. Does not implicitly {@link lifecycle.GetInstalledChaincodePackageArgs.verify|verify} messages.
         * @param message GetInstalledChaincodePackageArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IGetInstalledChaincodePackageArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetInstalledChaincodePackageArgs message, length delimited. Does not implicitly {@link lifecycle.GetInstalledChaincodePackageArgs.verify|verify} messages.
         * @param message GetInstalledChaincodePackageArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IGetInstalledChaincodePackageArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetInstalledChaincodePackageArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetInstalledChaincodePackageArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.GetInstalledChaincodePackageArgs;

        /**
         * Decodes a GetInstalledChaincodePackageArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetInstalledChaincodePackageArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.GetInstalledChaincodePackageArgs;

        /**
         * Verifies a GetInstalledChaincodePackageArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetInstalledChaincodePackageArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetInstalledChaincodePackageArgs
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.GetInstalledChaincodePackageArgs;

        /**
         * Creates a plain object from a GetInstalledChaincodePackageArgs message. Also converts values to other types if specified.
         * @param message GetInstalledChaincodePackageArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.GetInstalledChaincodePackageArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetInstalledChaincodePackageArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetInstalledChaincodePackageResult. */
    interface IGetInstalledChaincodePackageResult {

        /** GetInstalledChaincodePackageResult chaincodeInstallPackage */
        chaincodeInstallPackage?: (Uint8Array|null);
    }

    /** Represents a GetInstalledChaincodePackageResult. */
    class GetInstalledChaincodePackageResult implements IGetInstalledChaincodePackageResult {

        /**
         * Constructs a new GetInstalledChaincodePackageResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IGetInstalledChaincodePackageResult);

        /** GetInstalledChaincodePackageResult chaincodeInstallPackage. */
        public chaincodeInstallPackage: Uint8Array;

        /**
         * Creates a new GetInstalledChaincodePackageResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetInstalledChaincodePackageResult instance
         */
        public static create(properties?: lifecycle.IGetInstalledChaincodePackageResult): lifecycle.GetInstalledChaincodePackageResult;

        /**
         * Encodes the specified GetInstalledChaincodePackageResult message. Does not implicitly {@link lifecycle.GetInstalledChaincodePackageResult.verify|verify} messages.
         * @param message GetInstalledChaincodePackageResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IGetInstalledChaincodePackageResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetInstalledChaincodePackageResult message, length delimited. Does not implicitly {@link lifecycle.GetInstalledChaincodePackageResult.verify|verify} messages.
         * @param message GetInstalledChaincodePackageResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IGetInstalledChaincodePackageResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetInstalledChaincodePackageResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetInstalledChaincodePackageResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.GetInstalledChaincodePackageResult;

        /**
         * Decodes a GetInstalledChaincodePackageResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetInstalledChaincodePackageResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.GetInstalledChaincodePackageResult;

        /**
         * Verifies a GetInstalledChaincodePackageResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetInstalledChaincodePackageResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetInstalledChaincodePackageResult
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.GetInstalledChaincodePackageResult;

        /**
         * Creates a plain object from a GetInstalledChaincodePackageResult message. Also converts values to other types if specified.
         * @param message GetInstalledChaincodePackageResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.GetInstalledChaincodePackageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetInstalledChaincodePackageResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryInstalledChaincodesArgs. */
    interface IQueryInstalledChaincodesArgs {
    }

    /** Represents a QueryInstalledChaincodesArgs. */
    class QueryInstalledChaincodesArgs implements IQueryInstalledChaincodesArgs {

        /**
         * Constructs a new QueryInstalledChaincodesArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IQueryInstalledChaincodesArgs);

        /**
         * Creates a new QueryInstalledChaincodesArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryInstalledChaincodesArgs instance
         */
        public static create(properties?: lifecycle.IQueryInstalledChaincodesArgs): lifecycle.QueryInstalledChaincodesArgs;

        /**
         * Encodes the specified QueryInstalledChaincodesArgs message. Does not implicitly {@link lifecycle.QueryInstalledChaincodesArgs.verify|verify} messages.
         * @param message QueryInstalledChaincodesArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IQueryInstalledChaincodesArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryInstalledChaincodesArgs message, length delimited. Does not implicitly {@link lifecycle.QueryInstalledChaincodesArgs.verify|verify} messages.
         * @param message QueryInstalledChaincodesArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IQueryInstalledChaincodesArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryInstalledChaincodesArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryInstalledChaincodesArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryInstalledChaincodesArgs;

        /**
         * Decodes a QueryInstalledChaincodesArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryInstalledChaincodesArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryInstalledChaincodesArgs;

        /**
         * Verifies a QueryInstalledChaincodesArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryInstalledChaincodesArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryInstalledChaincodesArgs
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.QueryInstalledChaincodesArgs;

        /**
         * Creates a plain object from a QueryInstalledChaincodesArgs message. Also converts values to other types if specified.
         * @param message QueryInstalledChaincodesArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.QueryInstalledChaincodesArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryInstalledChaincodesArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryInstalledChaincodesResult. */
    interface IQueryInstalledChaincodesResult {

        /** QueryInstalledChaincodesResult installedChaincodes */
        installedChaincodes?: (lifecycle.QueryInstalledChaincodesResult.IInstalledChaincode[]|null);
    }

    /** Represents a QueryInstalledChaincodesResult. */
    class QueryInstalledChaincodesResult implements IQueryInstalledChaincodesResult {

        /**
         * Constructs a new QueryInstalledChaincodesResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IQueryInstalledChaincodesResult);

        /** QueryInstalledChaincodesResult installedChaincodes. */
        public installedChaincodes: lifecycle.QueryInstalledChaincodesResult.IInstalledChaincode[];

        /**
         * Creates a new QueryInstalledChaincodesResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryInstalledChaincodesResult instance
         */
        public static create(properties?: lifecycle.IQueryInstalledChaincodesResult): lifecycle.QueryInstalledChaincodesResult;

        /**
         * Encodes the specified QueryInstalledChaincodesResult message. Does not implicitly {@link lifecycle.QueryInstalledChaincodesResult.verify|verify} messages.
         * @param message QueryInstalledChaincodesResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IQueryInstalledChaincodesResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryInstalledChaincodesResult message, length delimited. Does not implicitly {@link lifecycle.QueryInstalledChaincodesResult.verify|verify} messages.
         * @param message QueryInstalledChaincodesResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IQueryInstalledChaincodesResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryInstalledChaincodesResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryInstalledChaincodesResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryInstalledChaincodesResult;

        /**
         * Decodes a QueryInstalledChaincodesResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryInstalledChaincodesResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryInstalledChaincodesResult;

        /**
         * Verifies a QueryInstalledChaincodesResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryInstalledChaincodesResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryInstalledChaincodesResult
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.QueryInstalledChaincodesResult;

        /**
         * Creates a plain object from a QueryInstalledChaincodesResult message. Also converts values to other types if specified.
         * @param message QueryInstalledChaincodesResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.QueryInstalledChaincodesResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryInstalledChaincodesResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace QueryInstalledChaincodesResult {

        /** Properties of an InstalledChaincode. */
        interface IInstalledChaincode {

            /** InstalledChaincode packageId */
            packageId?: (string|null);

            /** InstalledChaincode label */
            label?: (string|null);

            /** InstalledChaincode references */
            references?: ({ [k: string]: lifecycle.QueryInstalledChaincodesResult.IReferences }|null);
        }

        /** Represents an InstalledChaincode. */
        class InstalledChaincode implements IInstalledChaincode {

            /**
             * Constructs a new InstalledChaincode.
             * @param [properties] Properties to set
             */
            constructor(properties?: lifecycle.QueryInstalledChaincodesResult.IInstalledChaincode);

            /** InstalledChaincode packageId. */
            public packageId: string;

            /** InstalledChaincode label. */
            public label: string;

            /** InstalledChaincode references. */
            public references: { [k: string]: lifecycle.QueryInstalledChaincodesResult.IReferences };

            /**
             * Creates a new InstalledChaincode instance using the specified properties.
             * @param [properties] Properties to set
             * @returns InstalledChaincode instance
             */
            public static create(properties?: lifecycle.QueryInstalledChaincodesResult.IInstalledChaincode): lifecycle.QueryInstalledChaincodesResult.InstalledChaincode;

            /**
             * Encodes the specified InstalledChaincode message. Does not implicitly {@link lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.verify|verify} messages.
             * @param message InstalledChaincode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lifecycle.QueryInstalledChaincodesResult.IInstalledChaincode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified InstalledChaincode message, length delimited. Does not implicitly {@link lifecycle.QueryInstalledChaincodesResult.InstalledChaincode.verify|verify} messages.
             * @param message InstalledChaincode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lifecycle.QueryInstalledChaincodesResult.IInstalledChaincode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an InstalledChaincode message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns InstalledChaincode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryInstalledChaincodesResult.InstalledChaincode;

            /**
             * Decodes an InstalledChaincode message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns InstalledChaincode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryInstalledChaincodesResult.InstalledChaincode;

            /**
             * Verifies an InstalledChaincode message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an InstalledChaincode message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns InstalledChaincode
             */
            public static fromObject(object: { [k: string]: any }): lifecycle.QueryInstalledChaincodesResult.InstalledChaincode;

            /**
             * Creates a plain object from an InstalledChaincode message. Also converts values to other types if specified.
             * @param message InstalledChaincode
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lifecycle.QueryInstalledChaincodesResult.InstalledChaincode, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this InstalledChaincode to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a References. */
        interface IReferences {

            /** References chaincodes */
            chaincodes?: (lifecycle.QueryInstalledChaincodesResult.IChaincode[]|null);
        }

        /** Represents a References. */
        class References implements IReferences {

            /**
             * Constructs a new References.
             * @param [properties] Properties to set
             */
            constructor(properties?: lifecycle.QueryInstalledChaincodesResult.IReferences);

            /** References chaincodes. */
            public chaincodes: lifecycle.QueryInstalledChaincodesResult.IChaincode[];

            /**
             * Creates a new References instance using the specified properties.
             * @param [properties] Properties to set
             * @returns References instance
             */
            public static create(properties?: lifecycle.QueryInstalledChaincodesResult.IReferences): lifecycle.QueryInstalledChaincodesResult.References;

            /**
             * Encodes the specified References message. Does not implicitly {@link lifecycle.QueryInstalledChaincodesResult.References.verify|verify} messages.
             * @param message References message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lifecycle.QueryInstalledChaincodesResult.IReferences, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified References message, length delimited. Does not implicitly {@link lifecycle.QueryInstalledChaincodesResult.References.verify|verify} messages.
             * @param message References message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lifecycle.QueryInstalledChaincodesResult.IReferences, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a References message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns References
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryInstalledChaincodesResult.References;

            /**
             * Decodes a References message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns References
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryInstalledChaincodesResult.References;

            /**
             * Verifies a References message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a References message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns References
             */
            public static fromObject(object: { [k: string]: any }): lifecycle.QueryInstalledChaincodesResult.References;

            /**
             * Creates a plain object from a References message. Also converts values to other types if specified.
             * @param message References
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lifecycle.QueryInstalledChaincodesResult.References, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this References to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Chaincode. */
        interface IChaincode {

            /** Chaincode name */
            name?: (string|null);

            /** Chaincode version */
            version?: (string|null);
        }

        /** Represents a Chaincode. */
        class Chaincode implements IChaincode {

            /**
             * Constructs a new Chaincode.
             * @param [properties] Properties to set
             */
            constructor(properties?: lifecycle.QueryInstalledChaincodesResult.IChaincode);

            /** Chaincode name. */
            public name: string;

            /** Chaincode version. */
            public version: string;

            /**
             * Creates a new Chaincode instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Chaincode instance
             */
            public static create(properties?: lifecycle.QueryInstalledChaincodesResult.IChaincode): lifecycle.QueryInstalledChaincodesResult.Chaincode;

            /**
             * Encodes the specified Chaincode message. Does not implicitly {@link lifecycle.QueryInstalledChaincodesResult.Chaincode.verify|verify} messages.
             * @param message Chaincode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lifecycle.QueryInstalledChaincodesResult.IChaincode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Chaincode message, length delimited. Does not implicitly {@link lifecycle.QueryInstalledChaincodesResult.Chaincode.verify|verify} messages.
             * @param message Chaincode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lifecycle.QueryInstalledChaincodesResult.IChaincode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Chaincode message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Chaincode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryInstalledChaincodesResult.Chaincode;

            /**
             * Decodes a Chaincode message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Chaincode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryInstalledChaincodesResult.Chaincode;

            /**
             * Verifies a Chaincode message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Chaincode message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Chaincode
             */
            public static fromObject(object: { [k: string]: any }): lifecycle.QueryInstalledChaincodesResult.Chaincode;

            /**
             * Creates a plain object from a Chaincode message. Also converts values to other types if specified.
             * @param message Chaincode
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lifecycle.QueryInstalledChaincodesResult.Chaincode, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Chaincode to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ApproveChaincodeDefinitionForMyOrgArgs. */
    interface IApproveChaincodeDefinitionForMyOrgArgs {

        /** ApproveChaincodeDefinitionForMyOrgArgs sequence */
        sequence?: (number|Long|null);

        /** ApproveChaincodeDefinitionForMyOrgArgs name */
        name?: (string|null);

        /** ApproveChaincodeDefinitionForMyOrgArgs version */
        version?: (string|null);

        /** ApproveChaincodeDefinitionForMyOrgArgs endorsementPlugin */
        endorsementPlugin?: (string|null);

        /** ApproveChaincodeDefinitionForMyOrgArgs validationPlugin */
        validationPlugin?: (string|null);

        /** ApproveChaincodeDefinitionForMyOrgArgs validationParameter */
        validationParameter?: (Uint8Array|null);

        /** ApproveChaincodeDefinitionForMyOrgArgs collections */
        collections?: (common.ICollectionConfigPackage|null);

        /** ApproveChaincodeDefinitionForMyOrgArgs initRequired */
        initRequired?: (boolean|null);

        /** ApproveChaincodeDefinitionForMyOrgArgs source */
        source?: (lifecycle.IChaincodeSource|null);
    }

    /** Represents an ApproveChaincodeDefinitionForMyOrgArgs. */
    class ApproveChaincodeDefinitionForMyOrgArgs implements IApproveChaincodeDefinitionForMyOrgArgs {

        /**
         * Constructs a new ApproveChaincodeDefinitionForMyOrgArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IApproveChaincodeDefinitionForMyOrgArgs);

        /** ApproveChaincodeDefinitionForMyOrgArgs sequence. */
        public sequence: (number|Long);

        /** ApproveChaincodeDefinitionForMyOrgArgs name. */
        public name: string;

        /** ApproveChaincodeDefinitionForMyOrgArgs version. */
        public version: string;

        /** ApproveChaincodeDefinitionForMyOrgArgs endorsementPlugin. */
        public endorsementPlugin: string;

        /** ApproveChaincodeDefinitionForMyOrgArgs validationPlugin. */
        public validationPlugin: string;

        /** ApproveChaincodeDefinitionForMyOrgArgs validationParameter. */
        public validationParameter: Uint8Array;

        /** ApproveChaincodeDefinitionForMyOrgArgs collections. */
        public collections?: (common.ICollectionConfigPackage|null);

        /** ApproveChaincodeDefinitionForMyOrgArgs initRequired. */
        public initRequired: boolean;

        /** ApproveChaincodeDefinitionForMyOrgArgs source. */
        public source?: (lifecycle.IChaincodeSource|null);

        /**
         * Creates a new ApproveChaincodeDefinitionForMyOrgArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApproveChaincodeDefinitionForMyOrgArgs instance
         */
        public static create(properties?: lifecycle.IApproveChaincodeDefinitionForMyOrgArgs): lifecycle.ApproveChaincodeDefinitionForMyOrgArgs;

        /**
         * Encodes the specified ApproveChaincodeDefinitionForMyOrgArgs message. Does not implicitly {@link lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.verify|verify} messages.
         * @param message ApproveChaincodeDefinitionForMyOrgArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IApproveChaincodeDefinitionForMyOrgArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApproveChaincodeDefinitionForMyOrgArgs message, length delimited. Does not implicitly {@link lifecycle.ApproveChaincodeDefinitionForMyOrgArgs.verify|verify} messages.
         * @param message ApproveChaincodeDefinitionForMyOrgArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IApproveChaincodeDefinitionForMyOrgArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApproveChaincodeDefinitionForMyOrgArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApproveChaincodeDefinitionForMyOrgArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.ApproveChaincodeDefinitionForMyOrgArgs;

        /**
         * Decodes an ApproveChaincodeDefinitionForMyOrgArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApproveChaincodeDefinitionForMyOrgArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.ApproveChaincodeDefinitionForMyOrgArgs;

        /**
         * Verifies an ApproveChaincodeDefinitionForMyOrgArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApproveChaincodeDefinitionForMyOrgArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApproveChaincodeDefinitionForMyOrgArgs
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.ApproveChaincodeDefinitionForMyOrgArgs;

        /**
         * Creates a plain object from an ApproveChaincodeDefinitionForMyOrgArgs message. Also converts values to other types if specified.
         * @param message ApproveChaincodeDefinitionForMyOrgArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.ApproveChaincodeDefinitionForMyOrgArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApproveChaincodeDefinitionForMyOrgArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeSource. */
    interface IChaincodeSource {

        /** ChaincodeSource unavailable */
        unavailable?: (lifecycle.ChaincodeSource.IUnavailable|null);

        /** ChaincodeSource localPackage */
        localPackage?: (lifecycle.ChaincodeSource.ILocal|null);
    }

    /** Represents a ChaincodeSource. */
    class ChaincodeSource implements IChaincodeSource {

        /**
         * Constructs a new ChaincodeSource.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IChaincodeSource);

        /** ChaincodeSource unavailable. */
        public unavailable?: (lifecycle.ChaincodeSource.IUnavailable|null);

        /** ChaincodeSource localPackage. */
        public localPackage?: (lifecycle.ChaincodeSource.ILocal|null);

        /** ChaincodeSource Type. */
        public Type?: ("unavailable"|"localPackage");

        /**
         * Creates a new ChaincodeSource instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeSource instance
         */
        public static create(properties?: lifecycle.IChaincodeSource): lifecycle.ChaincodeSource;

        /**
         * Encodes the specified ChaincodeSource message. Does not implicitly {@link lifecycle.ChaincodeSource.verify|verify} messages.
         * @param message ChaincodeSource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IChaincodeSource, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeSource message, length delimited. Does not implicitly {@link lifecycle.ChaincodeSource.verify|verify} messages.
         * @param message ChaincodeSource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IChaincodeSource, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeSource message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeSource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.ChaincodeSource;

        /**
         * Decodes a ChaincodeSource message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeSource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.ChaincodeSource;

        /**
         * Verifies a ChaincodeSource message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeSource message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeSource
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.ChaincodeSource;

        /**
         * Creates a plain object from a ChaincodeSource message. Also converts values to other types if specified.
         * @param message ChaincodeSource
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.ChaincodeSource, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeSource to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ChaincodeSource {

        /** Properties of an Unavailable. */
        interface IUnavailable {
        }

        /** Represents an Unavailable. */
        class Unavailable implements IUnavailable {

            /**
             * Constructs a new Unavailable.
             * @param [properties] Properties to set
             */
            constructor(properties?: lifecycle.ChaincodeSource.IUnavailable);

            /**
             * Creates a new Unavailable instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Unavailable instance
             */
            public static create(properties?: lifecycle.ChaincodeSource.IUnavailable): lifecycle.ChaincodeSource.Unavailable;

            /**
             * Encodes the specified Unavailable message. Does not implicitly {@link lifecycle.ChaincodeSource.Unavailable.verify|verify} messages.
             * @param message Unavailable message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lifecycle.ChaincodeSource.IUnavailable, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Unavailable message, length delimited. Does not implicitly {@link lifecycle.ChaincodeSource.Unavailable.verify|verify} messages.
             * @param message Unavailable message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lifecycle.ChaincodeSource.IUnavailable, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Unavailable message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Unavailable
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.ChaincodeSource.Unavailable;

            /**
             * Decodes an Unavailable message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Unavailable
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.ChaincodeSource.Unavailable;

            /**
             * Verifies an Unavailable message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Unavailable message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Unavailable
             */
            public static fromObject(object: { [k: string]: any }): lifecycle.ChaincodeSource.Unavailable;

            /**
             * Creates a plain object from an Unavailable message. Also converts values to other types if specified.
             * @param message Unavailable
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lifecycle.ChaincodeSource.Unavailable, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Unavailable to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Local. */
        interface ILocal {

            /** Local packageId */
            packageId?: (string|null);
        }

        /** Represents a Local. */
        class Local implements ILocal {

            /**
             * Constructs a new Local.
             * @param [properties] Properties to set
             */
            constructor(properties?: lifecycle.ChaincodeSource.ILocal);

            /** Local packageId. */
            public packageId: string;

            /**
             * Creates a new Local instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Local instance
             */
            public static create(properties?: lifecycle.ChaincodeSource.ILocal): lifecycle.ChaincodeSource.Local;

            /**
             * Encodes the specified Local message. Does not implicitly {@link lifecycle.ChaincodeSource.Local.verify|verify} messages.
             * @param message Local message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lifecycle.ChaincodeSource.ILocal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Local message, length delimited. Does not implicitly {@link lifecycle.ChaincodeSource.Local.verify|verify} messages.
             * @param message Local message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lifecycle.ChaincodeSource.ILocal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Local message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Local
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.ChaincodeSource.Local;

            /**
             * Decodes a Local message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Local
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.ChaincodeSource.Local;

            /**
             * Verifies a Local message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Local message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Local
             */
            public static fromObject(object: { [k: string]: any }): lifecycle.ChaincodeSource.Local;

            /**
             * Creates a plain object from a Local message. Also converts values to other types if specified.
             * @param message Local
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lifecycle.ChaincodeSource.Local, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Local to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ApproveChaincodeDefinitionForMyOrgResult. */
    interface IApproveChaincodeDefinitionForMyOrgResult {
    }

    /** Represents an ApproveChaincodeDefinitionForMyOrgResult. */
    class ApproveChaincodeDefinitionForMyOrgResult implements IApproveChaincodeDefinitionForMyOrgResult {

        /**
         * Constructs a new ApproveChaincodeDefinitionForMyOrgResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IApproveChaincodeDefinitionForMyOrgResult);

        /**
         * Creates a new ApproveChaincodeDefinitionForMyOrgResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApproveChaincodeDefinitionForMyOrgResult instance
         */
        public static create(properties?: lifecycle.IApproveChaincodeDefinitionForMyOrgResult): lifecycle.ApproveChaincodeDefinitionForMyOrgResult;

        /**
         * Encodes the specified ApproveChaincodeDefinitionForMyOrgResult message. Does not implicitly {@link lifecycle.ApproveChaincodeDefinitionForMyOrgResult.verify|verify} messages.
         * @param message ApproveChaincodeDefinitionForMyOrgResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IApproveChaincodeDefinitionForMyOrgResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApproveChaincodeDefinitionForMyOrgResult message, length delimited. Does not implicitly {@link lifecycle.ApproveChaincodeDefinitionForMyOrgResult.verify|verify} messages.
         * @param message ApproveChaincodeDefinitionForMyOrgResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IApproveChaincodeDefinitionForMyOrgResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApproveChaincodeDefinitionForMyOrgResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApproveChaincodeDefinitionForMyOrgResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.ApproveChaincodeDefinitionForMyOrgResult;

        /**
         * Decodes an ApproveChaincodeDefinitionForMyOrgResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApproveChaincodeDefinitionForMyOrgResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.ApproveChaincodeDefinitionForMyOrgResult;

        /**
         * Verifies an ApproveChaincodeDefinitionForMyOrgResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApproveChaincodeDefinitionForMyOrgResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApproveChaincodeDefinitionForMyOrgResult
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.ApproveChaincodeDefinitionForMyOrgResult;

        /**
         * Creates a plain object from an ApproveChaincodeDefinitionForMyOrgResult message. Also converts values to other types if specified.
         * @param message ApproveChaincodeDefinitionForMyOrgResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.ApproveChaincodeDefinitionForMyOrgResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApproveChaincodeDefinitionForMyOrgResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CommitChaincodeDefinitionArgs. */
    interface ICommitChaincodeDefinitionArgs {

        /** CommitChaincodeDefinitionArgs sequence */
        sequence?: (number|Long|null);

        /** CommitChaincodeDefinitionArgs name */
        name?: (string|null);

        /** CommitChaincodeDefinitionArgs version */
        version?: (string|null);

        /** CommitChaincodeDefinitionArgs endorsementPlugin */
        endorsementPlugin?: (string|null);

        /** CommitChaincodeDefinitionArgs validationPlugin */
        validationPlugin?: (string|null);

        /** CommitChaincodeDefinitionArgs validationParameter */
        validationParameter?: (Uint8Array|null);

        /** CommitChaincodeDefinitionArgs collections */
        collections?: (common.ICollectionConfigPackage|null);

        /** CommitChaincodeDefinitionArgs initRequired */
        initRequired?: (boolean|null);
    }

    /** Represents a CommitChaincodeDefinitionArgs. */
    class CommitChaincodeDefinitionArgs implements ICommitChaincodeDefinitionArgs {

        /**
         * Constructs a new CommitChaincodeDefinitionArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.ICommitChaincodeDefinitionArgs);

        /** CommitChaincodeDefinitionArgs sequence. */
        public sequence: (number|Long);

        /** CommitChaincodeDefinitionArgs name. */
        public name: string;

        /** CommitChaincodeDefinitionArgs version. */
        public version: string;

        /** CommitChaincodeDefinitionArgs endorsementPlugin. */
        public endorsementPlugin: string;

        /** CommitChaincodeDefinitionArgs validationPlugin. */
        public validationPlugin: string;

        /** CommitChaincodeDefinitionArgs validationParameter. */
        public validationParameter: Uint8Array;

        /** CommitChaincodeDefinitionArgs collections. */
        public collections?: (common.ICollectionConfigPackage|null);

        /** CommitChaincodeDefinitionArgs initRequired. */
        public initRequired: boolean;

        /**
         * Creates a new CommitChaincodeDefinitionArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CommitChaincodeDefinitionArgs instance
         */
        public static create(properties?: lifecycle.ICommitChaincodeDefinitionArgs): lifecycle.CommitChaincodeDefinitionArgs;

        /**
         * Encodes the specified CommitChaincodeDefinitionArgs message. Does not implicitly {@link lifecycle.CommitChaincodeDefinitionArgs.verify|verify} messages.
         * @param message CommitChaincodeDefinitionArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.ICommitChaincodeDefinitionArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CommitChaincodeDefinitionArgs message, length delimited. Does not implicitly {@link lifecycle.CommitChaincodeDefinitionArgs.verify|verify} messages.
         * @param message CommitChaincodeDefinitionArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.ICommitChaincodeDefinitionArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CommitChaincodeDefinitionArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommitChaincodeDefinitionArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.CommitChaincodeDefinitionArgs;

        /**
         * Decodes a CommitChaincodeDefinitionArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommitChaincodeDefinitionArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.CommitChaincodeDefinitionArgs;

        /**
         * Verifies a CommitChaincodeDefinitionArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CommitChaincodeDefinitionArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CommitChaincodeDefinitionArgs
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.CommitChaincodeDefinitionArgs;

        /**
         * Creates a plain object from a CommitChaincodeDefinitionArgs message. Also converts values to other types if specified.
         * @param message CommitChaincodeDefinitionArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.CommitChaincodeDefinitionArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CommitChaincodeDefinitionArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CommitChaincodeDefinitionResult. */
    interface ICommitChaincodeDefinitionResult {
    }

    /** Represents a CommitChaincodeDefinitionResult. */
    class CommitChaincodeDefinitionResult implements ICommitChaincodeDefinitionResult {

        /**
         * Constructs a new CommitChaincodeDefinitionResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.ICommitChaincodeDefinitionResult);

        /**
         * Creates a new CommitChaincodeDefinitionResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CommitChaincodeDefinitionResult instance
         */
        public static create(properties?: lifecycle.ICommitChaincodeDefinitionResult): lifecycle.CommitChaincodeDefinitionResult;

        /**
         * Encodes the specified CommitChaincodeDefinitionResult message. Does not implicitly {@link lifecycle.CommitChaincodeDefinitionResult.verify|verify} messages.
         * @param message CommitChaincodeDefinitionResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.ICommitChaincodeDefinitionResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CommitChaincodeDefinitionResult message, length delimited. Does not implicitly {@link lifecycle.CommitChaincodeDefinitionResult.verify|verify} messages.
         * @param message CommitChaincodeDefinitionResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.ICommitChaincodeDefinitionResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CommitChaincodeDefinitionResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommitChaincodeDefinitionResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.CommitChaincodeDefinitionResult;

        /**
         * Decodes a CommitChaincodeDefinitionResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommitChaincodeDefinitionResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.CommitChaincodeDefinitionResult;

        /**
         * Verifies a CommitChaincodeDefinitionResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CommitChaincodeDefinitionResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CommitChaincodeDefinitionResult
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.CommitChaincodeDefinitionResult;

        /**
         * Creates a plain object from a CommitChaincodeDefinitionResult message. Also converts values to other types if specified.
         * @param message CommitChaincodeDefinitionResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.CommitChaincodeDefinitionResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CommitChaincodeDefinitionResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CheckCommitReadinessArgs. */
    interface ICheckCommitReadinessArgs {

        /** CheckCommitReadinessArgs sequence */
        sequence?: (number|Long|null);

        /** CheckCommitReadinessArgs name */
        name?: (string|null);

        /** CheckCommitReadinessArgs version */
        version?: (string|null);

        /** CheckCommitReadinessArgs endorsementPlugin */
        endorsementPlugin?: (string|null);

        /** CheckCommitReadinessArgs validationPlugin */
        validationPlugin?: (string|null);

        /** CheckCommitReadinessArgs validationParameter */
        validationParameter?: (Uint8Array|null);

        /** CheckCommitReadinessArgs collections */
        collections?: (common.ICollectionConfigPackage|null);

        /** CheckCommitReadinessArgs initRequired */
        initRequired?: (boolean|null);
    }

    /** Represents a CheckCommitReadinessArgs. */
    class CheckCommitReadinessArgs implements ICheckCommitReadinessArgs {

        /**
         * Constructs a new CheckCommitReadinessArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.ICheckCommitReadinessArgs);

        /** CheckCommitReadinessArgs sequence. */
        public sequence: (number|Long);

        /** CheckCommitReadinessArgs name. */
        public name: string;

        /** CheckCommitReadinessArgs version. */
        public version: string;

        /** CheckCommitReadinessArgs endorsementPlugin. */
        public endorsementPlugin: string;

        /** CheckCommitReadinessArgs validationPlugin. */
        public validationPlugin: string;

        /** CheckCommitReadinessArgs validationParameter. */
        public validationParameter: Uint8Array;

        /** CheckCommitReadinessArgs collections. */
        public collections?: (common.ICollectionConfigPackage|null);

        /** CheckCommitReadinessArgs initRequired. */
        public initRequired: boolean;

        /**
         * Creates a new CheckCommitReadinessArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheckCommitReadinessArgs instance
         */
        public static create(properties?: lifecycle.ICheckCommitReadinessArgs): lifecycle.CheckCommitReadinessArgs;

        /**
         * Encodes the specified CheckCommitReadinessArgs message. Does not implicitly {@link lifecycle.CheckCommitReadinessArgs.verify|verify} messages.
         * @param message CheckCommitReadinessArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.ICheckCommitReadinessArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheckCommitReadinessArgs message, length delimited. Does not implicitly {@link lifecycle.CheckCommitReadinessArgs.verify|verify} messages.
         * @param message CheckCommitReadinessArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.ICheckCommitReadinessArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheckCommitReadinessArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckCommitReadinessArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.CheckCommitReadinessArgs;

        /**
         * Decodes a CheckCommitReadinessArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheckCommitReadinessArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.CheckCommitReadinessArgs;

        /**
         * Verifies a CheckCommitReadinessArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheckCommitReadinessArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheckCommitReadinessArgs
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.CheckCommitReadinessArgs;

        /**
         * Creates a plain object from a CheckCommitReadinessArgs message. Also converts values to other types if specified.
         * @param message CheckCommitReadinessArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.CheckCommitReadinessArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheckCommitReadinessArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CheckCommitReadinessResult. */
    interface ICheckCommitReadinessResult {

        /** CheckCommitReadinessResult approvals */
        approvals?: ({ [k: string]: boolean }|null);
    }

    /** Represents a CheckCommitReadinessResult. */
    class CheckCommitReadinessResult implements ICheckCommitReadinessResult {

        /**
         * Constructs a new CheckCommitReadinessResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.ICheckCommitReadinessResult);

        /** CheckCommitReadinessResult approvals. */
        public approvals: { [k: string]: boolean };

        /**
         * Creates a new CheckCommitReadinessResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheckCommitReadinessResult instance
         */
        public static create(properties?: lifecycle.ICheckCommitReadinessResult): lifecycle.CheckCommitReadinessResult;

        /**
         * Encodes the specified CheckCommitReadinessResult message. Does not implicitly {@link lifecycle.CheckCommitReadinessResult.verify|verify} messages.
         * @param message CheckCommitReadinessResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.ICheckCommitReadinessResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheckCommitReadinessResult message, length delimited. Does not implicitly {@link lifecycle.CheckCommitReadinessResult.verify|verify} messages.
         * @param message CheckCommitReadinessResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.ICheckCommitReadinessResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheckCommitReadinessResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckCommitReadinessResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.CheckCommitReadinessResult;

        /**
         * Decodes a CheckCommitReadinessResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheckCommitReadinessResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.CheckCommitReadinessResult;

        /**
         * Verifies a CheckCommitReadinessResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheckCommitReadinessResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheckCommitReadinessResult
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.CheckCommitReadinessResult;

        /**
         * Creates a plain object from a CheckCommitReadinessResult message. Also converts values to other types if specified.
         * @param message CheckCommitReadinessResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.CheckCommitReadinessResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheckCommitReadinessResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryChaincodeDefinitionArgs. */
    interface IQueryChaincodeDefinitionArgs {

        /** QueryChaincodeDefinitionArgs name */
        name?: (string|null);
    }

    /** Represents a QueryChaincodeDefinitionArgs. */
    class QueryChaincodeDefinitionArgs implements IQueryChaincodeDefinitionArgs {

        /**
         * Constructs a new QueryChaincodeDefinitionArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IQueryChaincodeDefinitionArgs);

        /** QueryChaincodeDefinitionArgs name. */
        public name: string;

        /**
         * Creates a new QueryChaincodeDefinitionArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryChaincodeDefinitionArgs instance
         */
        public static create(properties?: lifecycle.IQueryChaincodeDefinitionArgs): lifecycle.QueryChaincodeDefinitionArgs;

        /**
         * Encodes the specified QueryChaincodeDefinitionArgs message. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionArgs.verify|verify} messages.
         * @param message QueryChaincodeDefinitionArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IQueryChaincodeDefinitionArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryChaincodeDefinitionArgs message, length delimited. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionArgs.verify|verify} messages.
         * @param message QueryChaincodeDefinitionArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IQueryChaincodeDefinitionArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryChaincodeDefinitionArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryChaincodeDefinitionArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryChaincodeDefinitionArgs;

        /**
         * Decodes a QueryChaincodeDefinitionArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryChaincodeDefinitionArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryChaincodeDefinitionArgs;

        /**
         * Verifies a QueryChaincodeDefinitionArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryChaincodeDefinitionArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryChaincodeDefinitionArgs
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.QueryChaincodeDefinitionArgs;

        /**
         * Creates a plain object from a QueryChaincodeDefinitionArgs message. Also converts values to other types if specified.
         * @param message QueryChaincodeDefinitionArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.QueryChaincodeDefinitionArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryChaincodeDefinitionArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryChaincodeDefinitionResult. */
    interface IQueryChaincodeDefinitionResult {

        /** QueryChaincodeDefinitionResult sequence */
        sequence?: (number|Long|null);

        /** QueryChaincodeDefinitionResult version */
        version?: (string|null);

        /** QueryChaincodeDefinitionResult endorsementPlugin */
        endorsementPlugin?: (string|null);

        /** QueryChaincodeDefinitionResult validationPlugin */
        validationPlugin?: (string|null);

        /** QueryChaincodeDefinitionResult validationParameter */
        validationParameter?: (Uint8Array|null);

        /** QueryChaincodeDefinitionResult collections */
        collections?: (common.ICollectionConfigPackage|null);

        /** QueryChaincodeDefinitionResult initRequired */
        initRequired?: (boolean|null);

        /** QueryChaincodeDefinitionResult approvals */
        approvals?: ({ [k: string]: boolean }|null);
    }

    /** Represents a QueryChaincodeDefinitionResult. */
    class QueryChaincodeDefinitionResult implements IQueryChaincodeDefinitionResult {

        /**
         * Constructs a new QueryChaincodeDefinitionResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IQueryChaincodeDefinitionResult);

        /** QueryChaincodeDefinitionResult sequence. */
        public sequence: (number|Long);

        /** QueryChaincodeDefinitionResult version. */
        public version: string;

        /** QueryChaincodeDefinitionResult endorsementPlugin. */
        public endorsementPlugin: string;

        /** QueryChaincodeDefinitionResult validationPlugin. */
        public validationPlugin: string;

        /** QueryChaincodeDefinitionResult validationParameter. */
        public validationParameter: Uint8Array;

        /** QueryChaincodeDefinitionResult collections. */
        public collections?: (common.ICollectionConfigPackage|null);

        /** QueryChaincodeDefinitionResult initRequired. */
        public initRequired: boolean;

        /** QueryChaincodeDefinitionResult approvals. */
        public approvals: { [k: string]: boolean };

        /**
         * Creates a new QueryChaincodeDefinitionResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryChaincodeDefinitionResult instance
         */
        public static create(properties?: lifecycle.IQueryChaincodeDefinitionResult): lifecycle.QueryChaincodeDefinitionResult;

        /**
         * Encodes the specified QueryChaincodeDefinitionResult message. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionResult.verify|verify} messages.
         * @param message QueryChaincodeDefinitionResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IQueryChaincodeDefinitionResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryChaincodeDefinitionResult message, length delimited. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionResult.verify|verify} messages.
         * @param message QueryChaincodeDefinitionResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IQueryChaincodeDefinitionResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryChaincodeDefinitionResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryChaincodeDefinitionResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryChaincodeDefinitionResult;

        /**
         * Decodes a QueryChaincodeDefinitionResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryChaincodeDefinitionResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryChaincodeDefinitionResult;

        /**
         * Verifies a QueryChaincodeDefinitionResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryChaincodeDefinitionResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryChaincodeDefinitionResult
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.QueryChaincodeDefinitionResult;

        /**
         * Creates a plain object from a QueryChaincodeDefinitionResult message. Also converts values to other types if specified.
         * @param message QueryChaincodeDefinitionResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.QueryChaincodeDefinitionResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryChaincodeDefinitionResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryChaincodeDefinitionsArgs. */
    interface IQueryChaincodeDefinitionsArgs {
    }

    /** Represents a QueryChaincodeDefinitionsArgs. */
    class QueryChaincodeDefinitionsArgs implements IQueryChaincodeDefinitionsArgs {

        /**
         * Constructs a new QueryChaincodeDefinitionsArgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IQueryChaincodeDefinitionsArgs);

        /**
         * Creates a new QueryChaincodeDefinitionsArgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryChaincodeDefinitionsArgs instance
         */
        public static create(properties?: lifecycle.IQueryChaincodeDefinitionsArgs): lifecycle.QueryChaincodeDefinitionsArgs;

        /**
         * Encodes the specified QueryChaincodeDefinitionsArgs message. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionsArgs.verify|verify} messages.
         * @param message QueryChaincodeDefinitionsArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IQueryChaincodeDefinitionsArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryChaincodeDefinitionsArgs message, length delimited. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionsArgs.verify|verify} messages.
         * @param message QueryChaincodeDefinitionsArgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IQueryChaincodeDefinitionsArgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryChaincodeDefinitionsArgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryChaincodeDefinitionsArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryChaincodeDefinitionsArgs;

        /**
         * Decodes a QueryChaincodeDefinitionsArgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryChaincodeDefinitionsArgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryChaincodeDefinitionsArgs;

        /**
         * Verifies a QueryChaincodeDefinitionsArgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryChaincodeDefinitionsArgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryChaincodeDefinitionsArgs
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.QueryChaincodeDefinitionsArgs;

        /**
         * Creates a plain object from a QueryChaincodeDefinitionsArgs message. Also converts values to other types if specified.
         * @param message QueryChaincodeDefinitionsArgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.QueryChaincodeDefinitionsArgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryChaincodeDefinitionsArgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryChaincodeDefinitionsResult. */
    interface IQueryChaincodeDefinitionsResult {

        /** QueryChaincodeDefinitionsResult chaincodeDefinitions */
        chaincodeDefinitions?: (lifecycle.QueryChaincodeDefinitionsResult.IChaincodeDefinition[]|null);
    }

    /** Represents a QueryChaincodeDefinitionsResult. */
    class QueryChaincodeDefinitionsResult implements IQueryChaincodeDefinitionsResult {

        /**
         * Constructs a new QueryChaincodeDefinitionsResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IQueryChaincodeDefinitionsResult);

        /** QueryChaincodeDefinitionsResult chaincodeDefinitions. */
        public chaincodeDefinitions: lifecycle.QueryChaincodeDefinitionsResult.IChaincodeDefinition[];

        /**
         * Creates a new QueryChaincodeDefinitionsResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryChaincodeDefinitionsResult instance
         */
        public static create(properties?: lifecycle.IQueryChaincodeDefinitionsResult): lifecycle.QueryChaincodeDefinitionsResult;

        /**
         * Encodes the specified QueryChaincodeDefinitionsResult message. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionsResult.verify|verify} messages.
         * @param message QueryChaincodeDefinitionsResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IQueryChaincodeDefinitionsResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryChaincodeDefinitionsResult message, length delimited. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionsResult.verify|verify} messages.
         * @param message QueryChaincodeDefinitionsResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IQueryChaincodeDefinitionsResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryChaincodeDefinitionsResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryChaincodeDefinitionsResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryChaincodeDefinitionsResult;

        /**
         * Decodes a QueryChaincodeDefinitionsResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryChaincodeDefinitionsResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryChaincodeDefinitionsResult;

        /**
         * Verifies a QueryChaincodeDefinitionsResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryChaincodeDefinitionsResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryChaincodeDefinitionsResult
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.QueryChaincodeDefinitionsResult;

        /**
         * Creates a plain object from a QueryChaincodeDefinitionsResult message. Also converts values to other types if specified.
         * @param message QueryChaincodeDefinitionsResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.QueryChaincodeDefinitionsResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryChaincodeDefinitionsResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace QueryChaincodeDefinitionsResult {

        /** Properties of a ChaincodeDefinition. */
        interface IChaincodeDefinition {

            /** ChaincodeDefinition name */
            name?: (string|null);

            /** ChaincodeDefinition sequence */
            sequence?: (number|Long|null);

            /** ChaincodeDefinition version */
            version?: (string|null);

            /** ChaincodeDefinition endorsementPlugin */
            endorsementPlugin?: (string|null);

            /** ChaincodeDefinition validationPlugin */
            validationPlugin?: (string|null);

            /** ChaincodeDefinition validationParameter */
            validationParameter?: (Uint8Array|null);

            /** ChaincodeDefinition collections */
            collections?: (common.ICollectionConfigPackage|null);

            /** ChaincodeDefinition initRequired */
            initRequired?: (boolean|null);
        }

        /** Represents a ChaincodeDefinition. */
        class ChaincodeDefinition implements IChaincodeDefinition {

            /**
             * Constructs a new ChaincodeDefinition.
             * @param [properties] Properties to set
             */
            constructor(properties?: lifecycle.QueryChaincodeDefinitionsResult.IChaincodeDefinition);

            /** ChaincodeDefinition name. */
            public name: string;

            /** ChaincodeDefinition sequence. */
            public sequence: (number|Long);

            /** ChaincodeDefinition version. */
            public version: string;

            /** ChaincodeDefinition endorsementPlugin. */
            public endorsementPlugin: string;

            /** ChaincodeDefinition validationPlugin. */
            public validationPlugin: string;

            /** ChaincodeDefinition validationParameter. */
            public validationParameter: Uint8Array;

            /** ChaincodeDefinition collections. */
            public collections?: (common.ICollectionConfigPackage|null);

            /** ChaincodeDefinition initRequired. */
            public initRequired: boolean;

            /**
             * Creates a new ChaincodeDefinition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChaincodeDefinition instance
             */
            public static create(properties?: lifecycle.QueryChaincodeDefinitionsResult.IChaincodeDefinition): lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition;

            /**
             * Encodes the specified ChaincodeDefinition message. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.verify|verify} messages.
             * @param message ChaincodeDefinition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lifecycle.QueryChaincodeDefinitionsResult.IChaincodeDefinition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChaincodeDefinition message, length delimited. Does not implicitly {@link lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition.verify|verify} messages.
             * @param message ChaincodeDefinition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lifecycle.QueryChaincodeDefinitionsResult.IChaincodeDefinition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChaincodeDefinition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChaincodeDefinition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition;

            /**
             * Decodes a ChaincodeDefinition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChaincodeDefinition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition;

            /**
             * Verifies a ChaincodeDefinition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChaincodeDefinition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChaincodeDefinition
             */
            public static fromObject(object: { [k: string]: any }): lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition;

            /**
             * Creates a plain object from a ChaincodeDefinition message. Also converts values to other types if specified.
             * @param message ChaincodeDefinition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lifecycle.QueryChaincodeDefinitionsResult.ChaincodeDefinition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChaincodeDefinition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a ChaincodeEndorsementInfo. */
    interface IChaincodeEndorsementInfo {

        /** ChaincodeEndorsementInfo version */
        version?: (string|null);

        /** ChaincodeEndorsementInfo initRequired */
        initRequired?: (boolean|null);

        /** ChaincodeEndorsementInfo endorsementPlugin */
        endorsementPlugin?: (string|null);
    }

    /** Represents a ChaincodeEndorsementInfo. */
    class ChaincodeEndorsementInfo implements IChaincodeEndorsementInfo {

        /**
         * Constructs a new ChaincodeEndorsementInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IChaincodeEndorsementInfo);

        /** ChaincodeEndorsementInfo version. */
        public version: string;

        /** ChaincodeEndorsementInfo initRequired. */
        public initRequired: boolean;

        /** ChaincodeEndorsementInfo endorsementPlugin. */
        public endorsementPlugin: string;

        /**
         * Creates a new ChaincodeEndorsementInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeEndorsementInfo instance
         */
        public static create(properties?: lifecycle.IChaincodeEndorsementInfo): lifecycle.ChaincodeEndorsementInfo;

        /**
         * Encodes the specified ChaincodeEndorsementInfo message. Does not implicitly {@link lifecycle.ChaincodeEndorsementInfo.verify|verify} messages.
         * @param message ChaincodeEndorsementInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IChaincodeEndorsementInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeEndorsementInfo message, length delimited. Does not implicitly {@link lifecycle.ChaincodeEndorsementInfo.verify|verify} messages.
         * @param message ChaincodeEndorsementInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IChaincodeEndorsementInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeEndorsementInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeEndorsementInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.ChaincodeEndorsementInfo;

        /**
         * Decodes a ChaincodeEndorsementInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeEndorsementInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.ChaincodeEndorsementInfo;

        /**
         * Verifies a ChaincodeEndorsementInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeEndorsementInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeEndorsementInfo
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.ChaincodeEndorsementInfo;

        /**
         * Creates a plain object from a ChaincodeEndorsementInfo message. Also converts values to other types if specified.
         * @param message ChaincodeEndorsementInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.ChaincodeEndorsementInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeEndorsementInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChaincodeValidationInfo. */
    interface IChaincodeValidationInfo {

        /** ChaincodeValidationInfo validationPlugin */
        validationPlugin?: (string|null);

        /** ChaincodeValidationInfo validationParameter */
        validationParameter?: (Uint8Array|null);
    }

    /** Represents a ChaincodeValidationInfo. */
    class ChaincodeValidationInfo implements IChaincodeValidationInfo {

        /**
         * Constructs a new ChaincodeValidationInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: lifecycle.IChaincodeValidationInfo);

        /** ChaincodeValidationInfo validationPlugin. */
        public validationPlugin: string;

        /** ChaincodeValidationInfo validationParameter. */
        public validationParameter: Uint8Array;

        /**
         * Creates a new ChaincodeValidationInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChaincodeValidationInfo instance
         */
        public static create(properties?: lifecycle.IChaincodeValidationInfo): lifecycle.ChaincodeValidationInfo;

        /**
         * Encodes the specified ChaincodeValidationInfo message. Does not implicitly {@link lifecycle.ChaincodeValidationInfo.verify|verify} messages.
         * @param message ChaincodeValidationInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: lifecycle.IChaincodeValidationInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChaincodeValidationInfo message, length delimited. Does not implicitly {@link lifecycle.ChaincodeValidationInfo.verify|verify} messages.
         * @param message ChaincodeValidationInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: lifecycle.IChaincodeValidationInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChaincodeValidationInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChaincodeValidationInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): lifecycle.ChaincodeValidationInfo;

        /**
         * Decodes a ChaincodeValidationInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChaincodeValidationInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): lifecycle.ChaincodeValidationInfo;

        /**
         * Verifies a ChaincodeValidationInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChaincodeValidationInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChaincodeValidationInfo
         */
        public static fromObject(object: { [k: string]: any }): lifecycle.ChaincodeValidationInfo;

        /**
         * Creates a plain object from a ChaincodeValidationInfo message. Also converts values to other types if specified.
         * @param message ChaincodeValidationInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lifecycle.ChaincodeValidationInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChaincodeValidationInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace kvrwset. */
export namespace kvrwset {

    /** Properties of a KVRWSet. */
    interface IKVRWSet {

        /** KVRWSet reads */
        reads?: (kvrwset.IKVRead[]|null);

        /** KVRWSet rangeQueriesInfo */
        rangeQueriesInfo?: (kvrwset.IRangeQueryInfo[]|null);

        /** KVRWSet writes */
        writes?: (kvrwset.IKVWrite[]|null);

        /** KVRWSet metadataWrites */
        metadataWrites?: (kvrwset.IKVMetadataWrite[]|null);
    }

    /** Represents a KVRWSet. */
    class KVRWSet implements IKVRWSet {

        /**
         * Constructs a new KVRWSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IKVRWSet);

        /** KVRWSet reads. */
        public reads: kvrwset.IKVRead[];

        /** KVRWSet rangeQueriesInfo. */
        public rangeQueriesInfo: kvrwset.IRangeQueryInfo[];

        /** KVRWSet writes. */
        public writes: kvrwset.IKVWrite[];

        /** KVRWSet metadataWrites. */
        public metadataWrites: kvrwset.IKVMetadataWrite[];

        /**
         * Creates a new KVRWSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KVRWSet instance
         */
        public static create(properties?: kvrwset.IKVRWSet): kvrwset.KVRWSet;

        /**
         * Encodes the specified KVRWSet message. Does not implicitly {@link kvrwset.KVRWSet.verify|verify} messages.
         * @param message KVRWSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IKVRWSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KVRWSet message, length delimited. Does not implicitly {@link kvrwset.KVRWSet.verify|verify} messages.
         * @param message KVRWSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IKVRWSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KVRWSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KVRWSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.KVRWSet;

        /**
         * Decodes a KVRWSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KVRWSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.KVRWSet;

        /**
         * Verifies a KVRWSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KVRWSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KVRWSet
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.KVRWSet;

        /**
         * Creates a plain object from a KVRWSet message. Also converts values to other types if specified.
         * @param message KVRWSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.KVRWSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KVRWSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HashedRWSet. */
    interface IHashedRWSet {

        /** HashedRWSet hashedReads */
        hashedReads?: (kvrwset.IKVReadHash[]|null);

        /** HashedRWSet hashedWrites */
        hashedWrites?: (kvrwset.IKVWriteHash[]|null);

        /** HashedRWSet metadataWrites */
        metadataWrites?: (kvrwset.IKVMetadataWriteHash[]|null);
    }

    /** Represents a HashedRWSet. */
    class HashedRWSet implements IHashedRWSet {

        /**
         * Constructs a new HashedRWSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IHashedRWSet);

        /** HashedRWSet hashedReads. */
        public hashedReads: kvrwset.IKVReadHash[];

        /** HashedRWSet hashedWrites. */
        public hashedWrites: kvrwset.IKVWriteHash[];

        /** HashedRWSet metadataWrites. */
        public metadataWrites: kvrwset.IKVMetadataWriteHash[];

        /**
         * Creates a new HashedRWSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HashedRWSet instance
         */
        public static create(properties?: kvrwset.IHashedRWSet): kvrwset.HashedRWSet;

        /**
         * Encodes the specified HashedRWSet message. Does not implicitly {@link kvrwset.HashedRWSet.verify|verify} messages.
         * @param message HashedRWSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IHashedRWSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HashedRWSet message, length delimited. Does not implicitly {@link kvrwset.HashedRWSet.verify|verify} messages.
         * @param message HashedRWSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IHashedRWSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HashedRWSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HashedRWSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.HashedRWSet;

        /**
         * Decodes a HashedRWSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HashedRWSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.HashedRWSet;

        /**
         * Verifies a HashedRWSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HashedRWSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HashedRWSet
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.HashedRWSet;

        /**
         * Creates a plain object from a HashedRWSet message. Also converts values to other types if specified.
         * @param message HashedRWSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.HashedRWSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HashedRWSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KVRead. */
    interface IKVRead {

        /** KVRead key */
        key?: (string|null);

        /** KVRead version */
        version?: (kvrwset.IVersion|null);
    }

    /** Represents a KVRead. */
    class KVRead implements IKVRead {

        /**
         * Constructs a new KVRead.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IKVRead);

        /** KVRead key. */
        public key: string;

        /** KVRead version. */
        public version?: (kvrwset.IVersion|null);

        /**
         * Creates a new KVRead instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KVRead instance
         */
        public static create(properties?: kvrwset.IKVRead): kvrwset.KVRead;

        /**
         * Encodes the specified KVRead message. Does not implicitly {@link kvrwset.KVRead.verify|verify} messages.
         * @param message KVRead message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IKVRead, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KVRead message, length delimited. Does not implicitly {@link kvrwset.KVRead.verify|verify} messages.
         * @param message KVRead message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IKVRead, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KVRead message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KVRead
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.KVRead;

        /**
         * Decodes a KVRead message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KVRead
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.KVRead;

        /**
         * Verifies a KVRead message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KVRead message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KVRead
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.KVRead;

        /**
         * Creates a plain object from a KVRead message. Also converts values to other types if specified.
         * @param message KVRead
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.KVRead, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KVRead to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KVWrite. */
    interface IKVWrite {

        /** KVWrite key */
        key?: (string|null);

        /** KVWrite isDelete */
        isDelete?: (boolean|null);

        /** KVWrite value */
        value?: (Uint8Array|null);
    }

    /** Represents a KVWrite. */
    class KVWrite implements IKVWrite {

        /**
         * Constructs a new KVWrite.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IKVWrite);

        /** KVWrite key. */
        public key: string;

        /** KVWrite isDelete. */
        public isDelete: boolean;

        /** KVWrite value. */
        public value: Uint8Array;

        /**
         * Creates a new KVWrite instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KVWrite instance
         */
        public static create(properties?: kvrwset.IKVWrite): kvrwset.KVWrite;

        /**
         * Encodes the specified KVWrite message. Does not implicitly {@link kvrwset.KVWrite.verify|verify} messages.
         * @param message KVWrite message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IKVWrite, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KVWrite message, length delimited. Does not implicitly {@link kvrwset.KVWrite.verify|verify} messages.
         * @param message KVWrite message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IKVWrite, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KVWrite message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KVWrite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.KVWrite;

        /**
         * Decodes a KVWrite message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KVWrite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.KVWrite;

        /**
         * Verifies a KVWrite message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KVWrite message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KVWrite
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.KVWrite;

        /**
         * Creates a plain object from a KVWrite message. Also converts values to other types if specified.
         * @param message KVWrite
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.KVWrite, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KVWrite to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KVMetadataWrite. */
    interface IKVMetadataWrite {

        /** KVMetadataWrite key */
        key?: (string|null);

        /** KVMetadataWrite entries */
        entries?: (kvrwset.IKVMetadataEntry[]|null);
    }

    /** Represents a KVMetadataWrite. */
    class KVMetadataWrite implements IKVMetadataWrite {

        /**
         * Constructs a new KVMetadataWrite.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IKVMetadataWrite);

        /** KVMetadataWrite key. */
        public key: string;

        /** KVMetadataWrite entries. */
        public entries: kvrwset.IKVMetadataEntry[];

        /**
         * Creates a new KVMetadataWrite instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KVMetadataWrite instance
         */
        public static create(properties?: kvrwset.IKVMetadataWrite): kvrwset.KVMetadataWrite;

        /**
         * Encodes the specified KVMetadataWrite message. Does not implicitly {@link kvrwset.KVMetadataWrite.verify|verify} messages.
         * @param message KVMetadataWrite message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IKVMetadataWrite, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KVMetadataWrite message, length delimited. Does not implicitly {@link kvrwset.KVMetadataWrite.verify|verify} messages.
         * @param message KVMetadataWrite message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IKVMetadataWrite, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KVMetadataWrite message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KVMetadataWrite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.KVMetadataWrite;

        /**
         * Decodes a KVMetadataWrite message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KVMetadataWrite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.KVMetadataWrite;

        /**
         * Verifies a KVMetadataWrite message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KVMetadataWrite message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KVMetadataWrite
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.KVMetadataWrite;

        /**
         * Creates a plain object from a KVMetadataWrite message. Also converts values to other types if specified.
         * @param message KVMetadataWrite
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.KVMetadataWrite, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KVMetadataWrite to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KVReadHash. */
    interface IKVReadHash {

        /** KVReadHash keyHash */
        keyHash?: (Uint8Array|null);

        /** KVReadHash version */
        version?: (kvrwset.IVersion|null);
    }

    /** Represents a KVReadHash. */
    class KVReadHash implements IKVReadHash {

        /**
         * Constructs a new KVReadHash.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IKVReadHash);

        /** KVReadHash keyHash. */
        public keyHash: Uint8Array;

        /** KVReadHash version. */
        public version?: (kvrwset.IVersion|null);

        /**
         * Creates a new KVReadHash instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KVReadHash instance
         */
        public static create(properties?: kvrwset.IKVReadHash): kvrwset.KVReadHash;

        /**
         * Encodes the specified KVReadHash message. Does not implicitly {@link kvrwset.KVReadHash.verify|verify} messages.
         * @param message KVReadHash message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IKVReadHash, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KVReadHash message, length delimited. Does not implicitly {@link kvrwset.KVReadHash.verify|verify} messages.
         * @param message KVReadHash message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IKVReadHash, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KVReadHash message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KVReadHash
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.KVReadHash;

        /**
         * Decodes a KVReadHash message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KVReadHash
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.KVReadHash;

        /**
         * Verifies a KVReadHash message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KVReadHash message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KVReadHash
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.KVReadHash;

        /**
         * Creates a plain object from a KVReadHash message. Also converts values to other types if specified.
         * @param message KVReadHash
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.KVReadHash, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KVReadHash to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KVWriteHash. */
    interface IKVWriteHash {

        /** KVWriteHash keyHash */
        keyHash?: (Uint8Array|null);

        /** KVWriteHash isDelete */
        isDelete?: (boolean|null);

        /** KVWriteHash valueHash */
        valueHash?: (Uint8Array|null);
    }

    /** Represents a KVWriteHash. */
    class KVWriteHash implements IKVWriteHash {

        /**
         * Constructs a new KVWriteHash.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IKVWriteHash);

        /** KVWriteHash keyHash. */
        public keyHash: Uint8Array;

        /** KVWriteHash isDelete. */
        public isDelete: boolean;

        /** KVWriteHash valueHash. */
        public valueHash: Uint8Array;

        /**
         * Creates a new KVWriteHash instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KVWriteHash instance
         */
        public static create(properties?: kvrwset.IKVWriteHash): kvrwset.KVWriteHash;

        /**
         * Encodes the specified KVWriteHash message. Does not implicitly {@link kvrwset.KVWriteHash.verify|verify} messages.
         * @param message KVWriteHash message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IKVWriteHash, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KVWriteHash message, length delimited. Does not implicitly {@link kvrwset.KVWriteHash.verify|verify} messages.
         * @param message KVWriteHash message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IKVWriteHash, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KVWriteHash message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KVWriteHash
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.KVWriteHash;

        /**
         * Decodes a KVWriteHash message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KVWriteHash
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.KVWriteHash;

        /**
         * Verifies a KVWriteHash message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KVWriteHash message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KVWriteHash
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.KVWriteHash;

        /**
         * Creates a plain object from a KVWriteHash message. Also converts values to other types if specified.
         * @param message KVWriteHash
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.KVWriteHash, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KVWriteHash to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KVMetadataWriteHash. */
    interface IKVMetadataWriteHash {

        /** KVMetadataWriteHash keyHash */
        keyHash?: (Uint8Array|null);

        /** KVMetadataWriteHash entries */
        entries?: (kvrwset.IKVMetadataEntry[]|null);
    }

    /** Represents a KVMetadataWriteHash. */
    class KVMetadataWriteHash implements IKVMetadataWriteHash {

        /**
         * Constructs a new KVMetadataWriteHash.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IKVMetadataWriteHash);

        /** KVMetadataWriteHash keyHash. */
        public keyHash: Uint8Array;

        /** KVMetadataWriteHash entries. */
        public entries: kvrwset.IKVMetadataEntry[];

        /**
         * Creates a new KVMetadataWriteHash instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KVMetadataWriteHash instance
         */
        public static create(properties?: kvrwset.IKVMetadataWriteHash): kvrwset.KVMetadataWriteHash;

        /**
         * Encodes the specified KVMetadataWriteHash message. Does not implicitly {@link kvrwset.KVMetadataWriteHash.verify|verify} messages.
         * @param message KVMetadataWriteHash message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IKVMetadataWriteHash, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KVMetadataWriteHash message, length delimited. Does not implicitly {@link kvrwset.KVMetadataWriteHash.verify|verify} messages.
         * @param message KVMetadataWriteHash message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IKVMetadataWriteHash, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KVMetadataWriteHash message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KVMetadataWriteHash
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.KVMetadataWriteHash;

        /**
         * Decodes a KVMetadataWriteHash message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KVMetadataWriteHash
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.KVMetadataWriteHash;

        /**
         * Verifies a KVMetadataWriteHash message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KVMetadataWriteHash message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KVMetadataWriteHash
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.KVMetadataWriteHash;

        /**
         * Creates a plain object from a KVMetadataWriteHash message. Also converts values to other types if specified.
         * @param message KVMetadataWriteHash
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.KVMetadataWriteHash, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KVMetadataWriteHash to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KVMetadataEntry. */
    interface IKVMetadataEntry {

        /** KVMetadataEntry name */
        name?: (string|null);

        /** KVMetadataEntry value */
        value?: (Uint8Array|null);
    }

    /** Represents a KVMetadataEntry. */
    class KVMetadataEntry implements IKVMetadataEntry {

        /**
         * Constructs a new KVMetadataEntry.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IKVMetadataEntry);

        /** KVMetadataEntry name. */
        public name: string;

        /** KVMetadataEntry value. */
        public value: Uint8Array;

        /**
         * Creates a new KVMetadataEntry instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KVMetadataEntry instance
         */
        public static create(properties?: kvrwset.IKVMetadataEntry): kvrwset.KVMetadataEntry;

        /**
         * Encodes the specified KVMetadataEntry message. Does not implicitly {@link kvrwset.KVMetadataEntry.verify|verify} messages.
         * @param message KVMetadataEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IKVMetadataEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KVMetadataEntry message, length delimited. Does not implicitly {@link kvrwset.KVMetadataEntry.verify|verify} messages.
         * @param message KVMetadataEntry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IKVMetadataEntry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KVMetadataEntry message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KVMetadataEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.KVMetadataEntry;

        /**
         * Decodes a KVMetadataEntry message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KVMetadataEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.KVMetadataEntry;

        /**
         * Verifies a KVMetadataEntry message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KVMetadataEntry message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KVMetadataEntry
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.KVMetadataEntry;

        /**
         * Creates a plain object from a KVMetadataEntry message. Also converts values to other types if specified.
         * @param message KVMetadataEntry
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.KVMetadataEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KVMetadataEntry to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Version. */
    interface IVersion {

        /** Version blockNum */
        blockNum?: (number|Long|null);

        /** Version txNum */
        txNum?: (number|Long|null);
    }

    /** Represents a Version. */
    class Version implements IVersion {

        /**
         * Constructs a new Version.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IVersion);

        /** Version blockNum. */
        public blockNum: (number|Long);

        /** Version txNum. */
        public txNum: (number|Long);

        /**
         * Creates a new Version instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Version instance
         */
        public static create(properties?: kvrwset.IVersion): kvrwset.Version;

        /**
         * Encodes the specified Version message. Does not implicitly {@link kvrwset.Version.verify|verify} messages.
         * @param message Version message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IVersion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Version message, length delimited. Does not implicitly {@link kvrwset.Version.verify|verify} messages.
         * @param message Version message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IVersion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Version message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Version
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.Version;

        /**
         * Decodes a Version message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Version
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.Version;

        /**
         * Verifies a Version message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Version message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Version
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.Version;

        /**
         * Creates a plain object from a Version message. Also converts values to other types if specified.
         * @param message Version
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.Version, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Version to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RangeQueryInfo. */
    interface IRangeQueryInfo {

        /** RangeQueryInfo startKey */
        startKey?: (string|null);

        /** RangeQueryInfo endKey */
        endKey?: (string|null);

        /** RangeQueryInfo itrExhausted */
        itrExhausted?: (boolean|null);

        /** RangeQueryInfo rawReads */
        rawReads?: (kvrwset.IQueryReads|null);

        /** RangeQueryInfo readsMerkleHashes */
        readsMerkleHashes?: (kvrwset.IQueryReadsMerkleSummary|null);
    }

    /** Represents a RangeQueryInfo. */
    class RangeQueryInfo implements IRangeQueryInfo {

        /**
         * Constructs a new RangeQueryInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IRangeQueryInfo);

        /** RangeQueryInfo startKey. */
        public startKey: string;

        /** RangeQueryInfo endKey. */
        public endKey: string;

        /** RangeQueryInfo itrExhausted. */
        public itrExhausted: boolean;

        /** RangeQueryInfo rawReads. */
        public rawReads?: (kvrwset.IQueryReads|null);

        /** RangeQueryInfo readsMerkleHashes. */
        public readsMerkleHashes?: (kvrwset.IQueryReadsMerkleSummary|null);

        /** RangeQueryInfo readsInfo. */
        public readsInfo?: ("rawReads"|"readsMerkleHashes");

        /**
         * Creates a new RangeQueryInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RangeQueryInfo instance
         */
        public static create(properties?: kvrwset.IRangeQueryInfo): kvrwset.RangeQueryInfo;

        /**
         * Encodes the specified RangeQueryInfo message. Does not implicitly {@link kvrwset.RangeQueryInfo.verify|verify} messages.
         * @param message RangeQueryInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IRangeQueryInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RangeQueryInfo message, length delimited. Does not implicitly {@link kvrwset.RangeQueryInfo.verify|verify} messages.
         * @param message RangeQueryInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IRangeQueryInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RangeQueryInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RangeQueryInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.RangeQueryInfo;

        /**
         * Decodes a RangeQueryInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RangeQueryInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.RangeQueryInfo;

        /**
         * Verifies a RangeQueryInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RangeQueryInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RangeQueryInfo
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.RangeQueryInfo;

        /**
         * Creates a plain object from a RangeQueryInfo message. Also converts values to other types if specified.
         * @param message RangeQueryInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.RangeQueryInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RangeQueryInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryReads. */
    interface IQueryReads {

        /** QueryReads kvReads */
        kvReads?: (kvrwset.IKVRead[]|null);
    }

    /** Represents a QueryReads. */
    class QueryReads implements IQueryReads {

        /**
         * Constructs a new QueryReads.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IQueryReads);

        /** QueryReads kvReads. */
        public kvReads: kvrwset.IKVRead[];

        /**
         * Creates a new QueryReads instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryReads instance
         */
        public static create(properties?: kvrwset.IQueryReads): kvrwset.QueryReads;

        /**
         * Encodes the specified QueryReads message. Does not implicitly {@link kvrwset.QueryReads.verify|verify} messages.
         * @param message QueryReads message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IQueryReads, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryReads message, length delimited. Does not implicitly {@link kvrwset.QueryReads.verify|verify} messages.
         * @param message QueryReads message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IQueryReads, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryReads message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryReads
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.QueryReads;

        /**
         * Decodes a QueryReads message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryReads
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.QueryReads;

        /**
         * Verifies a QueryReads message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryReads message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryReads
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.QueryReads;

        /**
         * Creates a plain object from a QueryReads message. Also converts values to other types if specified.
         * @param message QueryReads
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.QueryReads, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryReads to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryReadsMerkleSummary. */
    interface IQueryReadsMerkleSummary {

        /** QueryReadsMerkleSummary maxDegree */
        maxDegree?: (number|null);

        /** QueryReadsMerkleSummary maxLevel */
        maxLevel?: (number|null);

        /** QueryReadsMerkleSummary maxLevelHashes */
        maxLevelHashes?: (Uint8Array[]|null);
    }

    /** Represents a QueryReadsMerkleSummary. */
    class QueryReadsMerkleSummary implements IQueryReadsMerkleSummary {

        /**
         * Constructs a new QueryReadsMerkleSummary.
         * @param [properties] Properties to set
         */
        constructor(properties?: kvrwset.IQueryReadsMerkleSummary);

        /** QueryReadsMerkleSummary maxDegree. */
        public maxDegree: number;

        /** QueryReadsMerkleSummary maxLevel. */
        public maxLevel: number;

        /** QueryReadsMerkleSummary maxLevelHashes. */
        public maxLevelHashes: Uint8Array[];

        /**
         * Creates a new QueryReadsMerkleSummary instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryReadsMerkleSummary instance
         */
        public static create(properties?: kvrwset.IQueryReadsMerkleSummary): kvrwset.QueryReadsMerkleSummary;

        /**
         * Encodes the specified QueryReadsMerkleSummary message. Does not implicitly {@link kvrwset.QueryReadsMerkleSummary.verify|verify} messages.
         * @param message QueryReadsMerkleSummary message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: kvrwset.IQueryReadsMerkleSummary, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryReadsMerkleSummary message, length delimited. Does not implicitly {@link kvrwset.QueryReadsMerkleSummary.verify|verify} messages.
         * @param message QueryReadsMerkleSummary message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: kvrwset.IQueryReadsMerkleSummary, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryReadsMerkleSummary message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryReadsMerkleSummary
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): kvrwset.QueryReadsMerkleSummary;

        /**
         * Decodes a QueryReadsMerkleSummary message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryReadsMerkleSummary
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): kvrwset.QueryReadsMerkleSummary;

        /**
         * Verifies a QueryReadsMerkleSummary message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryReadsMerkleSummary message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryReadsMerkleSummary
         */
        public static fromObject(object: { [k: string]: any }): kvrwset.QueryReadsMerkleSummary;

        /**
         * Creates a plain object from a QueryReadsMerkleSummary message. Also converts values to other types if specified.
         * @param message QueryReadsMerkleSummary
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: kvrwset.QueryReadsMerkleSummary, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryReadsMerkleSummary to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace queryresult. */
export namespace queryresult {

    /** Properties of a KV. */
    interface IKV {

        /** KV namespace */
        namespace?: (string|null);

        /** KV key */
        key?: (string|null);

        /** KV value */
        value?: (Uint8Array|null);
    }

    /** Represents a KV. */
    class KV implements IKV {

        /**
         * Constructs a new KV.
         * @param [properties] Properties to set
         */
        constructor(properties?: queryresult.IKV);

        /** KV namespace. */
        public namespace: string;

        /** KV key. */
        public key: string;

        /** KV value. */
        public value: Uint8Array;

        /**
         * Creates a new KV instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KV instance
         */
        public static create(properties?: queryresult.IKV): queryresult.KV;

        /**
         * Encodes the specified KV message. Does not implicitly {@link queryresult.KV.verify|verify} messages.
         * @param message KV message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: queryresult.IKV, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KV message, length delimited. Does not implicitly {@link queryresult.KV.verify|verify} messages.
         * @param message KV message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: queryresult.IKV, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KV message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KV
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): queryresult.KV;

        /**
         * Decodes a KV message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KV
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): queryresult.KV;

        /**
         * Verifies a KV message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KV message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KV
         */
        public static fromObject(object: { [k: string]: any }): queryresult.KV;

        /**
         * Creates a plain object from a KV message. Also converts values to other types if specified.
         * @param message KV
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: queryresult.KV, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KV to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KeyModification. */
    interface IKeyModification {

        /** KeyModification txId */
        txId?: (string|null);

        /** KeyModification value */
        value?: (Uint8Array|null);

        /** KeyModification timestamp */
        timestamp?: (google.protobuf.ITimestamp|null);

        /** KeyModification isDelete */
        isDelete?: (boolean|null);
    }

    /** Represents a KeyModification. */
    class KeyModification implements IKeyModification {

        /**
         * Constructs a new KeyModification.
         * @param [properties] Properties to set
         */
        constructor(properties?: queryresult.IKeyModification);

        /** KeyModification txId. */
        public txId: string;

        /** KeyModification value. */
        public value: Uint8Array;

        /** KeyModification timestamp. */
        public timestamp?: (google.protobuf.ITimestamp|null);

        /** KeyModification isDelete. */
        public isDelete: boolean;

        /**
         * Creates a new KeyModification instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeyModification instance
         */
        public static create(properties?: queryresult.IKeyModification): queryresult.KeyModification;

        /**
         * Encodes the specified KeyModification message. Does not implicitly {@link queryresult.KeyModification.verify|verify} messages.
         * @param message KeyModification message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: queryresult.IKeyModification, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeyModification message, length delimited. Does not implicitly {@link queryresult.KeyModification.verify|verify} messages.
         * @param message KeyModification message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: queryresult.IKeyModification, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeyModification message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeyModification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): queryresult.KeyModification;

        /**
         * Decodes a KeyModification message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeyModification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): queryresult.KeyModification;

        /**
         * Verifies a KeyModification message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeyModification message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeyModification
         */
        public static fromObject(object: { [k: string]: any }): queryresult.KeyModification;

        /**
         * Creates a plain object from a KeyModification message. Also converts values to other types if specified.
         * @param message KeyModification
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: queryresult.KeyModification, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeyModification to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace transientstore. */
export namespace transientstore {

    /** Properties of a TxPvtReadWriteSetWithConfigInfo. */
    interface ITxPvtReadWriteSetWithConfigInfo {

        /** TxPvtReadWriteSetWithConfigInfo endorsedAt */
        endorsedAt?: (number|Long|null);

        /** TxPvtReadWriteSetWithConfigInfo pvtRwset */
        pvtRwset?: (rwset.ITxPvtReadWriteSet|null);

        /** TxPvtReadWriteSetWithConfigInfo collectionConfigs */
        collectionConfigs?: ({ [k: string]: common.ICollectionConfigPackage }|null);
    }

    /** Represents a TxPvtReadWriteSetWithConfigInfo. */
    class TxPvtReadWriteSetWithConfigInfo implements ITxPvtReadWriteSetWithConfigInfo {

        /**
         * Constructs a new TxPvtReadWriteSetWithConfigInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: transientstore.ITxPvtReadWriteSetWithConfigInfo);

        /** TxPvtReadWriteSetWithConfigInfo endorsedAt. */
        public endorsedAt: (number|Long);

        /** TxPvtReadWriteSetWithConfigInfo pvtRwset. */
        public pvtRwset?: (rwset.ITxPvtReadWriteSet|null);

        /** TxPvtReadWriteSetWithConfigInfo collectionConfigs. */
        public collectionConfigs: { [k: string]: common.ICollectionConfigPackage };

        /**
         * Creates a new TxPvtReadWriteSetWithConfigInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TxPvtReadWriteSetWithConfigInfo instance
         */
        public static create(properties?: transientstore.ITxPvtReadWriteSetWithConfigInfo): transientstore.TxPvtReadWriteSetWithConfigInfo;

        /**
         * Encodes the specified TxPvtReadWriteSetWithConfigInfo message. Does not implicitly {@link transientstore.TxPvtReadWriteSetWithConfigInfo.verify|verify} messages.
         * @param message TxPvtReadWriteSetWithConfigInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: transientstore.ITxPvtReadWriteSetWithConfigInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TxPvtReadWriteSetWithConfigInfo message, length delimited. Does not implicitly {@link transientstore.TxPvtReadWriteSetWithConfigInfo.verify|verify} messages.
         * @param message TxPvtReadWriteSetWithConfigInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: transientstore.ITxPvtReadWriteSetWithConfigInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TxPvtReadWriteSetWithConfigInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TxPvtReadWriteSetWithConfigInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): transientstore.TxPvtReadWriteSetWithConfigInfo;

        /**
         * Decodes a TxPvtReadWriteSetWithConfigInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TxPvtReadWriteSetWithConfigInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): transientstore.TxPvtReadWriteSetWithConfigInfo;

        /**
         * Verifies a TxPvtReadWriteSetWithConfigInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TxPvtReadWriteSetWithConfigInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TxPvtReadWriteSetWithConfigInfo
         */
        public static fromObject(object: { [k: string]: any }): transientstore.TxPvtReadWriteSetWithConfigInfo;

        /**
         * Creates a plain object from a TxPvtReadWriteSetWithConfigInfo message. Also converts values to other types if specified.
         * @param message TxPvtReadWriteSetWithConfigInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: transientstore.TxPvtReadWriteSetWithConfigInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TxPvtReadWriteSetWithConfigInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace etcdraft. */
export namespace etcdraft {

    /** Properties of a BlockMetadata. */
    interface IBlockMetadata {

        /** BlockMetadata consenterIds */
        consenterIds?: ((number|Long)[]|null);

        /** BlockMetadata nextConsenterId */
        nextConsenterId?: (number|Long|null);

        /** BlockMetadata raftIndex */
        raftIndex?: (number|Long|null);
    }

    /** Represents a BlockMetadata. */
    class BlockMetadata implements IBlockMetadata {

        /**
         * Constructs a new BlockMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: etcdraft.IBlockMetadata);

        /** BlockMetadata consenterIds. */
        public consenterIds: (number|Long)[];

        /** BlockMetadata nextConsenterId. */
        public nextConsenterId: (number|Long);

        /** BlockMetadata raftIndex. */
        public raftIndex: (number|Long);

        /**
         * Creates a new BlockMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BlockMetadata instance
         */
        public static create(properties?: etcdraft.IBlockMetadata): etcdraft.BlockMetadata;

        /**
         * Encodes the specified BlockMetadata message. Does not implicitly {@link etcdraft.BlockMetadata.verify|verify} messages.
         * @param message BlockMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: etcdraft.IBlockMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BlockMetadata message, length delimited. Does not implicitly {@link etcdraft.BlockMetadata.verify|verify} messages.
         * @param message BlockMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: etcdraft.IBlockMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BlockMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BlockMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): etcdraft.BlockMetadata;

        /**
         * Decodes a BlockMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BlockMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): etcdraft.BlockMetadata;

        /**
         * Verifies a BlockMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BlockMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BlockMetadata
         */
        public static fromObject(object: { [k: string]: any }): etcdraft.BlockMetadata;

        /**
         * Creates a plain object from a BlockMetadata message. Also converts values to other types if specified.
         * @param message BlockMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: etcdraft.BlockMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BlockMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ClusterMetadata. */
    interface IClusterMetadata {

        /** ClusterMetadata activeNodes */
        activeNodes?: ((number|Long)[]|null);
    }

    /** Represents a ClusterMetadata. */
    class ClusterMetadata implements IClusterMetadata {

        /**
         * Constructs a new ClusterMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: etcdraft.IClusterMetadata);

        /** ClusterMetadata activeNodes. */
        public activeNodes: (number|Long)[];

        /**
         * Creates a new ClusterMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ClusterMetadata instance
         */
        public static create(properties?: etcdraft.IClusterMetadata): etcdraft.ClusterMetadata;

        /**
         * Encodes the specified ClusterMetadata message. Does not implicitly {@link etcdraft.ClusterMetadata.verify|verify} messages.
         * @param message ClusterMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: etcdraft.IClusterMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ClusterMetadata message, length delimited. Does not implicitly {@link etcdraft.ClusterMetadata.verify|verify} messages.
         * @param message ClusterMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: etcdraft.IClusterMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ClusterMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ClusterMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): etcdraft.ClusterMetadata;

        /**
         * Decodes a ClusterMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ClusterMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): etcdraft.ClusterMetadata;

        /**
         * Verifies a ClusterMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ClusterMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ClusterMetadata
         */
        public static fromObject(object: { [k: string]: any }): etcdraft.ClusterMetadata;

        /**
         * Creates a plain object from a ClusterMetadata message. Also converts values to other types if specified.
         * @param message ClusterMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: etcdraft.ClusterMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ClusterMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConfigMetadata. */
    interface IConfigMetadata {

        /** ConfigMetadata consenters */
        consenters?: (etcdraft.IConsenter[]|null);

        /** ConfigMetadata options */
        options?: (etcdraft.IOptions|null);
    }

    /** Represents a ConfigMetadata. */
    class ConfigMetadata implements IConfigMetadata {

        /**
         * Constructs a new ConfigMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: etcdraft.IConfigMetadata);

        /** ConfigMetadata consenters. */
        public consenters: etcdraft.IConsenter[];

        /** ConfigMetadata options. */
        public options?: (etcdraft.IOptions|null);

        /**
         * Creates a new ConfigMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConfigMetadata instance
         */
        public static create(properties?: etcdraft.IConfigMetadata): etcdraft.ConfigMetadata;

        /**
         * Encodes the specified ConfigMetadata message. Does not implicitly {@link etcdraft.ConfigMetadata.verify|verify} messages.
         * @param message ConfigMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: etcdraft.IConfigMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConfigMetadata message, length delimited. Does not implicitly {@link etcdraft.ConfigMetadata.verify|verify} messages.
         * @param message ConfigMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: etcdraft.IConfigMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConfigMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConfigMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): etcdraft.ConfigMetadata;

        /**
         * Decodes a ConfigMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConfigMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): etcdraft.ConfigMetadata;

        /**
         * Verifies a ConfigMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConfigMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConfigMetadata
         */
        public static fromObject(object: { [k: string]: any }): etcdraft.ConfigMetadata;

        /**
         * Creates a plain object from a ConfigMetadata message. Also converts values to other types if specified.
         * @param message ConfigMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: etcdraft.ConfigMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConfigMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Consenter. */
    interface IConsenter {

        /** Consenter host */
        host?: (string|null);

        /** Consenter port */
        port?: (number|null);

        /** Consenter clientTlsCert */
        clientTlsCert?: (Uint8Array|null);

        /** Consenter serverTlsCert */
        serverTlsCert?: (Uint8Array|null);
    }

    /** Represents a Consenter. */
    class Consenter implements IConsenter {

        /**
         * Constructs a new Consenter.
         * @param [properties] Properties to set
         */
        constructor(properties?: etcdraft.IConsenter);

        /** Consenter host. */
        public host: string;

        /** Consenter port. */
        public port: number;

        /** Consenter clientTlsCert. */
        public clientTlsCert: Uint8Array;

        /** Consenter serverTlsCert. */
        public serverTlsCert: Uint8Array;

        /**
         * Creates a new Consenter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Consenter instance
         */
        public static create(properties?: etcdraft.IConsenter): etcdraft.Consenter;

        /**
         * Encodes the specified Consenter message. Does not implicitly {@link etcdraft.Consenter.verify|verify} messages.
         * @param message Consenter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: etcdraft.IConsenter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Consenter message, length delimited. Does not implicitly {@link etcdraft.Consenter.verify|verify} messages.
         * @param message Consenter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: etcdraft.IConsenter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Consenter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Consenter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): etcdraft.Consenter;

        /**
         * Decodes a Consenter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Consenter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): etcdraft.Consenter;

        /**
         * Verifies a Consenter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Consenter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Consenter
         */
        public static fromObject(object: { [k: string]: any }): etcdraft.Consenter;

        /**
         * Creates a plain object from a Consenter message. Also converts values to other types if specified.
         * @param message Consenter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: etcdraft.Consenter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Consenter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Options. */
    interface IOptions {

        /** Options tickInterval */
        tickInterval?: (string|null);

        /** Options electionTick */
        electionTick?: (number|null);

        /** Options heartbeatTick */
        heartbeatTick?: (number|null);

        /** Options maxInflightBlocks */
        maxInflightBlocks?: (number|null);

        /** Options snapshotIntervalSize */
        snapshotIntervalSize?: (number|null);
    }

    /** Represents an Options. */
    class Options implements IOptions {

        /**
         * Constructs a new Options.
         * @param [properties] Properties to set
         */
        constructor(properties?: etcdraft.IOptions);

        /** Options tickInterval. */
        public tickInterval: string;

        /** Options electionTick. */
        public electionTick: number;

        /** Options heartbeatTick. */
        public heartbeatTick: number;

        /** Options maxInflightBlocks. */
        public maxInflightBlocks: number;

        /** Options snapshotIntervalSize. */
        public snapshotIntervalSize: number;

        /**
         * Creates a new Options instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Options instance
         */
        public static create(properties?: etcdraft.IOptions): etcdraft.Options;

        /**
         * Encodes the specified Options message. Does not implicitly {@link etcdraft.Options.verify|verify} messages.
         * @param message Options message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: etcdraft.IOptions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Options message, length delimited. Does not implicitly {@link etcdraft.Options.verify|verify} messages.
         * @param message Options message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: etcdraft.IOptions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Options message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Options
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): etcdraft.Options;

        /**
         * Decodes an Options message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Options
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): etcdraft.Options;

        /**
         * Verifies an Options message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Options message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Options
         */
        public static fromObject(object: { [k: string]: any }): etcdraft.Options;

        /**
         * Creates a plain object from an Options message. Also converts values to other types if specified.
         * @param message Options
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: etcdraft.Options, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Options to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace orderer. */
export namespace orderer {

    /** Represents a Cluster */
    class Cluster extends $protobuf.rpc.Service {

        /**
         * Constructs a new Cluster service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new Cluster service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): Cluster;

        /**
         * Calls Step.
         * @param request StepRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and StepResponse
         */
        public step(request: orderer.IStepRequest, callback: orderer.Cluster.StepCallback): void;

        /**
         * Calls Step.
         * @param request StepRequest message or plain object
         * @returns Promise
         */
        public step(request: orderer.IStepRequest): Promise<orderer.StepResponse>;
    }

    namespace Cluster {

        /**
         * Callback as used by {@link orderer.Cluster#step}.
         * @param error Error, if any
         * @param [response] StepResponse
         */
        type StepCallback = (error: (Error|null), response?: orderer.StepResponse) => void;
    }

    /** Properties of a StepRequest. */
    interface IStepRequest {

        /** StepRequest consensusRequest */
        consensusRequest?: (orderer.IConsensusRequest|null);

        /** StepRequest submitRequest */
        submitRequest?: (orderer.ISubmitRequest|null);
    }

    /** Represents a StepRequest. */
    class StepRequest implements IStepRequest {

        /**
         * Constructs a new StepRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IStepRequest);

        /** StepRequest consensusRequest. */
        public consensusRequest?: (orderer.IConsensusRequest|null);

        /** StepRequest submitRequest. */
        public submitRequest?: (orderer.ISubmitRequest|null);

        /** StepRequest payload. */
        public payload?: ("consensusRequest"|"submitRequest");

        /**
         * Creates a new StepRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StepRequest instance
         */
        public static create(properties?: orderer.IStepRequest): orderer.StepRequest;

        /**
         * Encodes the specified StepRequest message. Does not implicitly {@link orderer.StepRequest.verify|verify} messages.
         * @param message StepRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IStepRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StepRequest message, length delimited. Does not implicitly {@link orderer.StepRequest.verify|verify} messages.
         * @param message StepRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IStepRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StepRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StepRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.StepRequest;

        /**
         * Decodes a StepRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StepRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.StepRequest;

        /**
         * Verifies a StepRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StepRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StepRequest
         */
        public static fromObject(object: { [k: string]: any }): orderer.StepRequest;

        /**
         * Creates a plain object from a StepRequest message. Also converts values to other types if specified.
         * @param message StepRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.StepRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StepRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StepResponse. */
    interface IStepResponse {

        /** StepResponse submitRes */
        submitRes?: (orderer.ISubmitResponse|null);
    }

    /** Represents a StepResponse. */
    class StepResponse implements IStepResponse {

        /**
         * Constructs a new StepResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IStepResponse);

        /** StepResponse submitRes. */
        public submitRes?: (orderer.ISubmitResponse|null);

        /** StepResponse payload. */
        public payload?: "submitRes";

        /**
         * Creates a new StepResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StepResponse instance
         */
        public static create(properties?: orderer.IStepResponse): orderer.StepResponse;

        /**
         * Encodes the specified StepResponse message. Does not implicitly {@link orderer.StepResponse.verify|verify} messages.
         * @param message StepResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IStepResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StepResponse message, length delimited. Does not implicitly {@link orderer.StepResponse.verify|verify} messages.
         * @param message StepResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IStepResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StepResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StepResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.StepResponse;

        /**
         * Decodes a StepResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StepResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.StepResponse;

        /**
         * Verifies a StepResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StepResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StepResponse
         */
        public static fromObject(object: { [k: string]: any }): orderer.StepResponse;

        /**
         * Creates a plain object from a StepResponse message. Also converts values to other types if specified.
         * @param message StepResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.StepResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StepResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConsensusRequest. */
    interface IConsensusRequest {

        /** ConsensusRequest channel */
        channel?: (string|null);

        /** ConsensusRequest payload */
        payload?: (Uint8Array|null);

        /** ConsensusRequest metadata */
        metadata?: (Uint8Array|null);
    }

    /** Represents a ConsensusRequest. */
    class ConsensusRequest implements IConsensusRequest {

        /**
         * Constructs a new ConsensusRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IConsensusRequest);

        /** ConsensusRequest channel. */
        public channel: string;

        /** ConsensusRequest payload. */
        public payload: Uint8Array;

        /** ConsensusRequest metadata. */
        public metadata: Uint8Array;

        /**
         * Creates a new ConsensusRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConsensusRequest instance
         */
        public static create(properties?: orderer.IConsensusRequest): orderer.ConsensusRequest;

        /**
         * Encodes the specified ConsensusRequest message. Does not implicitly {@link orderer.ConsensusRequest.verify|verify} messages.
         * @param message ConsensusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IConsensusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConsensusRequest message, length delimited. Does not implicitly {@link orderer.ConsensusRequest.verify|verify} messages.
         * @param message ConsensusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IConsensusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConsensusRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConsensusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.ConsensusRequest;

        /**
         * Decodes a ConsensusRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConsensusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.ConsensusRequest;

        /**
         * Verifies a ConsensusRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConsensusRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConsensusRequest
         */
        public static fromObject(object: { [k: string]: any }): orderer.ConsensusRequest;

        /**
         * Creates a plain object from a ConsensusRequest message. Also converts values to other types if specified.
         * @param message ConsensusRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.ConsensusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConsensusRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SubmitRequest. */
    interface ISubmitRequest {

        /** SubmitRequest channel */
        channel?: (string|null);

        /** SubmitRequest lastValidationSeq */
        lastValidationSeq?: (number|Long|null);

        /** SubmitRequest payload */
        payload?: (common.IEnvelope|null);
    }

    /** Represents a SubmitRequest. */
    class SubmitRequest implements ISubmitRequest {

        /**
         * Constructs a new SubmitRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.ISubmitRequest);

        /** SubmitRequest channel. */
        public channel: string;

        /** SubmitRequest lastValidationSeq. */
        public lastValidationSeq: (number|Long);

        /** SubmitRequest payload. */
        public payload?: (common.IEnvelope|null);

        /**
         * Creates a new SubmitRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SubmitRequest instance
         */
        public static create(properties?: orderer.ISubmitRequest): orderer.SubmitRequest;

        /**
         * Encodes the specified SubmitRequest message. Does not implicitly {@link orderer.SubmitRequest.verify|verify} messages.
         * @param message SubmitRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.ISubmitRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SubmitRequest message, length delimited. Does not implicitly {@link orderer.SubmitRequest.verify|verify} messages.
         * @param message SubmitRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.ISubmitRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SubmitRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SubmitRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.SubmitRequest;

        /**
         * Decodes a SubmitRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SubmitRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.SubmitRequest;

        /**
         * Verifies a SubmitRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SubmitRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SubmitRequest
         */
        public static fromObject(object: { [k: string]: any }): orderer.SubmitRequest;

        /**
         * Creates a plain object from a SubmitRequest message. Also converts values to other types if specified.
         * @param message SubmitRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.SubmitRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SubmitRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SubmitResponse. */
    interface ISubmitResponse {

        /** SubmitResponse channel */
        channel?: (string|null);

        /** SubmitResponse status */
        status?: (common.Status|null);

        /** SubmitResponse info */
        info?: (string|null);
    }

    /** Represents a SubmitResponse. */
    class SubmitResponse implements ISubmitResponse {

        /**
         * Constructs a new SubmitResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.ISubmitResponse);

        /** SubmitResponse channel. */
        public channel: string;

        /** SubmitResponse status. */
        public status: common.Status;

        /** SubmitResponse info. */
        public info: string;

        /**
         * Creates a new SubmitResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SubmitResponse instance
         */
        public static create(properties?: orderer.ISubmitResponse): orderer.SubmitResponse;

        /**
         * Encodes the specified SubmitResponse message. Does not implicitly {@link orderer.SubmitResponse.verify|verify} messages.
         * @param message SubmitResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.ISubmitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SubmitResponse message, length delimited. Does not implicitly {@link orderer.SubmitResponse.verify|verify} messages.
         * @param message SubmitResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.ISubmitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SubmitResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SubmitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.SubmitResponse;

        /**
         * Decodes a SubmitResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SubmitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.SubmitResponse;

        /**
         * Verifies a SubmitResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SubmitResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SubmitResponse
         */
        public static fromObject(object: { [k: string]: any }): orderer.SubmitResponse;

        /**
         * Creates a plain object from a SubmitResponse message. Also converts values to other types if specified.
         * @param message SubmitResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.SubmitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SubmitResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BroadcastResponse. */
    interface IBroadcastResponse {

        /** BroadcastResponse status */
        status?: (common.Status|null);

        /** BroadcastResponse info */
        info?: (string|null);
    }

    /** Represents a BroadcastResponse. */
    class BroadcastResponse implements IBroadcastResponse {

        /**
         * Constructs a new BroadcastResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IBroadcastResponse);

        /** BroadcastResponse status. */
        public status: common.Status;

        /** BroadcastResponse info. */
        public info: string;

        /**
         * Creates a new BroadcastResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BroadcastResponse instance
         */
        public static create(properties?: orderer.IBroadcastResponse): orderer.BroadcastResponse;

        /**
         * Encodes the specified BroadcastResponse message. Does not implicitly {@link orderer.BroadcastResponse.verify|verify} messages.
         * @param message BroadcastResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IBroadcastResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BroadcastResponse message, length delimited. Does not implicitly {@link orderer.BroadcastResponse.verify|verify} messages.
         * @param message BroadcastResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IBroadcastResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BroadcastResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BroadcastResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.BroadcastResponse;

        /**
         * Decodes a BroadcastResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BroadcastResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.BroadcastResponse;

        /**
         * Verifies a BroadcastResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BroadcastResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BroadcastResponse
         */
        public static fromObject(object: { [k: string]: any }): orderer.BroadcastResponse;

        /**
         * Creates a plain object from a BroadcastResponse message. Also converts values to other types if specified.
         * @param message BroadcastResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.BroadcastResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BroadcastResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeekNewest. */
    interface ISeekNewest {
    }

    /** Represents a SeekNewest. */
    class SeekNewest implements ISeekNewest {

        /**
         * Constructs a new SeekNewest.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.ISeekNewest);

        /**
         * Creates a new SeekNewest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeekNewest instance
         */
        public static create(properties?: orderer.ISeekNewest): orderer.SeekNewest;

        /**
         * Encodes the specified SeekNewest message. Does not implicitly {@link orderer.SeekNewest.verify|verify} messages.
         * @param message SeekNewest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.ISeekNewest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeekNewest message, length delimited. Does not implicitly {@link orderer.SeekNewest.verify|verify} messages.
         * @param message SeekNewest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.ISeekNewest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeekNewest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeekNewest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.SeekNewest;

        /**
         * Decodes a SeekNewest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeekNewest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.SeekNewest;

        /**
         * Verifies a SeekNewest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeekNewest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeekNewest
         */
        public static fromObject(object: { [k: string]: any }): orderer.SeekNewest;

        /**
         * Creates a plain object from a SeekNewest message. Also converts values to other types if specified.
         * @param message SeekNewest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.SeekNewest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeekNewest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeekOldest. */
    interface ISeekOldest {
    }

    /** Represents a SeekOldest. */
    class SeekOldest implements ISeekOldest {

        /**
         * Constructs a new SeekOldest.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.ISeekOldest);

        /**
         * Creates a new SeekOldest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeekOldest instance
         */
        public static create(properties?: orderer.ISeekOldest): orderer.SeekOldest;

        /**
         * Encodes the specified SeekOldest message. Does not implicitly {@link orderer.SeekOldest.verify|verify} messages.
         * @param message SeekOldest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.ISeekOldest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeekOldest message, length delimited. Does not implicitly {@link orderer.SeekOldest.verify|verify} messages.
         * @param message SeekOldest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.ISeekOldest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeekOldest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeekOldest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.SeekOldest;

        /**
         * Decodes a SeekOldest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeekOldest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.SeekOldest;

        /**
         * Verifies a SeekOldest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeekOldest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeekOldest
         */
        public static fromObject(object: { [k: string]: any }): orderer.SeekOldest;

        /**
         * Creates a plain object from a SeekOldest message. Also converts values to other types if specified.
         * @param message SeekOldest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.SeekOldest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeekOldest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeekSpecified. */
    interface ISeekSpecified {

        /** SeekSpecified number */
        number?: (number|Long|null);
    }

    /** Represents a SeekSpecified. */
    class SeekSpecified implements ISeekSpecified {

        /**
         * Constructs a new SeekSpecified.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.ISeekSpecified);

        /** SeekSpecified number. */
        public number: (number|Long);

        /**
         * Creates a new SeekSpecified instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeekSpecified instance
         */
        public static create(properties?: orderer.ISeekSpecified): orderer.SeekSpecified;

        /**
         * Encodes the specified SeekSpecified message. Does not implicitly {@link orderer.SeekSpecified.verify|verify} messages.
         * @param message SeekSpecified message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.ISeekSpecified, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeekSpecified message, length delimited. Does not implicitly {@link orderer.SeekSpecified.verify|verify} messages.
         * @param message SeekSpecified message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.ISeekSpecified, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeekSpecified message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeekSpecified
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.SeekSpecified;

        /**
         * Decodes a SeekSpecified message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeekSpecified
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.SeekSpecified;

        /**
         * Verifies a SeekSpecified message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeekSpecified message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeekSpecified
         */
        public static fromObject(object: { [k: string]: any }): orderer.SeekSpecified;

        /**
         * Creates a plain object from a SeekSpecified message. Also converts values to other types if specified.
         * @param message SeekSpecified
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.SeekSpecified, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeekSpecified to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeekPosition. */
    interface ISeekPosition {

        /** SeekPosition newest */
        newest?: (orderer.ISeekNewest|null);

        /** SeekPosition oldest */
        oldest?: (orderer.ISeekOldest|null);

        /** SeekPosition specified */
        specified?: (orderer.ISeekSpecified|null);
    }

    /** Represents a SeekPosition. */
    class SeekPosition implements ISeekPosition {

        /**
         * Constructs a new SeekPosition.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.ISeekPosition);

        /** SeekPosition newest. */
        public newest?: (orderer.ISeekNewest|null);

        /** SeekPosition oldest. */
        public oldest?: (orderer.ISeekOldest|null);

        /** SeekPosition specified. */
        public specified?: (orderer.ISeekSpecified|null);

        /** SeekPosition Type. */
        public Type?: ("newest"|"oldest"|"specified");

        /**
         * Creates a new SeekPosition instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeekPosition instance
         */
        public static create(properties?: orderer.ISeekPosition): orderer.SeekPosition;

        /**
         * Encodes the specified SeekPosition message. Does not implicitly {@link orderer.SeekPosition.verify|verify} messages.
         * @param message SeekPosition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.ISeekPosition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeekPosition message, length delimited. Does not implicitly {@link orderer.SeekPosition.verify|verify} messages.
         * @param message SeekPosition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.ISeekPosition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeekPosition message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeekPosition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.SeekPosition;

        /**
         * Decodes a SeekPosition message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeekPosition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.SeekPosition;

        /**
         * Verifies a SeekPosition message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeekPosition message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeekPosition
         */
        public static fromObject(object: { [k: string]: any }): orderer.SeekPosition;

        /**
         * Creates a plain object from a SeekPosition message. Also converts values to other types if specified.
         * @param message SeekPosition
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.SeekPosition, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeekPosition to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeekInfo. */
    interface ISeekInfo {

        /** SeekInfo start */
        start?: (orderer.ISeekPosition|null);

        /** SeekInfo stop */
        stop?: (orderer.ISeekPosition|null);

        /** SeekInfo behavior */
        behavior?: (orderer.SeekInfo.SeekBehavior|null);

        /** SeekInfo errorResponse */
        errorResponse?: (orderer.SeekInfo.SeekErrorResponse|null);
    }

    /** Represents a SeekInfo. */
    class SeekInfo implements ISeekInfo {

        /**
         * Constructs a new SeekInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.ISeekInfo);

        /** SeekInfo start. */
        public start?: (orderer.ISeekPosition|null);

        /** SeekInfo stop. */
        public stop?: (orderer.ISeekPosition|null);

        /** SeekInfo behavior. */
        public behavior: orderer.SeekInfo.SeekBehavior;

        /** SeekInfo errorResponse. */
        public errorResponse: orderer.SeekInfo.SeekErrorResponse;

        /**
         * Creates a new SeekInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeekInfo instance
         */
        public static create(properties?: orderer.ISeekInfo): orderer.SeekInfo;

        /**
         * Encodes the specified SeekInfo message. Does not implicitly {@link orderer.SeekInfo.verify|verify} messages.
         * @param message SeekInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.ISeekInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeekInfo message, length delimited. Does not implicitly {@link orderer.SeekInfo.verify|verify} messages.
         * @param message SeekInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.ISeekInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeekInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeekInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.SeekInfo;

        /**
         * Decodes a SeekInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeekInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.SeekInfo;

        /**
         * Verifies a SeekInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeekInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeekInfo
         */
        public static fromObject(object: { [k: string]: any }): orderer.SeekInfo;

        /**
         * Creates a plain object from a SeekInfo message. Also converts values to other types if specified.
         * @param message SeekInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.SeekInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeekInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace SeekInfo {

        /** SeekBehavior enum. */
        enum SeekBehavior {
            BLOCK_UNTIL_READY = 0,
            FAIL_IF_NOT_READY = 1
        }

        /** SeekErrorResponse enum. */
        enum SeekErrorResponse {
            STRICT = 0,
            BEST_EFFORT = 1
        }
    }

    /** Properties of a DeliverResponse. */
    interface IDeliverResponse {

        /** DeliverResponse status */
        status?: (common.Status|null);

        /** DeliverResponse block */
        block?: (common.IBlock|null);
    }

    /** Represents a DeliverResponse. */
    class DeliverResponse implements IDeliverResponse {

        /**
         * Constructs a new DeliverResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IDeliverResponse);

        /** DeliverResponse status. */
        public status: common.Status;

        /** DeliverResponse block. */
        public block?: (common.IBlock|null);

        /** DeliverResponse Type. */
        public Type?: ("status"|"block");

        /**
         * Creates a new DeliverResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeliverResponse instance
         */
        public static create(properties?: orderer.IDeliverResponse): orderer.DeliverResponse;

        /**
         * Encodes the specified DeliverResponse message. Does not implicitly {@link orderer.DeliverResponse.verify|verify} messages.
         * @param message DeliverResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IDeliverResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeliverResponse message, length delimited. Does not implicitly {@link orderer.DeliverResponse.verify|verify} messages.
         * @param message DeliverResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IDeliverResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeliverResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeliverResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.DeliverResponse;

        /**
         * Decodes a DeliverResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeliverResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.DeliverResponse;

        /**
         * Verifies a DeliverResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeliverResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeliverResponse
         */
        public static fromObject(object: { [k: string]: any }): orderer.DeliverResponse;

        /**
         * Creates a plain object from a DeliverResponse message. Also converts values to other types if specified.
         * @param message DeliverResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.DeliverResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeliverResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents an AtomicBroadcast */
    class AtomicBroadcast extends $protobuf.rpc.Service {

        /**
         * Constructs a new AtomicBroadcast service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new AtomicBroadcast service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): AtomicBroadcast;

        /**
         * Calls Broadcast.
         * @param request Envelope message or plain object
         * @param callback Node-style callback called with the error, if any, and BroadcastResponse
         */
        public broadcast(request: common.IEnvelope, callback: orderer.AtomicBroadcast.BroadcastCallback): void;

        /**
         * Calls Broadcast.
         * @param request Envelope message or plain object
         * @returns Promise
         */
        public broadcast(request: common.IEnvelope): Promise<orderer.BroadcastResponse>;

        /**
         * Calls Deliver.
         * @param request Envelope message or plain object
         * @param callback Node-style callback called with the error, if any, and DeliverResponse
         */
        public deliver(request: common.IEnvelope, callback: orderer.AtomicBroadcast.DeliverCallback): void;

        /**
         * Calls Deliver.
         * @param request Envelope message or plain object
         * @returns Promise
         */
        public deliver(request: common.IEnvelope): Promise<orderer.DeliverResponse>;
    }

    namespace AtomicBroadcast {

        /**
         * Callback as used by {@link orderer.AtomicBroadcast#broadcast}.
         * @param error Error, if any
         * @param [response] BroadcastResponse
         */
        type BroadcastCallback = (error: (Error|null), response?: orderer.BroadcastResponse) => void;

        /**
         * Callback as used by {@link orderer.AtomicBroadcast#deliver}.
         * @param error Error, if any
         * @param [response] DeliverResponse
         */
        type DeliverCallback = (error: (Error|null), response?: orderer.DeliverResponse) => void;
    }

    /** Properties of a ConsensusType. */
    interface IConsensusType {

        /** ConsensusType type */
        type?: (string|null);

        /** ConsensusType metadata */
        metadata?: (Uint8Array|null);

        /** ConsensusType state */
        state?: (orderer.ConsensusType.State|null);
    }

    /** Represents a ConsensusType. */
    class ConsensusType implements IConsensusType {

        /**
         * Constructs a new ConsensusType.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IConsensusType);

        /** ConsensusType type. */
        public type: string;

        /** ConsensusType metadata. */
        public metadata: Uint8Array;

        /** ConsensusType state. */
        public state: orderer.ConsensusType.State;

        /**
         * Creates a new ConsensusType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConsensusType instance
         */
        public static create(properties?: orderer.IConsensusType): orderer.ConsensusType;

        /**
         * Encodes the specified ConsensusType message. Does not implicitly {@link orderer.ConsensusType.verify|verify} messages.
         * @param message ConsensusType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IConsensusType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConsensusType message, length delimited. Does not implicitly {@link orderer.ConsensusType.verify|verify} messages.
         * @param message ConsensusType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IConsensusType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConsensusType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConsensusType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.ConsensusType;

        /**
         * Decodes a ConsensusType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConsensusType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.ConsensusType;

        /**
         * Verifies a ConsensusType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConsensusType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConsensusType
         */
        public static fromObject(object: { [k: string]: any }): orderer.ConsensusType;

        /**
         * Creates a plain object from a ConsensusType message. Also converts values to other types if specified.
         * @param message ConsensusType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.ConsensusType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConsensusType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ConsensusType {

        /** State enum. */
        enum State {
            STATE_NORMAL = 0,
            STATE_MAINTENANCE = 1
        }
    }

    /** Properties of a BatchSize. */
    interface IBatchSize {

        /** BatchSize maxMessageCount */
        maxMessageCount?: (number|null);

        /** BatchSize absoluteMaxBytes */
        absoluteMaxBytes?: (number|null);

        /** BatchSize preferredMaxBytes */
        preferredMaxBytes?: (number|null);
    }

    /** Represents a BatchSize. */
    class BatchSize implements IBatchSize {

        /**
         * Constructs a new BatchSize.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IBatchSize);

        /** BatchSize maxMessageCount. */
        public maxMessageCount: number;

        /** BatchSize absoluteMaxBytes. */
        public absoluteMaxBytes: number;

        /** BatchSize preferredMaxBytes. */
        public preferredMaxBytes: number;

        /**
         * Creates a new BatchSize instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BatchSize instance
         */
        public static create(properties?: orderer.IBatchSize): orderer.BatchSize;

        /**
         * Encodes the specified BatchSize message. Does not implicitly {@link orderer.BatchSize.verify|verify} messages.
         * @param message BatchSize message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IBatchSize, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BatchSize message, length delimited. Does not implicitly {@link orderer.BatchSize.verify|verify} messages.
         * @param message BatchSize message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IBatchSize, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BatchSize message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BatchSize
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.BatchSize;

        /**
         * Decodes a BatchSize message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BatchSize
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.BatchSize;

        /**
         * Verifies a BatchSize message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BatchSize message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BatchSize
         */
        public static fromObject(object: { [k: string]: any }): orderer.BatchSize;

        /**
         * Creates a plain object from a BatchSize message. Also converts values to other types if specified.
         * @param message BatchSize
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.BatchSize, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BatchSize to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BatchTimeout. */
    interface IBatchTimeout {

        /** BatchTimeout timeout */
        timeout?: (string|null);
    }

    /** Represents a BatchTimeout. */
    class BatchTimeout implements IBatchTimeout {

        /**
         * Constructs a new BatchTimeout.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IBatchTimeout);

        /** BatchTimeout timeout. */
        public timeout: string;

        /**
         * Creates a new BatchTimeout instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BatchTimeout instance
         */
        public static create(properties?: orderer.IBatchTimeout): orderer.BatchTimeout;

        /**
         * Encodes the specified BatchTimeout message. Does not implicitly {@link orderer.BatchTimeout.verify|verify} messages.
         * @param message BatchTimeout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IBatchTimeout, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BatchTimeout message, length delimited. Does not implicitly {@link orderer.BatchTimeout.verify|verify} messages.
         * @param message BatchTimeout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IBatchTimeout, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BatchTimeout message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BatchTimeout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.BatchTimeout;

        /**
         * Decodes a BatchTimeout message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BatchTimeout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.BatchTimeout;

        /**
         * Verifies a BatchTimeout message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BatchTimeout message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BatchTimeout
         */
        public static fromObject(object: { [k: string]: any }): orderer.BatchTimeout;

        /**
         * Creates a plain object from a BatchTimeout message. Also converts values to other types if specified.
         * @param message BatchTimeout
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.BatchTimeout, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BatchTimeout to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KafkaBrokers. */
    interface IKafkaBrokers {

        /** KafkaBrokers brokers */
        brokers?: (string[]|null);
    }

    /** Represents a KafkaBrokers. */
    class KafkaBrokers implements IKafkaBrokers {

        /**
         * Constructs a new KafkaBrokers.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IKafkaBrokers);

        /** KafkaBrokers brokers. */
        public brokers: string[];

        /**
         * Creates a new KafkaBrokers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KafkaBrokers instance
         */
        public static create(properties?: orderer.IKafkaBrokers): orderer.KafkaBrokers;

        /**
         * Encodes the specified KafkaBrokers message. Does not implicitly {@link orderer.KafkaBrokers.verify|verify} messages.
         * @param message KafkaBrokers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IKafkaBrokers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KafkaBrokers message, length delimited. Does not implicitly {@link orderer.KafkaBrokers.verify|verify} messages.
         * @param message KafkaBrokers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IKafkaBrokers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KafkaBrokers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KafkaBrokers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.KafkaBrokers;

        /**
         * Decodes a KafkaBrokers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KafkaBrokers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.KafkaBrokers;

        /**
         * Verifies a KafkaBrokers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KafkaBrokers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KafkaBrokers
         */
        public static fromObject(object: { [k: string]: any }): orderer.KafkaBrokers;

        /**
         * Creates a plain object from a KafkaBrokers message. Also converts values to other types if specified.
         * @param message KafkaBrokers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.KafkaBrokers, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KafkaBrokers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChannelRestrictions. */
    interface IChannelRestrictions {

        /** ChannelRestrictions maxCount */
        maxCount?: (number|Long|null);
    }

    /** Represents a ChannelRestrictions. */
    class ChannelRestrictions implements IChannelRestrictions {

        /**
         * Constructs a new ChannelRestrictions.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IChannelRestrictions);

        /** ChannelRestrictions maxCount. */
        public maxCount: (number|Long);

        /**
         * Creates a new ChannelRestrictions instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChannelRestrictions instance
         */
        public static create(properties?: orderer.IChannelRestrictions): orderer.ChannelRestrictions;

        /**
         * Encodes the specified ChannelRestrictions message. Does not implicitly {@link orderer.ChannelRestrictions.verify|verify} messages.
         * @param message ChannelRestrictions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IChannelRestrictions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChannelRestrictions message, length delimited. Does not implicitly {@link orderer.ChannelRestrictions.verify|verify} messages.
         * @param message ChannelRestrictions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IChannelRestrictions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChannelRestrictions message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChannelRestrictions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.ChannelRestrictions;

        /**
         * Decodes a ChannelRestrictions message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChannelRestrictions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.ChannelRestrictions;

        /**
         * Verifies a ChannelRestrictions message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChannelRestrictions message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChannelRestrictions
         */
        public static fromObject(object: { [k: string]: any }): orderer.ChannelRestrictions;

        /**
         * Creates a plain object from a ChannelRestrictions message. Also converts values to other types if specified.
         * @param message ChannelRestrictions
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.ChannelRestrictions, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChannelRestrictions to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KafkaMessage. */
    interface IKafkaMessage {

        /** KafkaMessage regular */
        regular?: (orderer.IKafkaMessageRegular|null);

        /** KafkaMessage timeToCut */
        timeToCut?: (orderer.IKafkaMessageTimeToCut|null);

        /** KafkaMessage connect */
        connect?: (orderer.IKafkaMessageConnect|null);
    }

    /** Represents a KafkaMessage. */
    class KafkaMessage implements IKafkaMessage {

        /**
         * Constructs a new KafkaMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IKafkaMessage);

        /** KafkaMessage regular. */
        public regular?: (orderer.IKafkaMessageRegular|null);

        /** KafkaMessage timeToCut. */
        public timeToCut?: (orderer.IKafkaMessageTimeToCut|null);

        /** KafkaMessage connect. */
        public connect?: (orderer.IKafkaMessageConnect|null);

        /** KafkaMessage Type. */
        public Type?: ("regular"|"timeToCut"|"connect");

        /**
         * Creates a new KafkaMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KafkaMessage instance
         */
        public static create(properties?: orderer.IKafkaMessage): orderer.KafkaMessage;

        /**
         * Encodes the specified KafkaMessage message. Does not implicitly {@link orderer.KafkaMessage.verify|verify} messages.
         * @param message KafkaMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IKafkaMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KafkaMessage message, length delimited. Does not implicitly {@link orderer.KafkaMessage.verify|verify} messages.
         * @param message KafkaMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IKafkaMessage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KafkaMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KafkaMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.KafkaMessage;

        /**
         * Decodes a KafkaMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KafkaMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.KafkaMessage;

        /**
         * Verifies a KafkaMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KafkaMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KafkaMessage
         */
        public static fromObject(object: { [k: string]: any }): orderer.KafkaMessage;

        /**
         * Creates a plain object from a KafkaMessage message. Also converts values to other types if specified.
         * @param message KafkaMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.KafkaMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KafkaMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KafkaMessageRegular. */
    interface IKafkaMessageRegular {

        /** KafkaMessageRegular payload */
        payload?: (Uint8Array|null);

        /** KafkaMessageRegular configSeq */
        configSeq?: (number|Long|null);

        /** KafkaMessageRegular class */
        "class"?: (orderer.KafkaMessageRegular.Class|null);

        /** KafkaMessageRegular originalOffset */
        originalOffset?: (number|Long|null);
    }

    /** Represents a KafkaMessageRegular. */
    class KafkaMessageRegular implements IKafkaMessageRegular {

        /**
         * Constructs a new KafkaMessageRegular.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IKafkaMessageRegular);

        /** KafkaMessageRegular payload. */
        public payload: Uint8Array;

        /** KafkaMessageRegular configSeq. */
        public configSeq: (number|Long);

        /** KafkaMessageRegular class. */
        public class: orderer.KafkaMessageRegular.Class;

        /** KafkaMessageRegular originalOffset. */
        public originalOffset: (number|Long);

        /**
         * Creates a new KafkaMessageRegular instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KafkaMessageRegular instance
         */
        public static create(properties?: orderer.IKafkaMessageRegular): orderer.KafkaMessageRegular;

        /**
         * Encodes the specified KafkaMessageRegular message. Does not implicitly {@link orderer.KafkaMessageRegular.verify|verify} messages.
         * @param message KafkaMessageRegular message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IKafkaMessageRegular, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KafkaMessageRegular message, length delimited. Does not implicitly {@link orderer.KafkaMessageRegular.verify|verify} messages.
         * @param message KafkaMessageRegular message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IKafkaMessageRegular, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KafkaMessageRegular message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KafkaMessageRegular
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.KafkaMessageRegular;

        /**
         * Decodes a KafkaMessageRegular message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KafkaMessageRegular
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.KafkaMessageRegular;

        /**
         * Verifies a KafkaMessageRegular message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KafkaMessageRegular message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KafkaMessageRegular
         */
        public static fromObject(object: { [k: string]: any }): orderer.KafkaMessageRegular;

        /**
         * Creates a plain object from a KafkaMessageRegular message. Also converts values to other types if specified.
         * @param message KafkaMessageRegular
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.KafkaMessageRegular, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KafkaMessageRegular to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace KafkaMessageRegular {

        /** Class enum. */
        enum Class {
            UNKNOWN = 0,
            NORMAL = 1,
            CONFIG = 2
        }
    }

    /** Properties of a KafkaMessageTimeToCut. */
    interface IKafkaMessageTimeToCut {

        /** KafkaMessageTimeToCut blockNumber */
        blockNumber?: (number|Long|null);
    }

    /** Represents a KafkaMessageTimeToCut. */
    class KafkaMessageTimeToCut implements IKafkaMessageTimeToCut {

        /**
         * Constructs a new KafkaMessageTimeToCut.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IKafkaMessageTimeToCut);

        /** KafkaMessageTimeToCut blockNumber. */
        public blockNumber: (number|Long);

        /**
         * Creates a new KafkaMessageTimeToCut instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KafkaMessageTimeToCut instance
         */
        public static create(properties?: orderer.IKafkaMessageTimeToCut): orderer.KafkaMessageTimeToCut;

        /**
         * Encodes the specified KafkaMessageTimeToCut message. Does not implicitly {@link orderer.KafkaMessageTimeToCut.verify|verify} messages.
         * @param message KafkaMessageTimeToCut message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IKafkaMessageTimeToCut, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KafkaMessageTimeToCut message, length delimited. Does not implicitly {@link orderer.KafkaMessageTimeToCut.verify|verify} messages.
         * @param message KafkaMessageTimeToCut message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IKafkaMessageTimeToCut, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KafkaMessageTimeToCut message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KafkaMessageTimeToCut
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.KafkaMessageTimeToCut;

        /**
         * Decodes a KafkaMessageTimeToCut message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KafkaMessageTimeToCut
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.KafkaMessageTimeToCut;

        /**
         * Verifies a KafkaMessageTimeToCut message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KafkaMessageTimeToCut message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KafkaMessageTimeToCut
         */
        public static fromObject(object: { [k: string]: any }): orderer.KafkaMessageTimeToCut;

        /**
         * Creates a plain object from a KafkaMessageTimeToCut message. Also converts values to other types if specified.
         * @param message KafkaMessageTimeToCut
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.KafkaMessageTimeToCut, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KafkaMessageTimeToCut to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KafkaMessageConnect. */
    interface IKafkaMessageConnect {

        /** KafkaMessageConnect payload */
        payload?: (Uint8Array|null);
    }

    /** Represents a KafkaMessageConnect. */
    class KafkaMessageConnect implements IKafkaMessageConnect {

        /**
         * Constructs a new KafkaMessageConnect.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IKafkaMessageConnect);

        /** KafkaMessageConnect payload. */
        public payload: Uint8Array;

        /**
         * Creates a new KafkaMessageConnect instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KafkaMessageConnect instance
         */
        public static create(properties?: orderer.IKafkaMessageConnect): orderer.KafkaMessageConnect;

        /**
         * Encodes the specified KafkaMessageConnect message. Does not implicitly {@link orderer.KafkaMessageConnect.verify|verify} messages.
         * @param message KafkaMessageConnect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IKafkaMessageConnect, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KafkaMessageConnect message, length delimited. Does not implicitly {@link orderer.KafkaMessageConnect.verify|verify} messages.
         * @param message KafkaMessageConnect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IKafkaMessageConnect, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KafkaMessageConnect message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KafkaMessageConnect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.KafkaMessageConnect;

        /**
         * Decodes a KafkaMessageConnect message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KafkaMessageConnect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.KafkaMessageConnect;

        /**
         * Verifies a KafkaMessageConnect message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KafkaMessageConnect message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KafkaMessageConnect
         */
        public static fromObject(object: { [k: string]: any }): orderer.KafkaMessageConnect;

        /**
         * Creates a plain object from a KafkaMessageConnect message. Also converts values to other types if specified.
         * @param message KafkaMessageConnect
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.KafkaMessageConnect, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KafkaMessageConnect to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KafkaMetadata. */
    interface IKafkaMetadata {

        /** KafkaMetadata lastOffsetPersisted */
        lastOffsetPersisted?: (number|Long|null);

        /** KafkaMetadata lastOriginalOffsetProcessed */
        lastOriginalOffsetProcessed?: (number|Long|null);

        /** KafkaMetadata lastResubmittedConfigOffset */
        lastResubmittedConfigOffset?: (number|Long|null);
    }

    /** Represents a KafkaMetadata. */
    class KafkaMetadata implements IKafkaMetadata {

        /**
         * Constructs a new KafkaMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: orderer.IKafkaMetadata);

        /** KafkaMetadata lastOffsetPersisted. */
        public lastOffsetPersisted: (number|Long);

        /** KafkaMetadata lastOriginalOffsetProcessed. */
        public lastOriginalOffsetProcessed: (number|Long);

        /** KafkaMetadata lastResubmittedConfigOffset. */
        public lastResubmittedConfigOffset: (number|Long);

        /**
         * Creates a new KafkaMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KafkaMetadata instance
         */
        public static create(properties?: orderer.IKafkaMetadata): orderer.KafkaMetadata;

        /**
         * Encodes the specified KafkaMetadata message. Does not implicitly {@link orderer.KafkaMetadata.verify|verify} messages.
         * @param message KafkaMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: orderer.IKafkaMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KafkaMetadata message, length delimited. Does not implicitly {@link orderer.KafkaMetadata.verify|verify} messages.
         * @param message KafkaMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: orderer.IKafkaMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KafkaMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KafkaMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): orderer.KafkaMetadata;

        /**
         * Decodes a KafkaMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KafkaMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): orderer.KafkaMetadata;

        /**
         * Verifies a KafkaMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KafkaMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KafkaMetadata
         */
        public static fromObject(object: { [k: string]: any }): orderer.KafkaMetadata;

        /**
         * Creates a plain object from a KafkaMetadata message. Also converts values to other types if specified.
         * @param message KafkaMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: orderer.KafkaMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KafkaMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}
