>>> fabric-shim
npm run lint & npm test 2>&1 

> fabric-shim@2.2.0 test /home/vsts/work/1/s/libraries/fabric-shim
> nyc mocha --recursive 'test/unit/**/*.js' --reporter azure-mocha-reporter


> fabric-shim@2.2.0 lint /home/vsts/work/1/s/libraries/fabric-shim
> eslint ./lib

../../../../../apis/fabric-contract-api/lib/jsontransactionserializer.js
[Function: JSONSerializer]
==============================================================================


  Chaincode
    Chaincode 'spi' interface
      ✓ should be able to call the init method
      ✓ should be able to call the invoke method
      ✓ should only have the Init and Invoke
    Start()
      ✓ should throw an error if no arguments passed
      ✓ should throw an error if string argument passed
      ✓ should throw an error if null argument passed
      ✓ should throw an error if object missing init passed as argument
      ✓ should throw an error if object missing invoke passed as argument
2020-07-02T12:39:44.799Z info [c-api:lib/chaincode.js]                            Registering with peer localhost:7051 as chaincode "mycc"  
      ✓ should start when passed init and invoke
2020-07-02T12:39:44.804Z info [c-api:lib/chaincode.js]                            Registering with peer localhost:7051 as chaincode "mycc"  
      ✓ should delete unnecessary arguments passed to the CLI before passing on
      TLS handling
        ✓ should throw an error when CORE_TLS_CLIENT_KEY_PATH env var not set
        ✓ should throw an error when CORE_TLS_CLIENT_KEY_PATH env var set but CORE_TLS_CLIENT_CERT_PATH env var not set
2020-07-02T12:39:44.825Z info [c-api:lib/chaincode.js]                            Registering with peer localhost:7051 as chaincode "mycc"  
        ✓ should call handler.chat() with the correct object and output a message
2020-07-02T12:39:44.834Z info [c-api:lib/chaincode.js]                            Registering with peer localhost:7051 as chaincode "mycc"  
        ✓ should load the opts certificate attributes as JSON strings with the correct properties
    parsePeerUrlFcn
2020-07-02T12:39:44.838Z error [c-api:lib/chaincode.js]                           The "peer.address" program argument must be set to a legitimate value of <host>:<port>  
      ✓ should throw an error if peer.address not set
2020-07-02T12:39:44.841Z error [c-api:lib/chaincode.js]                           The "peer.address" program argument can not be set to an "http(s)" url, use grpc(s) or omit the protocol  
      ✓ should throw an error if peer.address set to url
      ✓ should use grpc when URL already has that prefix
      ✓ should use grpcs when URL already has that prefix
      ✓ should use grpc when CORE_PEER_TLS_ENABLED env var is not set
      ✓ should use grpc when CORE_PEER_TLS_ENABLED env var is set to false
      ✓ should use grpc when CORE_PEER_TLS_ENABLED env var is set to a string FALSE
      ✓ should use grpcs when CORE_PEER_TLS_ENABLED env var is set to true
      ✓ should use grpcs when CORE_PEER_TLS_ENABLED env var is set to a string TRUE
    response
      ✓ should let the code response an error
      ✓ should handle an empty success
      ✓ should handle a success with message
    newLogger()
      ✓ should use shim when calling getLogger and no name passed
      ✓ should use shim when calling getLogger and name passed
    server()
      ✓ should create a ChaincodeServer instance

  fabric-chaincode-node cli
    Main test
      ✓ should setup yargs correctly
      ✓ should handle resolved promise  correctly
2020-07-02T12:39:44.894Z info [c-api:fabric-shim/cli]                             
Command succeeded
  
      ✓ should handle rejected promise  correctly
2020-07-02T12:39:44.897Z info [c-api:fabric-shim/cli]                             undefined
Command failed
  

  Client-Identity
    ✓ should throw an error when using a bad cert
    Certificate with values
      ✓ should have correct mspId
      ✓ should return correct ID bytes
      ✓ should return correct value on getID()
      ✓ should have correct attrs
      ✓ should return the value when getAttributeValue() called with known attribute
      ✓ should return null when getAttributeValue() called with unknown attribute
      ✓ should return true when value provided matches known attribute in assertAttributeValue()
      ✓ should return false when value provided does not match known attribute in assertAttributeValue()
      ✓ should return false when unknown attribute in assertAttributeValue()
    Certificate with multiple attributes
      ✓ should have correct attributes
    Certificate without values
      ✓ should have correct mspId
      ✓ should have not attributes
    Certificate with long DNs
      ✓ should return correct value on getID()

  chaincode cmd
`sandbox.create()` is deprecated. Use default sandbox at `sinon.sandbox` or create new sandboxes with `sinon.createSandbox()`
    ✓ should configure the builder function
`sandbox.create()` is deprecated. Use default sandbox at `sinon.sandbox` or create new sandboxes with `sinon.createSandbox()`
    ✓ should handle correctly
    #getArgs
`sandbox.create()` is deprecated. Use default sandbox at `sinon.sandbox` or create new sandboxes with `sinon.createSandbox()`
      ✓ should return yargs when called via cli name
`sandbox.create()` is deprecated. Use default sandbox at `sinon.sandbox` or create new sandboxes with `sinon.createSandbox()`
      ✓ should use yargs parser on process.argv when not called with cli name
`sandbox.create()` is deprecated. Use default sandbox at `sinon.sandbox` or create new sandboxes with `sinon.createSandbox()`
      ✓ should throw an error if a required field is missing

  fabric-chaincode-node metadata cmd launcher
    cmd method tests
      ✓ should have the correct command and description
      ✓ should call yargs correctly

  GenerateCommand
    #builder function
      ✓ should have the correct command and description
      ✓ should call yargs correctly
    #handler function
      ✓ should call the handler function correctly

  generate
    #handler
      ✓ should write the contract metadata to a json file when no file extension is specified
      ✓ should write the contract metadata to a json file when the .json file extension is specified
      ✓ should write the contract metadata to the specified file extension when a non .json extension is specified
      ✓ should log out the contract metadata to when no file-name arg is passed 

  server cmd
    .builder
      ✓ should configure the builder function
    .handle
      ✓ should handle properly and call bootstrap
    .getArgs
      ✓ should return the arguments properly
      ✓ should return the TLS arguments properly
      ✓ should return the mutual TLS arguments properly
      ✓ should return the TLS arguments with PEM files properly
    parse arguments
      ✓ should parse the arguments successfully
      ✓ should parse the arguments successfully with TLS options
fabric-chaincode-node server --chaincode-address 0.0.0.0:9999 --chaincode-id
mycc_v0:abcdef12345678...
fabric-chaincode-node server --chaincode-address 0.0.0.0:9999 --chaincode-id
mycc_v0:abcdef12345678...
fabric-chaincode-node server --chaincode-address 0.0.0.0:9999 --chaincode-id
mycc_v0:abcdef12345678...

Options:
  --help                                  Show help                    [boolean]
  --version                               Show version number          [boolean]
  --chaincode-address                                        [string] [required]
  --grpc.max_send_message_length                          [number] [default: -1]
  --grpc.max_receive_message_length                       [number] [default: -1]
  --grpc.keepalive_time_ms                            [number] [default: 110000]
  --grpc.http2.min_time_between_pings_ms              [number] [default: 110000]
  --grpc.keepalive_timeout_ms                          [number] [default: 20000]
  --grpc.http2.max_pings_without_data                      [number] [default: 0]
  --grpc.keepalive_permit_without_calls                    [number] [default: 1]
  --chaincode-id                                             [string] [required]
  --chaincode-tls-cert-file                                             [string]
  --chaincode-tls-cert-path                                             [string]
  --chaincode-tls-key-file                                              [string]
  --chaincode-tls-key-path                                              [string]
  --chaincode-tls-client-cacert-file                                    [string]
  --chaincode-tls-client-cacert-path                                    [string]
  --module-path  [string] [default: "/home/vsts/work/1/s/libraries/fabric-shim"]

A TLS option is set but no cert is specified
      ✓ should throw when conflicting arguments are passed
      ✓ should throw when only TLS key is passed
      ✓ should throw when only TLS cert is passed

  bootstrap.js
    #register
      ✓ should pass on the register to the shim
      ✓ should pass on the register to the shim in the server mode
    #bootstrap
      ✓ should correctly call the register method
      ✓ should correctly call the register method in the server mode
    #getInfoFromContract
      ✓ should use the main class defined in the package.json
      ✓ should use the main class defined in the package.json with a single element
(node:3520) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 uncaughtException listeners added to [process]. Use emitter.setMaxListeners() to increase limit
      ✓ should throw an error if there is no json.main
      ✓ should use the main class defined with contracts exported, and custom serialization
      ✓ should throw an error if there is no transaction property
    #getMetadata
2020-07-02T12:39:45.440Z info [c-api:contracts-spi/bootstrap.js]                  Metadata file has been located  
      ✓ should handle when there are files available
2020-07-02T12:39:45.476Z info [c-api:contracts-spi/bootstrap.js]                  No metadata file supplied in contract, introspection will generate all the data  
      ✓ should handle when files not available
    #loadAndValidateMetadata
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
2020-07-02T12:39:45.538Z info [c-api:contracts-spi/bootstrap.js]                  Metadata validated against schema correctly  
      ✓ validate and return the metadata
      ✓ fail to validate and throw an error
      - Correct schema path is pointed to in the validate method
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored http://json-schema.org/draft-07/schema#
schema $id ignored https://example.com/person.schema.json
schema $id ignored https://example.com/person.schema.json
schema $id ignored https://example.com/person.schema.json
schema $id ignored https://example.com/person.schema.json
2020-07-02T12:39:45.614Z info [c-api:contracts-spi/bootstrap.js]                  Metadata validated against schema correctly  
      ✓ Should correct validate a schema

  chaincodefromcontract
    #constructor
      ✓ should handle no classes being passed in
      ✓ should handle missing serialization information
2020-07-02T12:39:45.620Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle a single class being passed as a contract
2020-07-02T12:39:45.622Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle a case where the metadata is incompatible with code
    #_compileSchemas
2020-07-02T12:39:45.625Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle no complex objects being available
2020-07-02T12:39:45.627Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle complex objects being available
    #_resolveContractImplementations
2020-07-02T12:39:45.631Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.631Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle a single class being passed as a contract
      ✓ should handle a single class being passed that is not valid
2020-07-02T12:39:45.635Z info [c-api:./lib/contract.js]                           Creating new Contract "beta" 
2020-07-02T12:39:45.636Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.636Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle a two classes being passed as a contract
2020-07-02T12:39:45.638Z info [c-api:./lib/contract.js]                           Creating new Contract "beta" 
2020-07-02T12:39:45.639Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.639Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle the default tag being used
    #init
2020-07-02T12:39:45.641Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.641Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
<Buffer 44 65 66 61 75 6c 74 20 69 6e 69 74 69 61 74 6f 72 20 73 75 63 63 65 73 73 66 75 6c 2e>
      ✓ should handle no args
2020-07-02T12:39:45.656Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle a single class being passed as a contract
2020-07-02T12:39:45.659Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle a single class being passed as a contract
    #invoke
2020-07-02T12:39:45.661Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.662Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle no args
2020-07-02T12:39:45.665Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle a single class being passed as a contract
2020-07-02T12:39:45.668Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
2020-07-02T12:39:45.668Z info [c-api:./lib/contract.js]                           Creating new Contract "logging" 
2020-07-02T12:39:45.678Z info [c-api:logging]                                     info  
      ✓ should pass the logging object to contracts
    #_splitFunctionName
      ✓ should handle the usual case of ns:fn
      ✓ should handle the case of no contractName explicit
      ✓ should handle the case of no contractName implict
      ✓ should handle the case of no input
      ✓ should handle the case of multiple :
    #invokeFunctionality
2020-07-02T12:39:45.687Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
2020-07-02T12:39:45.688Z error [c-api:contracts-spi/chaincodefromcontract.js]     a logging prefix Error: Contract name is not known: name  
Error: Contract name is not known: name
    at ChaincodeFromContract.invokeFunctionality (/home/vsts/work/1/s/libraries/fabric-shim/lib/contract-spi/chaincodefromcontract.js:62:1139)
    at Context.<anonymous> (/home/vsts/work/1/s/libraries/fabric-shim/test/unit/contract-spi/chaincodefromcontract.js:633:22)
    at callFn (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:387:21)
    at Test.Runnable.run (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:379:7)
    at Runner.runTest (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:535:10)
    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:653:12
    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:447:14)
    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:457:7
    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:362:14)
    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:420:7
    at done (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:334:5)
    at callFn (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:410:7)
    at Hook.Runnable.run (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:379:7)
    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:384:10)
    at Immediate._onImmediate (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:425:5)
    at processImmediate (internal/timers.js:439:21)
      ✓ should handle missing function
2020-07-02T12:39:45.691Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
undefined
      ✓ should handle valid contract name, but missing function
2020-07-02T12:39:45.695Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
error
    at Object.fake.exceptionCreator (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/default-behaviors.js:18:32)
    at Object.invoke (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/behavior.js:151:35)
    at Object.functionStub (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/stub.js:130:47)
    at Function.invoke (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/spy.js:302:51)
    at Object.stub [as unknownTransaction] (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/spy.js:157:22)
    at ChaincodeFromContract.invokeFunctionality (/home/vsts/work/1/s/libraries/fabric-shim/lib/contract-spi/chaincodefromcontract.js:75:24)
    at Context.<anonymous> (/home/vsts/work/1/s/libraries/fabric-shim/test/unit/contract-spi/chaincodefromcontract.js:752:22)
    at callFn (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:387:21)
    at Test.Runnable.run (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:379:7)
    at Runner.runTest (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:535:10)
    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:653:12
    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:447:14)
    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:457:7
    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:362:14)
    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:420:7
    at done (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:334:5)
    at callFn (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:410:7)
    at Hook.Runnable.run (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:379:7)
    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:384:10)
    at Immediate._onImmediate (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:425:5)
    at processImmediate (internal/timers.js:439:21) {
  name: 'error'
}
      ✓ should handle valid contract name, but missing function and throws error
2020-07-02T12:39:45.701Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
undefined
      ✓ should handle valid contract name, with valid function
2020-07-02T12:39:45.708Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
undefined
      ✓ should handle functions with returned values schema
    #_checkAgainstSuppliedMetadata
      ✓ should return empty array when no issue
      ✓ should return empty array when metadata has no field contracts
      ✓ should return empty array when missing a contract
    #_processContractInfo
2020-07-02T12:39:45.718Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.718Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should be able to handle no annotations suppled
2020-07-02T12:39:45.720Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.721Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should be able to handle no annotations suppled
    #_processContractTransactions
2020-07-02T12:39:45.723Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.723Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle no transaction annotations used, ignoring functions that match in name to ignore array
2020-07-02T12:39:45.726Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.726Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle no transaction annotations used, ignoring functions that start with _
2020-07-02T12:39:45.729Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.729Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should not add submitTx to the system contract functions
2020-07-02T12:39:45.732Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.732Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle transaction annotations being used
2020-07-02T12:39:45.734Z info [c-api:./lib/contract.js]                           Creating new Contract "alpha" 
2020-07-02T12:39:45.735Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should handle transactions with no arguments
    #_augmentMetadataFromCode
      ✓ should not add extra detail for metadata, info and components when metadata supplied with those fields
      ✓ should use passed info
      ✓ should handle contracts and remove underscore lead properties of contractInstance
      ✓ should correctly retrieve info with the constructor title and version data
      ✓ should fill in info when there is no constructor title and version data
      ✓ should fill in components field when not set
      ✓ should fill in components field when not set and reflect fails
      ✓ should fill in schema when not set
    #helper constructors
      ✓ should create the DataMarshall

  datamarshall.js
    #constructor
      ✓ should create plain object ok
      ✓ should create plain object ok
    #toWireBuffer
      ✓ should jsonSerialized buffering
      ✓ should handle no schema passed
    #fromWireBuffer
      ✓ should return the same data as the serializer from buffer
      ✓ should handle no validationData
      ✓ should handle no schema
    #handleParameters
      ✓ should handle function with no parameters and none passed
      ✓ should handle function with no parameters but some passed
2020-07-02T12:39:45.789Z error [c-api:contracts-spi/datamarshall.js]              undefined Expected 1 parameters, but 0 have been supplied  
      ✓ should handle different length lists
      ✓ should handle error when schema has not useful fields
      ✓ should handle error when type invalid
      ✓ should handle when type invalid for $ref
      ✓ should push valid values to returned array for primitve types

  SystemContract
    #constructor
2020-07-02T12:39:45.810Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should create correctly
    #GetMetadata
2020-07-02T12:39:45.813Z info [c-api:./lib/contract.js]                           Creating new Contract "org.hyperledger.fabric" 
      ✓ should get the buffer

  Handler
    QMsg
      ✓ should set its variables with values passed in the constructor
      getMsg
        ✓ should return the value of msg
      getMsgTxContextId
        ✓ should return the value of msg.channel_id concatenated with msg.txid
      getMethod
        ✓ should return the value of method
      success
        ✓ should call the resolve function
      fail
        ✓ should call the reject function
    MsgQueueHandler
      ✓ should setup its variables on construction
      queueMsg
        ✓ should add message to the queue and call sendMsg and handle when txContentId not in txQueues
        ✓ should add message to the queue and not call call sendMsg when txContentId in txQueues and is empty array
        ✓ should add message to the queue and not call call sendMsg when txContentId in txQueues and already has value in array
      handleMsgResponse
        ✓ should do nothing if qMsg does not exist for txContextId
        ✓ should call qMsg success when parseResponse does not throw an error _removeCurrentAndSendNextMsg
        ✓ should call qMsg fail when parseResponse does throw an error _removeCurrentAndSendNextMsg
      _getCurrentMsg
        ✓ should get the message at the top of the queue for a txContextId
        ✓ should return undefined when queue is empty for a txContextId
2020-07-02T12:39:45.828Z error [c-api:lib/handler.js]                             Failed to find a message for transaction context id theChannelIDaTX  
        ✓ should return undefined when queue does not exist for a txContextId
      _removeCurrentAndSendNextMsg
        ✓ should delete the current message and send the next for a txContentId
        ✓ should delete the queue if no messages left after current is deleted for a txContentId
        ✓ should do nothing if no queue is found for a txContentId
      _sendMsg
        ✓ should do nothing if no QMsg found for a txContextId
        ✓ should write to the stream the current message
        ✓ should call fail on the QMsg if stream write errors
    ChaincodeSupportClient
      ✓ should throw an error when chaincode not passed
      ✓ should throw an error if argument does not match chaincode format
      ✓ should throw an error if argument only part matches chaincode format
      ✓ should throw an error if argument missing URL argument
      ✓ should throw an error if URL argument does not use grpc as protocol
      ✓ should set endpoint, client and default timeout
      ✓ should override the default request timeout if value passed
      ✓ should store additional grpc options
      ✓ should preserve casing in handler addr
      ✓ should throw an error if connection secure and certificate not passed
      ✓ should throw an error if connection secure encoded private key not passed as opt
      ✓ should throw an error if connection secure encoded private key not passed as opt
      ✓ should set endpoint, client and default timeout for a secure connection
      ✓ should set grpc ssl options when ssl-target-name-override passed
      close
        ✓ should call end on the stream
      chat
        ✓ should create an instance of ChaincodeMessageHandler and pass the argument
      toString
        ✓ should return ChaincodeSupportClient object as a string with the URL
    ChaincodeMessageHandler
      chat
        ✓ should create instance of MsgQueueHandler, register the client, setup listeners and write
        stream.on.data
2020-07-02T12:39:45.950Z error [c-api:lib/handler.js]                             Chaincode is in "created" state, can only process messages of type "registered", but received "NOT REGISTERED"  
          ✓ should throw error when in state created and MSG_TYPE not REGISTERED
2020-07-02T12:39:45.988Z info [c-api:lib/handler.js]                              Successfully registered with peer node. State transferred to "established"  
2020-07-02T12:39:45.988Z error [c-api:lib/handler.js]                             Chaincode is in "ready" state, can only process messages of type "established", but received "NOT REGISTERED"  
          ✓ should throw error when in state established and MSG_TYPE not READY
2020-07-02T12:39:46.008Z info [c-api:lib/handler.js]                              Successfully registered with peer node. State transferred to "established"  
2020-07-02T12:39:46.008Z info [c-api:lib/handler.js]                              Successfully established communication with peer node. State transferred to "ready"  
          ✓ should do nothing when in state ready and MSG_TYPE equals REGISTERED
2020-07-02T12:39:46.040Z info [c-api:lib/handler.js]                              Successfully registered with peer node. State transferred to "established"  
2020-07-02T12:39:46.040Z info [c-api:lib/handler.js]                              Successfully established communication with peer node. State transferred to "ready"  
          ✓ should do nothing when in state ready and MSG_TYPE equals READY
2020-07-02T12:39:46.080Z info [c-api:lib/handler.js]                              Successfully registered with peer node. State transferred to "established"  
2020-07-02T12:39:46.080Z info [c-api:lib/handler.js]                              Successfully established communication with peer node. State transferred to "ready"  
          ✓ should call handleMsgResponse when in state ready and MSG_TYPE equals RESPONSE
2020-07-02T12:39:46.114Z info [c-api:lib/handler.js]                              Successfully registered with peer node. State transferred to "established"  
2020-07-02T12:39:46.114Z info [c-api:lib/handler.js]                              Successfully established communication with peer node. State transferred to "ready"  
          ✓ should call handleMsgResponse when in state ready and MSG_TYPE equals ERROR
2020-07-02T12:39:46.145Z info [c-api:lib/handler.js]                              Successfully registered with peer node. State transferred to "established"  
2020-07-02T12:39:46.146Z info [c-api:lib/handler.js]                              Successfully established communication with peer node. State transferred to "ready"  
          ✓ should call handleInit when in state ready and MSG_TYPE equals INIT
2020-07-02T12:39:46.172Z info [c-api:lib/handler.js]                              Successfully registered with peer node. State transferred to "established"  
2020-07-02T12:39:46.172Z info [c-api:lib/handler.js]                              Successfully established communication with peer node. State transferred to "ready"  
          ✓ should call handleTransaction when in state ready and MSG_TYPE equals TRANSACTION
2020-07-02T12:39:46.212Z info [c-api:lib/handler.js]                              Successfully registered with peer node. State transferred to "established"  
2020-07-02T12:39:46.212Z info [c-api:lib/handler.js]                              Successfully established communication with peer node. State transferred to "ready"  
2020-07-02T12:39:46.213Z error [c-api:lib/handler.js]                             Received unknown message from the peer. Exiting.  
          ✓ should end the process with value 1
        stream.on.end
          ✓ should cancel the stream
        stream.on.error
2020-07-02T12:39:46.240Z error [c-api:lib/handler.js]                             Chat stream with peer - on error: %j {} 
          ✓ should end the stream
2020-07-02T12:39:46.253Z error [c-api:lib/handler.js]                             Chat stream with peer - on error: %j "Error\n    at Context.<anonymous> (/home/vsts/work/1/s/libraries/fabric-shim/test/unit/handler.js:831:35)\n    at callFn (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:387:21)\n    at Test.Runnable.run (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:379:7)\n    at Runner.runTest (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:535:10)\n    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:653:12\n    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:447:14)\n    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:457:7\n    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:362:14)\n    at Immediate._onImmediate (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:425:5)\n    at processImmediate (internal/timers.js:439:21)" 
          ✓ should end the  with error
      handleInit
        ✓ should call handleMessage
      handleTransaction
        ✓ should call handleMessage
      handleGetState
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen resolves
      handlePutState
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen resolves
      handleDeleteState
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen rejects
      handlePutStateMetadata
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen rejects
      handleGetPrivateDataHash
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen rejects
      handleGetStateMetadata
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen rejects
      handleGetStateByRange
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen resolves
        ✓ should resolve with metadata when _askPeerAndListen resolves
      handleQueryStateNext
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen resolves
      handleQueryStateClose
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen resolves
      handleGetQueryResult
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen rejects
        ✓ handleGetQueryResult with metadata should resolve when _askPeerAndListen resolves
      handleGetHistoryForKey
        ✓ should resolve when _askPeerAndListen resolves
        ✓ should reject when _askPeerAndListen resolves
      handleInvokeChaincode
        ✓ should return decoded response when chaincode message type COMPLETED
        ✓ should throw an error when _askPeerAndListen resolves with an error
        ✓ should reject when _askPeerAndListen resolves
        ✓ should return nothing chaincode message type not COMPLETED or ERROR
      _askPeerAndListen
        ✓ should return a new promise with value of queueMsg result
      toString
        ✓ should return ChaincodeSupportClient object as a string with the URL
    handleMessage
      Error
2020-07-02T12:39:46.736Z error [c-api:lib/handler.js]                             %s Incorrect payload format. Sending ERROR message back to peer "[theChannelID-aTX]" 
        ✓ should handle an error decoding the payload
2020-07-02T12:39:46.737Z error [c-api:lib/handler.js]                             Failed to construct a chaincode stub instance from the INIT message: an error
    at Object.fake.exceptionCreator (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/default-behaviors.js:18:32)
    at Object.invoke (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/behavior.js:151:35)
    at functionStub (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/stub.js:130:47)
    at Function.invoke (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/spy.js:302:51)
    at stub (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/sinon/7.5.0/node_modules/sinon/lib/sinon/spy.js:157:22)
    at handleMessage (/home/vsts/work/1/s/libraries/fabric-shim/lib/handler.js:104:810)
    at Context.<anonymous> (/home/vsts/work/1/s/libraries/fabric-shim/test/unit/handler.js:1628:23)
    at callFn (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:387:21)
    at Test.Runnable.run (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:379:7)
    at Runner.runTest (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:535:10)
    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:653:12
    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:447:14)
    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:457:7
    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:362:14)
    at /home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:420:7
    at done (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:334:5)
    at callFn (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:410:7)
    at Hook.Runnable.run (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runnable.js:379:7)
    at next (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:384:10)
    at Immediate._onImmediate (/home/vsts/work/1/s/common/temp/node_modules/.pnpm/registry.npmjs.org/mocha/6.2.2/node_modules/mocha/lib/runner.js:425:5)
    at processImmediate (internal/timers.js:439:21) {
  name: 'an error'
}  
        ✓ should handle error creating a chaincode stub
2020-07-02T12:39:46.739Z error [c-api:lib/handler.js]                             [theChannelID-aTX] Calling chaincode Init() has not called success or error.  
2020-07-02T12:39:46.739Z error [c-api:lib/handler.js]                             [theChannelID-aTX] Calling chaincode Init() returned error response [[theChannelID-aTX] Calling chaincode Init() has not called success or error.]. Sending ERROR message back to peer  
        ✓ should handle chaincode.Init returning nothing
2020-07-02T12:39:46.740Z error [c-api:lib/handler.js]                             [theChannelID-aTX] Calling chaincode Invoke() has not called success or error.  
2020-07-02T12:39:46.741Z error [c-api:lib/handler.js]                             [theChannelID-aTX] Calling chaincode Invoke() returned error response [[theChannelID-aTX] Calling chaincode Invoke() has not called success or error.]. Sending ERROR message back to peer  
        ✓ should handle chaincode.Invoke returning nothing
2020-07-02T12:39:46.742Z error [c-api:lib/handler.js]                             [theChannelID-aTX] Calling chaincode Init() has not called success or error.  
2020-07-02T12:39:46.742Z error [c-api:lib/handler.js]                             [theChannelID-aTX] Calling chaincode Init() returned error response [[theChannelID-aTX] Calling chaincode Init() has not called success or error.]. Sending ERROR message back to peer  
        ✓ should handle chaincode.Init returning no status
2020-07-02T12:39:46.744Z error [c-api:lib/handler.js]                             [theChannelID-aTX] Calling chaincode Invoke() has not called success or error.  
2020-07-02T12:39:46.744Z error [c-api:lib/handler.js]                             [theChannelID-aTX] Calling chaincode Invoke() returned error response [[theChannelID-aTX] Calling chaincode Invoke() has not called success or error.]. Sending ERROR message back to peer  
        ✓ should handle chaincode.Invoke returning no status
      Complete
2020-07-02T12:39:46.746Z info [c-api:lib/handler.js]                              [theChannelID-aTX] Calling chaincode Init() succeeded. Sending COMPLETED message back to peer  
        ✓ should write a COMPLETE message when successful init
2020-07-02T12:39:46.747Z info [c-api:lib/handler.js]                              [theChannelID-aTX] Calling chaincode Invoke() succeeded. Sending COMPLETED message back to peer  
        ✓ should write a COMPLETE message when successful invoke
    createStub
      ✓ should return a new instance of Stub
    newErrorMsg
      ✓ should return an object for the error message
    handleGetStateMetadata
      ✓ should success
    parseResponse
      ✓ should throw an error when type not MSG_TYPE RESPONSE or ERROR
      ✓ should throw an error when type MSG_TYPE ERROR
      ✓ should return the payload when using an unknown method
      ✓ should return the payload when using GetState for method
      ✓ should return the payload when using PutState for method
      ✓ should return QueryResponse.decoded payload for QueryStateClose
      ✓ should return QueryResponse.decoded payload for QueryStateNext
      ✓ should return ChaincodeMessage.decoded payload for InvokeChaincode
      ✓ should return a StateQueryIterator for GetStateByRange
      ✓ should decode metadata
      ✓ should return a StateQueryIterator for GetQueryResult
      ✓ should return a HistoryQueryIterator for GetHistoryForKey
      ✓ shold decode state metadata for GetStateMetadata

  Iterator
    CommonIterator
      ✓ should set the variables using the arguments in the constructor
      close
        ✓ should return handler.handleQueryStateClose
      _getResultFromBytes
        ✓ should return KV decode on resultbytes for a QUERY type
        ✓ should return KeyModification decode on resultbytes for a HISTORY type
        ✓ should throw an error for unknown types
      _createAndEmitResult
        ✓ should return value of first element of results converted from bytes and done false when hasMore false and results has no more elements after currentLoc
        ✓ should return value of first element of results converted from bytes and done false when hasMore true and results has no more elements after currentLoc
        ✓ should return value of first element of results converted from bytes and done false when hasMore false and results has elements after currentLoc
        ✓ should return value of first element of results converted from bytes and done false when hasMore true and results has elements after currentLoc
        ✓ should return as expected with non-zero currentLoc
        ✓ should return value of first element of results converted from bytes and done false
      next
        ✓ should return _createAndEmitResult when there are elements left in the result set
        ✓ should return _createAndEmitResult when response hasMore and no error occurs
2020-07-02T12:39:46.813Z error [c-api:lib/iterators.js]                           unexpected error received getting next value: %s "some error" 
        ✓ should throw an error if error occurs when hasMore and listenerCount for data = 0
        ✓ should return done if response does not hasMore and listenerCount for end > 0
        ✓ should return done if response does not hasMore and listenerCount for end = 0
    StateQueryIterator
      ✓ should extend CommonIterator using QUERY for type
    HistoryQueryIterator
      ✓ should extend CommonIterator using HISTORY for type

  Logger
    ✓ coverage
2020-07-02T12:39:46.830Z error [c-api:_]                                          Unhandled Rejection reason __PERMITTED__ promise Promise { <rejected> '__PERMITTED__' }  
    getLogger
      ✓ should create a new logger name unknown
      ✓ should return existing logger if known name used
      ✓ should set the log level to fatal when env var set to CRITICAL
      ✓ should set the log level to error when env var set to ERROR
      ✓ should set the log level to warn when env var set to WARNING
      ✓ should set the log level to debug when env var set to DEBUG
    setLevel
      ✓ should update the loggers to be the level passed in
    formatter
      ✓ anonymous logger
      ✓ named logger

  Exports
    ✓ should export the start function
    ✓ should export the success function
    ✓ should export the error function
    ✓ should export the Shim class
    ✓ should export the Stub class
    ✓ should export the ChaincodeInterface class
    ✓ should export the ClientIdentity class
    ✓ should export the Iterators.HistoryQueryIterator class
    ✓ should export the HistoryQueryIterator class
    ✓ should export the Iterators.StateQueryIterator class
    ✓ should export the StateQueryIterator class

  ChaincodeServer
    constructor
      ✓ should create a gRPC server instance and call addService in the constructor
      ✓ should create a gRPC server instance with TLS credentials and call addService in the constructor
      ✓ should create a gRPC server instance with mutual TLS credentials and call addService in the constructor
      ✓ should throw an error when chaincode is missing
      ✓ should throw an error when chaincode implements only Invoke
      ✓ should throw an error when chaincode implements only Init
      ✓ should throw an error when serverOpts is missing
      ✓ should throw an error when serverOpts.ccid is missing
      ✓ should throw an error when serverOpts.address is missing
      ✓ should throw an error when serverOpts.tlsProps.key is missing
      ✓ should throw an error when serverOpts.tlsProps.cert is missing
    start()
      ✓ should call bindAsync and start
2020-07-02T12:39:46.853Z error [c-api:lib/server.js]                              ChaincodeServer failed to bind to 0.0.0.0:9999  
      ✓ should throw if bindAsync fails
    connect()
      ✓ should call connect
2020-07-02T12:39:46.857Z warn [c-api:lib/server.js]                               connection from peer failed: Error: Some error from chat  
      ✓ should not throw even if chat fails

  Stub
    validateCompositeKeyAttribute
      ✓ should throw an error if no attribute passed
      ✓ should throw an error if attribute not string
      ✓ should throw an error if attribute empty string
    computeProposalBinding
      ✓ should return hash of decodedSP
    convertToAsyncIterator
      ✓ should inject a function into the promise that returns an object with the correct methods
      ✓ should be possible to iterate using async for of
      ✓ should close the iterator if we break out of the loop
      ✓ should close the iterator if we break out of the loop straight away
      ✓ should close the iterator if we throw out of the loop
      ✓ should work with a promise that returns an object with an iterator property deconstructed by the caller
      ✓ should work with a promise that returns an object with an iterator property not deconstructed by caller
      ✓ should handle a promise rejection
    ChaincodeStub
      ✓ should set up the vars and do nothing more with no signed proposal
      ✓ should throw an error for an invalid proposal
      ✓ should throw an error for a proposal with an empty header
      ✓ should throw an error for a proposal with an empty payload
      ✓ should throw an error for a proposal with an invalid header
      ✓ should throw an error for a proposal with an invalid signature header
      ✓ should throw an error for a proposal with an invalid creator
      ✓ should throw an error for a proposal with an invalid channelHeader
      ✓ should throw an error for a proposal with an invalid payload
      ✓ should set all the env vars with a valid signed proposal
      getArgs
        ✓ should return the args
      getStringArgs
        ✓ should return the args
      getBufferArgs
        ✓ should return the args
      getFunctionAndParameters
        ✓ should return the function name parameters
        ✓ should return string for function and empty array as param if only one arg
        ✓ should return empty string for function and empty array for params if no args
      getTxID
        ✓ should return txId
      getChannelID
        ✓ should return channel_id
      getCreator
        ✓ should return creator
      getMspID
        ✓ should return MSPID
        ✓ should throw Error if MSPID is not available
      getTransient
        ✓ should return transient map
      getSignedProposal
        ✓ should return signed proposal
      getTxTimestamp
        ✓ should return transaction timestamp
      getBinding
        ✓ should return binding
      getState
        ✓ should return handler.handleGetState
      putState
        ✓ should return handler.handlePutState
        ✓ should return handler.handlePutState
      deleteState
        ✓ should return handler.handleDeleteState
      setStateValidationParameter
        ✓ should return handler.handlePutStateMetadata
      getStateValidationParameter
        ✓ should return handler.handleGetStateMetadata
      getStateByRange
        ✓ should return handler.handleGetStateByRange
        ✓ should return handler.handleGetStateByRange using empty key substitute
        ✓ should throw error if using compositekey
      getStateByRangeWithPagination
        ✓ should throw error if using compositekey
        ✓ should have default startKey eqls EMPTY_KEY_SUBSTITUTE
        ✓ should have default bookmark eqls an empty string
        ✓ should have default bookmark eqls an empty string
      getQueryResult
        ✓ should return handler.handleGetQueryResult
      getQueryResultWithPagination
        ✓ should have default bookmark equals an empty string
        ✓ should have default bookmark equals an empty string
      getHistoryForKey
        ✓ should return handler.handleGetHistoryForKey
      invokeChaincode
        ✓ should return handler.handleInvokeChaincode
        ✓ should return handler.handleInvokeChaincode handling no channel passed
      setEvent
        ✓ should throw an error when name is not a string
        ✓ should throw an error when name is empty string
        ✓ should set an event
      createCompositeKey
        ✓ should throw an error if attributes is not an array
        ✓ should return a composite key
      splitCompositeKey
        ✓ should return object with empty values when no composite key
        ✓ should return object with empty values when composite key only has one character
        ✓ should return object with empty values when composite key does not have first character as COMPOSITEKEY_NS
        ✓ should return object with objectType set but no attributes
        ✓ should return object with objectType set and array of attributes
      getStateByPartialCompositeKey
        ✓ should return handler.handleGetStateByRange using composite key
      getStateByPartialCompositeKeyWithPagination
        ✓ the default bookmark should equal an empty string
        ✓ should return getStateByRangeWithPagination with bookmark and pageSize
      getPrivateData
        ✓ should throw an error if no arguments supplied
        ✓ should throw an error if one argument supplied
        ✓ should throw an error if collection null
        ✓ should return handler.handleGetState
      getPrivateDataHash
        ✓ should throw an error if no arguments supplied
        ✓ should throw an error if one argument supplied
        ✓ should throw an error if collection null
        ✓ should return handler.handleGetPrivateDataHash
      putPrivateData
        ✓ should throw an error if no arguments supplied
        ✓ should throw an error if one argument supplied
        ✓ should throw an error if two arguments supplied
        ✓ should throw an error if collection null
        ✓ should throw an error if key null
        ✓ should return handler.handlePutState with string
        ✓ should return handler.handlePutState with object
      deletePrivateData
        ✓ should throw an error if no arguments supplied
        ✓ should throw an error if one argument supplied
        ✓ should throw an error if collection null
        ✓ should return handler.handleDeleteState
      setPrivateDataValidationParameter
        ✓ should return handler.handlePutStateMetadata
      getPrivateDataValidationParameter
        ✓ should return handler.handleGetStateMetadata
      getPrivateDataByRange
        ✓ should throw an error if no arguments supplied
        ✓ should throw an error if one argument supplied
        ✓ should throw an error if two arguments supplied
        ✓ should throw an error if collection null
        ✓ should use a substitute start key if none provided
        ✓ should return handler.handleGetStateByRange
      getPrivateDataByPartialCompositeKey
        ✓ should throw an error if no arguments supplied
        ✓ should throw an error if one argument supplied
        ✓ should throw an error if two arguments supplied
        ✓ should throw an error if collection null
        ✓ should return stub.getPrivateDataByRange
      getPrivateDataQueryResult
        ✓ should throw an error if no arguments supplied
        ✓ should throw an error if one argument supplied
        ✓ should throw an error if collection null
        ✓ should return handler.handleGetQueryResult

  KeyEndorsementPolicy
    #constructor
      ✓ should success for no policy
      ✓ should decode policy
    #addOrgs
      ✓ should throw error if role is not supported
      ✓ should throw error if role is missing
      ✓ should success add multiple orgs
      ✓ should success add one org
      ✓ should success add one peer org
      ✓ should not throw error if no orgs
    #_getPolicyFromMspId
      ✓ should successfully get policy from mspIds
    #_setMspIdsFromSPE
      ✓ should successfully set mspIds from spe
    #delOrgs
      ✓ should successfully delete one org
      ✓ should successfully delete multiple orgs
    #getPolicy
      ✓ should successfully get policy

  utils
    generateLoggingPrefix
      ✓ should shorten txids over 8 letters
      ✓ should leave txids shorter than 8 as was
      ✓ should leave txids exactly 8 letters as was


  429 passing (2s)
  1 pending


=============================== Coverage summary ===============================
Statements   : 100% ( 1204/1204 )
Branches     : 100% ( 497/497 )
Functions    : 100% ( 200/200 )
Lines        : 100% ( 1196/1196 )
================================================================================
